--// Variables

local RSLibrary = {}

local RSCore = {}
local ContextCore = {}

local TableDragQueue = {}
local TableRBXConnections = {}
local TableFunctionTasks = {}
local TableCoroutineTasks = {}
local TableTempValues = {}
local TableKeybinds = {}
local TableSubContainers = {}
local TableBehaviors = {}
local TableDebugLog = {}

local CountCreatedContainers = 0
local CountCreatedRows = 0
local CountCreatedCharacters = 0
local CountCreatedSubContainers = 0

local abs_zero = Vector3.one*0

local TamperedContextCore = false
local isprocess = false

local Player = game:GetService("Players").LocalPlayer
local Mouse = Player:GetMouse()

local CoreGui = Player.PlayerGui
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")


--// Functions

local inf = 9^70
-- v2.4 in 3.8267810344696045
local SerializedTable = {}
local function InsertSerial()
	SerializedTable[`g_ScreenUI`] = Instance.new(`ScreenGui`)
	SerializedTable[`g_MainWindow`] = Instance.new(`CanvasGroup`)
	SerializedTable[`Window`] = Instance.new(`Frame`)
	SerializedTable[`Topbar`] = Instance.new(`Frame`)
	SerializedTable[`g_TitleText`] = Instance.new(`TextLabel`)
	SerializedTable[`ImageLabel`] = Instance.new(`ImageLabel`)
	SerializedTable[`7`] = Instance.new(`ImageLabel`)
	SerializedTable[`g_CloseWindow`] = Instance.new(`TextButton`)
	SerializedTable[`g_HamburgerWindow`] = Instance.new(`TextButton`)
	SerializedTable[`CommandPanel`] = Instance.new(`Frame`)
	SerializedTable[`g_ExampleCommandHolder`] = Instance.new(`ScrollingFrame`)
	SerializedTable[`holder`] = Instance.new(`ScrollingFrame`)
	SerializedTable[`UIListLayout`] = Instance.new(`UIListLayout`)
	SerializedTable[`UIPadding`] = Instance.new(`UIPadding`)
	SerializedTable[`g_ExampleSubCommandCategory`] = Instance.new(`Frame`)
	SerializedTable[`label`] = Instance.new(`TextLabel`)
	SerializedTable[`17`] = Instance.new(`UIPadding`)
	SerializedTable[`dropd`] = Instance.new(`TextButton`)
	SerializedTable[`UIAspectRatioConstraint`] = Instance.new(`UIAspectRatioConstraint`)
	SerializedTable[`20`] = Instance.new(`Frame`)
	SerializedTable[`21`] = Instance.new(`UIListLayout`)
	SerializedTable[`22`] = Instance.new(`UIPadding`)
	SerializedTable[`g_ExampleCommandRow`] = Instance.new(`Frame`)
	SerializedTable[`button`] = Instance.new(`TextButton`)
	SerializedTable[`stylelist`] = Instance.new(`Frame`)
	SerializedTable[`boolean`] = Instance.new(`Frame`)
	SerializedTable[`switch`] = Instance.new(`Frame`)
	SerializedTable[`true`] = Instance.new(`ImageLabel`)
	SerializedTable[`TextLabel`] = Instance.new(`TextLabel`)
	SerializedTable[`false`] = Instance.new(`ImageLabel`)
	SerializedTable[`31`] = Instance.new(`TextLabel`)
	SerializedTable[`32`] = Instance.new(`UIPadding`)
	SerializedTable[`33`] = Instance.new(`TextButton`)
	SerializedTable[`string`] = Instance.new(`Frame`)
	SerializedTable[`textbox`] = Instance.new(`Frame`)
	SerializedTable[`edittext`] = Instance.new(`TextBox`)
	SerializedTable[`UISizeConstraint`] = Instance.new(`UISizeConstraint`)
	SerializedTable[`38`] = Instance.new(`UIPadding`)
	SerializedTable[`39`] = Instance.new(`UIPadding`)
	SerializedTable[`40`] = Instance.new(`TextButton`)
	SerializedTable[`41`] = Instance.new(`UIPadding`)
	SerializedTable[`42`] = Instance.new(`Frame`)
	SerializedTable[`43`] = Instance.new(`TextButton`)
	SerializedTable[`slider`] = Instance.new(`Frame`)
	SerializedTable[`45`] = Instance.new(`TextButton`)
	SerializedTable[`slide`] = Instance.new(`Frame`)
	SerializedTable[`47`] = Instance.new(`Frame`)
	SerializedTable[`48`] = Instance.new(`TextLabel`)
	SerializedTable[`end`] = Instance.new(`Frame`)
	SerializedTable[`50`] = Instance.new(`UIPadding`)
	SerializedTable[`51`] = Instance.new(`UIPadding`)
	SerializedTable[`g_ConfigButtonHolder`] = Instance.new(`ScrollingFrame`)
	SerializedTable[`g_ExampleConfigButtonRow`] = Instance.new(`Frame`)
	SerializedTable[`ico`] = Instance.new(`ImageButton`)
	SerializedTable[`55`] = Instance.new(`UIListLayout`)
	SerializedTable[`56`] = Instance.new(`UIPadding`)
	SerializedTable[`Frame`] = Instance.new(`Frame`)
	SerializedTable[`g_SidebarHolder`] = Instance.new(`ScrollingFrame`)
	SerializedTable[`g_ExampleSidebarRow`] = Instance.new(`Frame`)
	SerializedTable[`60`] = Instance.new(`TextButton`)
	SerializedTable[`61`] = Instance.new(`UIPadding`)
	SerializedTable[`62`] = Instance.new(`UIPadding`)
	SerializedTable[`63`] = Instance.new(`UIListLayout`)
	SerializedTable[`bg`] = Instance.new(`Frame`)
	SerializedTable[`UIDragDetector`] = Instance.new(`UIDragDetector`)
	SerializedTable[`LowResWindow`] = Instance.new(`Frame`)
	SerializedTable[`S_RESIZE`] = Instance.new(`Frame`)
	SerializedTable[`Right`] = Instance.new(`Frame`)
	SerializedTable[`Left`] = Instance.new(`Frame`)
	SerializedTable[`Top`] = Instance.new(`Frame`)
	SerializedTable[`Bottom`] = Instance.new(`Frame`)
	SerializedTable[`g_DocumentationPopup`] = Instance.new(`CanvasGroup`)
	SerializedTable[`73`] = Instance.new(`Frame`)
	SerializedTable[`74`] = Instance.new(`Frame`)
	SerializedTable[`75`] = Instance.new(`TextLabel`)
	SerializedTable[`76`] = Instance.new(`ImageLabel`)
	SerializedTable[`close`] = Instance.new(`TextButton`)
	SerializedTable[`g_DocumentationHolder`] = Instance.new(`ScrollingFrame`)
	SerializedTable[`g_ExampleDocumentationRow`] = Instance.new(`Frame`)
	SerializedTable[`fname`] = Instance.new(`TextLabel`)
	SerializedTable[`rtn`] = Instance.new(`TextLabel`)
	SerializedTable[`fdescrip`] = Instance.new(`TextLabel`)
	SerializedTable[`rtng`] = Instance.new(`TextLabel`)
	SerializedTable[`84`] = Instance.new(`UIListLayout`)
	SerializedTable[`85`] = Instance.new(`UIPadding`)
	SerializedTable[`g_ContextMenu`] = Instance.new(`CanvasGroup`)
	SerializedTable[`g_ExampleContextFrame`] = Instance.new(`Frame`)
	SerializedTable[`TextButton`] = Instance.new(`TextButton`)
	SerializedTable[`89`] = Instance.new(`UIPadding`)
	SerializedTable[`90`] = Instance.new(`UIListLayout`)
	SerializedTable[`divisor`] = Instance.new(`Frame`)
	SerializedTable[`b`] = Instance.new(`Frame`)
	SerializedTable[`g_KeybindPopup`] = Instance.new(`CanvasGroup`)
	SerializedTable[`94`] = Instance.new(`Frame`)
	SerializedTable[`95`] = Instance.new(`Frame`)
	SerializedTable[`96`] = Instance.new(`TextLabel`)
	SerializedTable[`97`] = Instance.new(`ImageLabel`)
	SerializedTable[`98`] = Instance.new(`TextButton`)
	SerializedTable[`g_TextboxPopup`] = Instance.new(`CanvasGroup`)
	SerializedTable[`100`] = Instance.new(`Frame`)
	SerializedTable[`TextBox`] = Instance.new(`TextBox`)
	SerializedTable[`102`] = Instance.new(`UIPadding`)
	SerializedTable[`103`] = Instance.new(`UIPadding`)
	SerializedTable[`context`] = Instance.new(`TextLabel`)
	SerializedTable[`105`] = Instance.new(`UISizeConstraint`)
	SerializedTable[`g_NotificationHolder`] = Instance.new(`CanvasGroup`)
	SerializedTable[`107`] = Instance.new(`UIPadding`)
	SerializedTable[`108`] = Instance.new(`UIListLayout`)
	SerializedTable[`oldExampleNotifFrame`] = Instance.new(`TextLabel`)
	SerializedTable[`110`] = Instance.new(`UIPadding`)
	SerializedTable[`111`] = Instance.new(`UISizeConstraint`)
	SerializedTable[`g_ExampleNotifFrame`] = Instance.new(`Frame`)
	SerializedTable[`txt`] = Instance.new(`TextLabel`)
	SerializedTable[`114`] = Instance.new(`UIPadding`)
	SerializedTable[`115`] = Instance.new(`UISizeConstraint`)
	SerializedTable[`bu`] = Instance.new(`Frame`)
	SerializedTable[`exop`] = Instance.new(`TextButton`)
	SerializedTable[`118`] = Instance.new(`UIPadding`)
	SerializedTable[`119`] = Instance.new(`UIListLayout`)
	SerializedTable[`120`] = Instance.new(`UIPadding`)
	SerializedTable[`g_ColorPickerPopup`] = Instance.new(`CanvasGroup`)
	SerializedTable[`122`] = Instance.new(`Frame`)
	SerializedTable[`123`] = Instance.new(`Frame`)
	SerializedTable[`124`] = Instance.new(`TextLabel`)
	SerializedTable[`125`] = Instance.new(`ImageLabel`)
	SerializedTable[`126`] = Instance.new(`TextButton`)
	SerializedTable[`127`] = Instance.new(`Frame`)
	SerializedTable[`128`] = Instance.new(`UIAspectRatioConstraint`)
	SerializedTable[`UIGradient`] = Instance.new(`UIGradient`)
	SerializedTable[`130`] = Instance.new(`Frame`)
	SerializedTable[`131`] = Instance.new(`UIAspectRatioConstraint`)
	SerializedTable[`132`] = Instance.new(`UIAspectRatioConstraint`)
	SerializedTable[`g_ScreenUI`].Name = `g_ScreenUI`;SerializedTable[`g_ScreenUI`].Parent = nil;SerializedTable[`g_ScreenUI`].ZIndexBehavior = Enum.ZIndexBehavior.Sibling;SerializedTable[`g_ScreenUI`].DisplayOrder = 100000000;
	SerializedTable[`g_MainWindow`].Name = `g_MainWindow`;SerializedTable[`g_MainWindow`].Parent = SerializedTable[`g_ScreenUI`];SerializedTable[`g_MainWindow`].AnchorPoint = Vector2.new(0.5,0.5);SerializedTable[`g_MainWindow`].BackgroundColor3 = Color3.fromRGB(56.0000042617321,56.0000042617321,56.0000042617321);SerializedTable[`g_MainWindow`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`g_MainWindow`].BorderSizePixel = 0;SerializedTable[`g_MainWindow`].Position = UDim2.new(0.5,0,0.5,1);SerializedTable[`g_MainWindow`].Size = UDim2.new(0.5,0,0.5,0);
	SerializedTable[`Window`].Name = `Window`;SerializedTable[`Window`].Parent = SerializedTable[`g_MainWindow`];SerializedTable[`Window`].Active = true;SerializedTable[`Window`].AnchorPoint = Vector2.new(0.5,0.5);SerializedTable[`Window`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`Window`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`Window`].Position = UDim2.new(0.5,0,0.5,0);SerializedTable[`Window`].Size = UDim2.new(1,-10,1,-10);
	SerializedTable[`Topbar`].Name = `Topbar`;SerializedTable[`Topbar`].Parent = SerializedTable[`Window`];SerializedTable[`Topbar`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`Topbar`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`Topbar`].Size = UDim2.new(1,0,0,20);
	SerializedTable[`g_TitleText`].Name = `g_TitleText`;SerializedTable[`g_TitleText`].Parent = SerializedTable[`Topbar`];SerializedTable[`g_TitleText`].AnchorPoint = Vector2.new(1,0);SerializedTable[`g_TitleText`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`g_TitleText`].BackgroundTransparency = 1;SerializedTable[`g_TitleText`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`g_TitleText`].BorderSizePixel = 0;SerializedTable[`g_TitleText`].Position = UDim2.new(1,0,0,0);SerializedTable[`g_TitleText`].Size = UDim2.new(1,-5,1,0);SerializedTable[`g_TitleText`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`g_TitleText`].FontSize = Enum.FontSize.Size14;SerializedTable[`g_TitleText`].Text = `Title Text`;SerializedTable[`g_TitleText`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`g_TitleText`].TextScaled = true;SerializedTable[`g_TitleText`].TextSize = 14;SerializedTable[`g_TitleText`].TextWrap = true;SerializedTable[`g_TitleText`].TextWrapped = true;SerializedTable[`g_TitleText`].TextXAlignment = Enum.TextXAlignment.Left;
	SerializedTable[`ImageLabel`].Parent = SerializedTable[`Topbar`];SerializedTable[`ImageLabel`].AnchorPoint = Vector2.new(1,0.5);SerializedTable[`ImageLabel`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`ImageLabel`].BackgroundTransparency = 1;SerializedTable[`ImageLabel`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`ImageLabel`].BorderSizePixel = 0;SerializedTable[`ImageLabel`].Position = UDim2.new(1,-2,0.5,0);SerializedTable[`ImageLabel`].Size = UDim2.new(0,17,0,17);SerializedTable[`ImageLabel`].Image = `rbxassetid://4661609682`;
	SerializedTable[`7`].Parent = SerializedTable[`Topbar`];SerializedTable[`7`].AnchorPoint = Vector2.new(1,0.5);SerializedTable[`7`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`7`].BackgroundTransparency = 1;SerializedTable[`7`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`7`].BorderSizePixel = 0;SerializedTable[`7`].Position = UDim2.new(1,-21,0.5,0);SerializedTable[`7`].Size = UDim2.new(0,17,0,17);SerializedTable[`7`].Visible = false;SerializedTable[`7`].Image = `rbxassetid://125418409411264`;
	SerializedTable[`g_CloseWindow`].Name = `g_CloseWindow`;SerializedTable[`g_CloseWindow`].Parent = SerializedTable[`Topbar`];SerializedTable[`g_CloseWindow`].AnchorPoint = Vector2.new(1,0);SerializedTable[`g_CloseWindow`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`g_CloseWindow`].BackgroundTransparency = 0.9990000128746033;SerializedTable[`g_CloseWindow`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`g_CloseWindow`].BorderSizePixel = 0;SerializedTable[`g_CloseWindow`].Position = UDim2.new(1,0,0,0);SerializedTable[`g_CloseWindow`].Size = UDim2.new(0,20,0,20);SerializedTable[`g_CloseWindow`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`g_CloseWindow`].FontSize = Enum.FontSize.Size14;SerializedTable[`g_CloseWindow`].Text = ``;SerializedTable[`g_CloseWindow`].TextColor3 = Color3.fromRGB(0,0,0);SerializedTable[`g_CloseWindow`].TextSize = 14;
	SerializedTable[`g_HamburgerWindow`].Name = `g_HamburgerWindow`;SerializedTable[`g_HamburgerWindow`].Parent = SerializedTable[`Topbar`];SerializedTable[`g_HamburgerWindow`].AnchorPoint = Vector2.new(1,0);SerializedTable[`g_HamburgerWindow`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`g_HamburgerWindow`].BackgroundTransparency = 0.9990000128746033;SerializedTable[`g_HamburgerWindow`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`g_HamburgerWindow`].BorderSizePixel = 0;SerializedTable[`g_HamburgerWindow`].Position = UDim2.new(1,-22,0,0);SerializedTable[`g_HamburgerWindow`].Size = UDim2.new(0,20,0,20);SerializedTable[`g_HamburgerWindow`].Visible = false;SerializedTable[`g_HamburgerWindow`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`g_HamburgerWindow`].FontSize = Enum.FontSize.Size14;SerializedTable[`g_HamburgerWindow`].Text = ``;SerializedTable[`g_HamburgerWindow`].TextColor3 = Color3.fromRGB(0,0,0);SerializedTable[`g_HamburgerWindow`].TextSize = 14;
	SerializedTable[`CommandPanel`].Name = `CommandPanel`;SerializedTable[`CommandPanel`].Parent = SerializedTable[`Window`];SerializedTable[`CommandPanel`].AnchorPoint = Vector2.new(0,1);SerializedTable[`CommandPanel`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`CommandPanel`].BackgroundTransparency = 1;SerializedTable[`CommandPanel`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`CommandPanel`].BorderSizePixel = 0;SerializedTable[`CommandPanel`].Position = UDim2.new(0,0,1,0);SerializedTable[`CommandPanel`].Size = UDim2.new(1,0,1,-20);
	SerializedTable[`g_ExampleCommandHolder`].Name = `g_ExampleCommandHolder`;SerializedTable[`g_ExampleCommandHolder`].Parent = SerializedTable[`CommandPanel`];SerializedTable[`g_ExampleCommandHolder`].Active = true;SerializedTable[`g_ExampleCommandHolder`].AnchorPoint = Vector2.new(1,0);SerializedTable[`g_ExampleCommandHolder`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`g_ExampleCommandHolder`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`g_ExampleCommandHolder`].Position = UDim2.new(1,-5,0,7);SerializedTable[`g_ExampleCommandHolder`].Size = UDim2.new(1,-170,1,-13);SerializedTable[`g_ExampleCommandHolder`].AutomaticCanvasSize = Enum.AutomaticSize.Y;SerializedTable[`g_ExampleCommandHolder`].CanvasSize = UDim2.new(0,0,0,0);SerializedTable[`g_ExampleCommandHolder`].ScrollBarImageColor3 = Color3.fromRGB(0,0,0);SerializedTable[`g_ExampleCommandHolder`].ScrollBarThickness = 0;
	SerializedTable[`holder`].Name = `holder`;SerializedTable[`holder`].Parent = SerializedTable[`g_ExampleCommandHolder`];SerializedTable[`holder`].Active = true;SerializedTable[`holder`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`holder`].BackgroundTransparency = 1;SerializedTable[`holder`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`holder`].BorderSizePixel = 0;SerializedTable[`holder`].Size = UDim2.new(1,0,1,0);SerializedTable[`holder`].AutomaticCanvasSize = Enum.AutomaticSize.Y;SerializedTable[`holder`].CanvasSize = UDim2.new(0,0,0,0);SerializedTable[`holder`].ScrollBarImageColor3 = Color3.fromRGB(0,0,0);SerializedTable[`holder`].ScrollBarThickness = 0;
	SerializedTable[`UIListLayout`].Parent = SerializedTable[`holder`];SerializedTable[`UIListLayout`].HorizontalAlignment = Enum.HorizontalAlignment.Center;SerializedTable[`UIListLayout`].SortOrder = Enum.SortOrder.LayoutOrder;SerializedTable[`UIListLayout`].Padding = UDim.new(0,5);
	SerializedTable[`UIPadding`].Parent = SerializedTable[`holder`];SerializedTable[`UIPadding`].PaddingBottom = UDim.new(0,5);SerializedTable[`UIPadding`].PaddingLeft = UDim.new(0,5);SerializedTable[`UIPadding`].PaddingRight = UDim.new(0,5);SerializedTable[`UIPadding`].PaddingTop = UDim.new(0,5);
	SerializedTable[`g_ExampleSubCommandCategory`].Name = `g_ExampleSubCommandCategory`;SerializedTable[`g_ExampleSubCommandCategory`].Parent = SerializedTable[`holder`];SerializedTable[`g_ExampleSubCommandCategory`].AutomaticSize = Enum.AutomaticSize.Y;SerializedTable[`g_ExampleSubCommandCategory`].BackgroundColor3 = Color3.fromRGB(56.0000042617321,56.0000042617321,56.0000042617321);SerializedTable[`g_ExampleSubCommandCategory`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`g_ExampleSubCommandCategory`].Size = UDim2.new(1,0,0,20);SerializedTable[`g_ExampleSubCommandCategory`].Visible = false;
	SerializedTable[`label`].Name = `label`;SerializedTable[`label`].Parent = SerializedTable[`g_ExampleSubCommandCategory`];SerializedTable[`label`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`label`].BackgroundTransparency = 1;SerializedTable[`label`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`label`].BorderSizePixel = 0;SerializedTable[`label`].Size = UDim2.new(1,0,0,20);SerializedTable[`label`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`label`].FontSize = Enum.FontSize.Size14;SerializedTable[`label`].Text = `Example Subcategory Label`;SerializedTable[`label`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`label`].TextScaled = true;SerializedTable[`label`].TextSize = 14;SerializedTable[`label`].TextWrap = true;SerializedTable[`label`].TextWrapped = true;SerializedTable[`label`].TextXAlignment = Enum.TextXAlignment.Left;
	SerializedTable[`17`].Parent = SerializedTable[`label`];SerializedTable[`17`].PaddingLeft = UDim.new(0,5);
	SerializedTable[`dropd`].Name = `dropd`;SerializedTable[`dropd`].Parent = SerializedTable[`g_ExampleSubCommandCategory`];SerializedTable[`dropd`].AnchorPoint = Vector2.new(1,0);SerializedTable[`dropd`].BackgroundColor3 = Color3.fromRGB(56.000000461936,56.000000461936,56.000000461936);SerializedTable[`dropd`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`dropd`].BorderSizePixel = 0;SerializedTable[`dropd`].Position = UDim2.new(1,0,0,0);SerializedTable[`dropd`].Rotation = 90;SerializedTable[`dropd`].Size = UDim2.new(0,20,0,20);SerializedTable[`dropd`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`dropd`].FontSize = Enum.FontSize.Size24;SerializedTable[`dropd`].Text = `>`;SerializedTable[`dropd`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`dropd`].TextSize = 20;
	SerializedTable[`UIAspectRatioConstraint`].Parent = SerializedTable[`dropd`];
	SerializedTable[`20`].Name = `holder`;SerializedTable[`20`].Parent = SerializedTable[`g_ExampleSubCommandCategory`];SerializedTable[`20`].AutomaticSize = Enum.AutomaticSize.Y;SerializedTable[`20`].BackgroundColor3 = Color3.fromRGB(56.0000042617321,56.0000042617321,56.0000042617321);SerializedTable[`20`].BackgroundTransparency = 1;SerializedTable[`20`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`20`].Size = UDim2.new(1,0,0,0);SerializedTable[`20`].ZIndex = 0;
	SerializedTable[`21`].Parent = SerializedTable[`20`];SerializedTable[`21`].HorizontalAlignment = Enum.HorizontalAlignment.Center;SerializedTable[`21`].SortOrder = Enum.SortOrder.LayoutOrder;SerializedTable[`21`].Padding = UDim.new(0,5);
	SerializedTable[`22`].Parent = SerializedTable[`20`];SerializedTable[`22`].PaddingBottom = UDim.new(0,5);SerializedTable[`22`].PaddingLeft = UDim.new(0,5);SerializedTable[`22`].PaddingRight = UDim.new(0,5);SerializedTable[`22`].PaddingTop = UDim.new(0,25);
	SerializedTable[`g_ExampleCommandRow`].Name = `g_ExampleCommandRow`;SerializedTable[`g_ExampleCommandRow`].Parent = SerializedTable[`holder`];SerializedTable[`g_ExampleCommandRow`].AutomaticSize = Enum.AutomaticSize.XY;SerializedTable[`g_ExampleCommandRow`].BackgroundColor3 = Color3.fromRGB(56.000000461936,56.000000461936,56.000000461936);SerializedTable[`g_ExampleCommandRow`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`g_ExampleCommandRow`].ClipsDescendants = true;SerializedTable[`g_ExampleCommandRow`].Size = UDim2.new(1,0,0,25);
	SerializedTable[`button`].Name = `button`;SerializedTable[`button`].Parent = SerializedTable[`g_ExampleCommandRow`];SerializedTable[`button`].BackgroundColor3 = Color3.fromRGB(56.000000461936,56.000000461936,56.000000461936);SerializedTable[`button`].BackgroundTransparency = 0.9990000128746033;SerializedTable[`button`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`button`].BorderSizePixel = 0;SerializedTable[`button`].Size = UDim2.new(1,0,1,0);SerializedTable[`button`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`button`].FontSize = Enum.FontSize.Size24;SerializedTable[`button`].Text = ``;SerializedTable[`button`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`button`].TextSize = 21;SerializedTable[`button`].TextTruncate = Enum.TextTruncate.SplitWord;SerializedTable[`button`].TextWrap = true;SerializedTable[`button`].TextWrapped = true;SerializedTable[`button`].TextXAlignment = Enum.TextXAlignment.Left;
	SerializedTable[`stylelist`].Name = `stylelist`;SerializedTable[`stylelist`].Parent = SerializedTable[`g_ExampleCommandRow`];SerializedTable[`stylelist`].AutomaticSize = Enum.AutomaticSize.XY;SerializedTable[`stylelist`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`stylelist`].BackgroundTransparency = 1;SerializedTable[`stylelist`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`stylelist`].BorderSizePixel = 0;SerializedTable[`stylelist`].Size = UDim2.new(1,0,0,25);
	SerializedTable[`boolean`].Name = `boolean`;SerializedTable[`boolean`].Parent = SerializedTable[`stylelist`];SerializedTable[`boolean`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`boolean`].BackgroundTransparency = 1;SerializedTable[`boolean`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`boolean`].BorderSizePixel = 0;SerializedTable[`boolean`].Size = UDim2.new(1,0,0,25);SerializedTable[`boolean`].Visible = false;
	SerializedTable[`switch`].Name = `switch`;SerializedTable[`switch`].Parent = SerializedTable[`boolean`];SerializedTable[`switch`].AnchorPoint = Vector2.new(1,0.5);SerializedTable[`switch`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`switch`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`switch`].ClipsDescendants = true;SerializedTable[`switch`].Position = UDim2.new(1,0,0.5,0);SerializedTable[`switch`].Size = UDim2.new(0,50,1,0);
	SerializedTable[`true`].Name = `true`;SerializedTable[`true`].Parent = SerializedTable[`switch`];SerializedTable[`true`].BackgroundColor3 = Color3.fromRGB(0,255,0);SerializedTable[`true`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`true`].Size = UDim2.new(0,25,0,19);SerializedTable[`true`].Image = `rbxasset://textures/ui/GuiImagePlaceholder.png`;SerializedTable[`true`].ImageTransparency = 1;
	SerializedTable[`TextLabel`].Parent = SerializedTable[`true`];SerializedTable[`TextLabel`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`TextLabel`].BackgroundTransparency = 1;SerializedTable[`TextLabel`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`TextLabel`].BorderSizePixel = 0;SerializedTable[`TextLabel`].Size = UDim2.new(1,0,1,0);SerializedTable[`TextLabel`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Bold,Enum.FontStyle.Normal,true);SerializedTable[`TextLabel`].FontSize = Enum.FontSize.Size14;SerializedTable[`TextLabel`].Text = `T`;SerializedTable[`TextLabel`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`TextLabel`].TextScaled = true;SerializedTable[`TextLabel`].TextSize = 14;SerializedTable[`TextLabel`].TextStrokeTransparency = 0;SerializedTable[`TextLabel`].TextWrap = true;SerializedTable[`TextLabel`].TextWrapped = true;
	SerializedTable[`false`].Name = `false`;SerializedTable[`false`].Parent = SerializedTable[`switch`];SerializedTable[`false`].AnchorPoint = Vector2.new(1,0);SerializedTable[`false`].BackgroundColor3 = Color3.fromRGB(255,0,0);SerializedTable[`false`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`false`].Position = UDim2.new(1,0,0,0);SerializedTable[`false`].Size = UDim2.new(0,25,0,19);SerializedTable[`false`].Image = `rbxasset://textures/ui/GuiImagePlaceholder.png`;SerializedTable[`false`].ImageTransparency = 1;
	SerializedTable[`31`].Parent = SerializedTable[`false`];SerializedTable[`31`].BackgroundColor3 = Color3.fromRGB(255,0,0);SerializedTable[`31`].BackgroundTransparency = 1;SerializedTable[`31`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`31`].BorderSizePixel = 0;SerializedTable[`31`].Size = UDim2.new(1,0,1,0);SerializedTable[`31`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Bold,Enum.FontStyle.Normal,true);SerializedTable[`31`].FontSize = Enum.FontSize.Size14;SerializedTable[`31`].Text = `F`;SerializedTable[`31`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`31`].TextScaled = true;SerializedTable[`31`].TextSize = 14;SerializedTable[`31`].TextStrokeTransparency = 0;SerializedTable[`31`].TextWrap = true;SerializedTable[`31`].TextWrapped = true;
	SerializedTable[`32`].Parent = SerializedTable[`boolean`];SerializedTable[`32`].PaddingBottom = UDim.new(0,2);SerializedTable[`32`].PaddingLeft = UDim.new(0,3);SerializedTable[`32`].PaddingRight = UDim.new(0,3);SerializedTable[`32`].PaddingTop = UDim.new(0,3);
	SerializedTable[`33`].Name = `label`;SerializedTable[`33`].Parent = SerializedTable[`boolean`];SerializedTable[`33`].BackgroundColor3 = Color3.fromRGB(56.000000461936,56.000000461936,56.000000461936);SerializedTable[`33`].BackgroundTransparency = 0.9990000128746033;SerializedTable[`33`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`33`].BorderSizePixel = 0;SerializedTable[`33`].Size = UDim2.new(1,0,0,21);SerializedTable[`33`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`33`].FontSize = Enum.FontSize.Size24;SerializedTable[`33`].Text = `Boolean Example Text`;SerializedTable[`33`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`33`].TextSize = 21;SerializedTable[`33`].TextTruncate = Enum.TextTruncate.SplitWord;SerializedTable[`33`].TextWrap = true;SerializedTable[`33`].TextWrapped = true;SerializedTable[`33`].TextXAlignment = Enum.TextXAlignment.Left;
	SerializedTable[`string`].Name = `string`;SerializedTable[`string`].Parent = SerializedTable[`stylelist`];SerializedTable[`string`].AutomaticSize = Enum.AutomaticSize.Y;SerializedTable[`string`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`string`].BackgroundTransparency = 1;SerializedTable[`string`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`string`].BorderSizePixel = 0;SerializedTable[`string`].Size = UDim2.new(1,0,0,25);
	SerializedTable[`textbox`].Name = `textbox`;SerializedTable[`textbox`].Parent = SerializedTable[`string`];SerializedTable[`textbox`].AnchorPoint = Vector2.new(1,0);SerializedTable[`textbox`].AutomaticSize = Enum.AutomaticSize.Y;SerializedTable[`textbox`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`textbox`].BackgroundTransparency = 1;SerializedTable[`textbox`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`textbox`].ClipsDescendants = true;SerializedTable[`textbox`].Position = UDim2.new(1,0,0,0);SerializedTable[`textbox`].Size = UDim2.new(0,200,0,0);
	SerializedTable[`edittext`].Name = `edittext`;SerializedTable[`edittext`].Parent = SerializedTable[`textbox`];SerializedTable[`edittext`].AnchorPoint = Vector2.new(1,0);SerializedTable[`edittext`].AutomaticSize = Enum.AutomaticSize.XY;SerializedTable[`edittext`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`edittext`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`edittext`].Position = UDim2.new(1,0,0,0);SerializedTable[`edittext`].Size = UDim2.new(0,5,0,0);SerializedTable[`edittext`].CursorPosition = -1;SerializedTable[`edittext`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`edittext`].FontSize = Enum.FontSize.Size24;SerializedTable[`edittext`].PlaceholderText = `String Input`;SerializedTable[`edittext`].Text = ``;SerializedTable[`edittext`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`edittext`].TextSize = 19;SerializedTable[`edittext`].TextWrap = true;SerializedTable[`edittext`].TextWrapped = true;SerializedTable[`edittext`].TextXAlignment = Enum.TextXAlignment.Right;
	SerializedTable[`UISizeConstraint`].Parent = SerializedTable[`edittext`];SerializedTable[`UISizeConstraint`].MinSize = Vector2.new(75,0);
	SerializedTable[`38`].Parent = SerializedTable[`edittext`];SerializedTable[`38`].PaddingLeft = UDim.new(0,5);SerializedTable[`38`].PaddingRight = UDim.new(0,5);
	SerializedTable[`39`].Parent = SerializedTable[`textbox`];SerializedTable[`39`].PaddingBottom = UDim.new(0,3);SerializedTable[`39`].PaddingLeft = UDim.new(0,3);SerializedTable[`39`].PaddingRight = UDim.new(0,3);SerializedTable[`39`].PaddingTop = UDim.new(0,3);
	SerializedTable[`40`].Name = `label`;SerializedTable[`40`].Parent = SerializedTable[`string`];SerializedTable[`40`].BackgroundColor3 = Color3.fromRGB(56.000000461936,56.000000461936,56.000000461936);SerializedTable[`40`].BackgroundTransparency = 0.9990000128746033;SerializedTable[`40`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`40`].BorderSizePixel = 0;SerializedTable[`40`].Size = UDim2.new(1,0,0,25);SerializedTable[`40`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`40`].FontSize = Enum.FontSize.Size24;SerializedTable[`40`].Text = `String Example Text`;SerializedTable[`40`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`40`].TextSize = 21;SerializedTable[`40`].TextTruncate = Enum.TextTruncate.SplitWord;SerializedTable[`40`].TextWrap = true;SerializedTable[`40`].TextWrapped = true;SerializedTable[`40`].TextXAlignment = Enum.TextXAlignment.Left;
	SerializedTable[`41`].Parent = SerializedTable[`40`];SerializedTable[`41`].PaddingBottom = UDim.new(0,3);SerializedTable[`41`].PaddingLeft = UDim.new(0,3);SerializedTable[`41`].PaddingRight = UDim.new(0,3);SerializedTable[`41`].PaddingTop = UDim.new(0,3);
	SerializedTable[`42`].Name = `button`;SerializedTable[`42`].Parent = SerializedTable[`stylelist`];SerializedTable[`42`].AutomaticSize = Enum.AutomaticSize.Y;SerializedTable[`42`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`42`].BackgroundTransparency = 1;SerializedTable[`42`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`42`].BorderSizePixel = 0;SerializedTable[`42`].Size = UDim2.new(1,0,0,25);SerializedTable[`42`].Visible = false;
	SerializedTable[`43`].Name = `label`;SerializedTable[`43`].Parent = SerializedTable[`42`];SerializedTable[`43`].BackgroundColor3 = Color3.fromRGB(56.000000461936,56.000000461936,56.000000461936);SerializedTable[`43`].BackgroundTransparency = 1;SerializedTable[`43`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`43`].BorderSizePixel = 0;SerializedTable[`43`].Size = UDim2.new(1,0,1,0);SerializedTable[`43`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`43`].FontSize = Enum.FontSize.Size24;SerializedTable[`43`].Text = `Button Example Text`;SerializedTable[`43`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`43`].TextSize = 21;SerializedTable[`43`].TextTruncate = Enum.TextTruncate.SplitWord;SerializedTable[`43`].TextWrap = true;SerializedTable[`43`].TextWrapped = true;
	SerializedTable[`slider`].Name = `slider`;SerializedTable[`slider`].Parent = SerializedTable[`stylelist`];SerializedTable[`slider`].BackgroundColor3 = Color3.fromRGB(5.000000176951289,5.000000176951289,5.000000176951289);SerializedTable[`slider`].BackgroundTransparency = 1;SerializedTable[`slider`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`slider`].BorderSizePixel = 0;SerializedTable[`slider`].Size = UDim2.new(1,0,0,25);SerializedTable[`slider`].Visible = false;
	SerializedTable[`45`].Name = `label`;SerializedTable[`45`].Parent = SerializedTable[`slider`];SerializedTable[`45`].BackgroundColor3 = Color3.fromRGB(56.000000461936,56.000000461936,56.000000461936);SerializedTable[`45`].BackgroundTransparency = 0.9990000128746033;SerializedTable[`45`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`45`].BorderSizePixel = 0;SerializedTable[`45`].Size = UDim2.new(1,0,0,21);SerializedTable[`45`].ZIndex = 3;SerializedTable[`45`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`45`].FontSize = Enum.FontSize.Size24;SerializedTable[`45`].Text = `Slider Example Text`;SerializedTable[`45`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`45`].TextSize = 21;SerializedTable[`45`].TextStrokeTransparency = 0;SerializedTable[`45`].TextTruncate = Enum.TextTruncate.SplitWord;SerializedTable[`45`].TextWrap = true;SerializedTable[`45`].TextWrapped = true;
	SerializedTable[`slide`].Name = `slide`;SerializedTable[`slide`].Parent = SerializedTable[`slider`];SerializedTable[`slide`].BackgroundColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`slide`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`slide`].ClipsDescendants = true;SerializedTable[`slide`].Size = UDim2.new(1,0,1,0);
	SerializedTable[`47`].Name = `switch`;SerializedTable[`47`].Parent = SerializedTable[`slide`];SerializedTable[`47`].AnchorPoint = Vector2.new(0.5,0);SerializedTable[`47`].BackgroundColor3 = Color3.fromRGB(75.00000312924385,75.00000312924385,75.00000312924385);SerializedTable[`47`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`47`].ClipsDescendants = true;SerializedTable[`47`].Size = UDim2.new(0,25,1,0);
	SerializedTable[`48`].Parent = SerializedTable[`47`];SerializedTable[`48`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`48`].BackgroundTransparency = 1;SerializedTable[`48`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`48`].BorderSizePixel = 0;SerializedTable[`48`].Size = UDim2.new(0,25,1,0);SerializedTable[`48`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Bold,Enum.FontStyle.Normal,true);SerializedTable[`48`].FontSize = Enum.FontSize.Size14;SerializedTable[`48`].Text = `S`;SerializedTable[`48`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`48`].TextScaled = true;SerializedTable[`48`].TextSize = 14;SerializedTable[`48`].TextStrokeTransparency = 0;SerializedTable[`48`].TextWrap = true;SerializedTable[`48`].TextWrapped = true;
	SerializedTable[`end`].Name = `end`;SerializedTable[`end`].Parent = SerializedTable[`slide`];SerializedTable[`end`].Active = true;SerializedTable[`end`].BackgroundColor3 = Color3.fromRGB(75.00000312924385,75.00000312924385,75.00000312924385);SerializedTable[`end`].BackgroundTransparency = 1;SerializedTable[`end`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`end`].ClipsDescendants = true;SerializedTable[`end`].Position = UDim2.new(1,0,0,0);SerializedTable[`end`].Size = UDim2.new(0,25,1,0);SerializedTable[`end`].Visible = false;
	SerializedTable[`50`].Parent = SerializedTable[`slide`];SerializedTable[`50`].PaddingLeft = UDim.new(0,12);SerializedTable[`50`].PaddingRight = UDim.new(0,12);
	SerializedTable[`51`].Parent = SerializedTable[`slider`];SerializedTable[`51`].PaddingBottom = UDim.new(0,2);SerializedTable[`51`].PaddingLeft = UDim.new(0,3);SerializedTable[`51`].PaddingRight = UDim.new(0,3);SerializedTable[`51`].PaddingTop = UDim.new(0,3);
	SerializedTable[`g_ConfigButtonHolder`].Name = `g_ConfigButtonHolder`;SerializedTable[`g_ConfigButtonHolder`].Parent = SerializedTable[`CommandPanel`];SerializedTable[`g_ConfigButtonHolder`].Active = true;SerializedTable[`g_ConfigButtonHolder`].AnchorPoint = Vector2.new(0,1);SerializedTable[`g_ConfigButtonHolder`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`g_ConfigButtonHolder`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`g_ConfigButtonHolder`].Position = UDim2.new(0,5,1,-6);SerializedTable[`g_ConfigButtonHolder`].Size = UDim2.new(0,153,0,30);SerializedTable[`g_ConfigButtonHolder`].Visible = false;SerializedTable[`g_ConfigButtonHolder`].AutomaticCanvasSize = Enum.AutomaticSize.X;SerializedTable[`g_ConfigButtonHolder`].CanvasSize = UDim2.new(0,0,0,0);SerializedTable[`g_ConfigButtonHolder`].ScrollBarImageColor3 = Color3.fromRGB(0,0,0);SerializedTable[`g_ConfigButtonHolder`].ScrollBarThickness = 0;
	SerializedTable[`g_ExampleConfigButtonRow`].Name = `g_ExampleConfigButtonRow`;SerializedTable[`g_ExampleConfigButtonRow`].Parent = SerializedTable[`g_ConfigButtonHolder`];SerializedTable[`g_ExampleConfigButtonRow`].AutomaticSize = Enum.AutomaticSize.Y;SerializedTable[`g_ExampleConfigButtonRow`].BackgroundColor3 = Color3.fromRGB(56.000000461936,56.000000461936,56.000000461936);SerializedTable[`g_ExampleConfigButtonRow`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`g_ExampleConfigButtonRow`].ClipsDescendants = true;SerializedTable[`g_ExampleConfigButtonRow`].Size = UDim2.new(0,24,0,24);
	SerializedTable[`ico`].Name = `ico`;SerializedTable[`ico`].Parent = SerializedTable[`g_ExampleConfigButtonRow`];SerializedTable[`ico`].AnchorPoint = Vector2.new(0.5,0.5);SerializedTable[`ico`].BackgroundColor3 = Color3.fromRGB(56.000000461936,56.000000461936,56.000000461936);SerializedTable[`ico`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`ico`].BorderSizePixel = 0;SerializedTable[`ico`].Position = UDim2.new(0.5,0,0.5,0);SerializedTable[`ico`].Size = UDim2.new(0,20,0,20);SerializedTable[`ico`].Image = `rbxassetid://9405931578`;
	SerializedTable[`55`].Parent = SerializedTable[`g_ConfigButtonHolder`];SerializedTable[`55`].FillDirection = Enum.FillDirection.Horizontal;SerializedTable[`55`].SortOrder = Enum.SortOrder.LayoutOrder;SerializedTable[`55`].VerticalAlignment = Enum.VerticalAlignment.Center;SerializedTable[`55`].Padding = UDim.new(0,4);
	SerializedTable[`56`].Parent = SerializedTable[`g_ConfigButtonHolder`];SerializedTable[`56`].PaddingLeft = UDim.new(0,3);
	SerializedTable[`Frame`].Parent = SerializedTable[`CommandPanel`];SerializedTable[`Frame`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`Frame`].BackgroundTransparency = 1;SerializedTable[`Frame`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`Frame`].BorderSizePixel = 0;SerializedTable[`Frame`].Position = UDim2.new(0,5,0,7);SerializedTable[`Frame`].Size = UDim2.new(0,153,1,-13);
	SerializedTable[`g_SidebarHolder`].Name = `g_SidebarHolder`;SerializedTable[`g_SidebarHolder`].Parent = SerializedTable[`Frame`];SerializedTable[`g_SidebarHolder`].Active = true;SerializedTable[`g_SidebarHolder`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`g_SidebarHolder`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`g_SidebarHolder`].Size = UDim2.new(1,0,1,0);SerializedTable[`g_SidebarHolder`].AutomaticCanvasSize = Enum.AutomaticSize.Y;SerializedTable[`g_SidebarHolder`].CanvasSize = UDim2.new(0,0,0,0);SerializedTable[`g_SidebarHolder`].ScrollBarImageColor3 = Color3.fromRGB(0,0,0);SerializedTable[`g_SidebarHolder`].ScrollBarThickness = 0;
	SerializedTable[`g_ExampleSidebarRow`].Name = `g_ExampleSidebarRow`;SerializedTable[`g_ExampleSidebarRow`].Parent = SerializedTable[`g_SidebarHolder`];SerializedTable[`g_ExampleSidebarRow`].AutomaticSize = Enum.AutomaticSize.Y;SerializedTable[`g_ExampleSidebarRow`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`g_ExampleSidebarRow`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`g_ExampleSidebarRow`].ClipsDescendants = true;SerializedTable[`g_ExampleSidebarRow`].Size = UDim2.new(1,0,0,25);
	SerializedTable[`60`].Name = `button`;SerializedTable[`60`].Parent = SerializedTable[`g_ExampleSidebarRow`];SerializedTable[`60`].AutomaticSize = Enum.AutomaticSize.Y;SerializedTable[`60`].BackgroundColor3 = Color3.fromRGB(56.000000461936,56.000000461936,56.000000461936);SerializedTable[`60`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`60`].BorderSizePixel = 0;SerializedTable[`60`].Size = UDim2.new(1,0,1,0);SerializedTable[`60`].AutoButtonColor = false;SerializedTable[`60`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`60`].FontSize = Enum.FontSize.Size24;SerializedTable[`60`].Text = `Button Text Example`;SerializedTable[`60`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`60`].TextSize = 21;SerializedTable[`60`].TextTruncate = Enum.TextTruncate.SplitWord;SerializedTable[`60`].TextWrap = true;SerializedTable[`60`].TextWrapped = true;SerializedTable[`60`].TextXAlignment = Enum.TextXAlignment.Left;
	SerializedTable[`61`].Parent = SerializedTable[`60`];SerializedTable[`61`].PaddingBottom = UDim.new(0,3);SerializedTable[`61`].PaddingLeft = UDim.new(0,3);SerializedTable[`61`].PaddingRight = UDim.new(0,3);SerializedTable[`61`].PaddingTop = UDim.new(0,3);
	SerializedTable[`62`].Parent = SerializedTable[`g_SidebarHolder`];SerializedTable[`62`].PaddingBottom = UDim.new(0,5);SerializedTable[`62`].PaddingLeft = UDim.new(0,5);SerializedTable[`62`].PaddingRight = UDim.new(0,5);SerializedTable[`62`].PaddingTop = UDim.new(0,5);
	SerializedTable[`63`].Parent = SerializedTable[`g_SidebarHolder`];SerializedTable[`63`].HorizontalAlignment = Enum.HorizontalAlignment.Center;SerializedTable[`63`].SortOrder = Enum.SortOrder.LayoutOrder;SerializedTable[`63`].Padding = UDim.new(0,5);
	SerializedTable[`bg`].Name = `bg`;SerializedTable[`bg`].Parent = SerializedTable[`g_MainWindow`];SerializedTable[`bg`].AnchorPoint = Vector2.new(0.5,0.5);SerializedTable[`bg`].BackgroundColor3 = Color3.fromRGB(56.0000042617321,56.0000042617321,56.0000042617321);SerializedTable[`bg`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`bg`].Position = UDim2.new(0.5,0,0.5,0);SerializedTable[`bg`].Size = UDim2.new(1,-2,1,-2);SerializedTable[`bg`].ZIndex = -999999999;
	SerializedTable[`UIDragDetector`].Parent = SerializedTable[`g_MainWindow`];
	SerializedTable[`LowResWindow`].Name = `LowResWindow`;SerializedTable[`LowResWindow`].Parent = SerializedTable[`g_MainWindow`];SerializedTable[`LowResWindow`].AnchorPoint = Vector2.new(0.5,0.5);SerializedTable[`LowResWindow`].BackgroundColor3 = Color3.fromRGB(56.0000042617321,56.0000042617321,56.0000042617321);SerializedTable[`LowResWindow`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`LowResWindow`].Position = UDim2.new(0.5,0,0.5,0);SerializedTable[`LowResWindow`].Size = UDim2.new(0.5,0,0.5,0);SerializedTable[`LowResWindow`].Visible = false;
	SerializedTable[`S_RESIZE`].Name = `S_RESIZE`;SerializedTable[`S_RESIZE`].Parent = SerializedTable[`g_MainWindow`];SerializedTable[`S_RESIZE`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`S_RESIZE`].BackgroundTransparency = 1;SerializedTable[`S_RESIZE`].BorderColor3 = Color3.fromRGB(255,255,255);SerializedTable[`S_RESIZE`].BorderSizePixel = 0;SerializedTable[`S_RESIZE`].Size = UDim2.new(1,0,1,0);
	SerializedTable[`Right`].Name = `Right`;SerializedTable[`Right`].Parent = SerializedTable[`S_RESIZE`];SerializedTable[`Right`].AnchorPoint = Vector2.new(1,0);SerializedTable[`Right`].BackgroundColor3 = Color3.fromRGB(0,0,0);SerializedTable[`Right`].BackgroundTransparency = 1;SerializedTable[`Right`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`Right`].BorderSizePixel = 0;SerializedTable[`Right`].Position = UDim2.new(1,0,0,0);SerializedTable[`Right`].Size = UDim2.new(0,5,1,0);
	SerializedTable[`Left`].Name = `Left`;SerializedTable[`Left`].Parent = SerializedTable[`S_RESIZE`];SerializedTable[`Left`].BackgroundColor3 = Color3.fromRGB(0,0,0);SerializedTable[`Left`].BackgroundTransparency = 1;SerializedTable[`Left`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`Left`].BorderSizePixel = 0;SerializedTable[`Left`].Size = UDim2.new(0,5,1,0);
	SerializedTable[`Top`].Name = `Top`;SerializedTable[`Top`].Parent = SerializedTable[`S_RESIZE`];SerializedTable[`Top`].BackgroundColor3 = Color3.fromRGB(0,0,0);SerializedTable[`Top`].BackgroundTransparency = 1;SerializedTable[`Top`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`Top`].BorderSizePixel = 0;SerializedTable[`Top`].Size = UDim2.new(1,0,0,5);
	SerializedTable[`Bottom`].Name = `Bottom`;SerializedTable[`Bottom`].Parent = SerializedTable[`S_RESIZE`];SerializedTable[`Bottom`].AnchorPoint = Vector2.new(0,1);SerializedTable[`Bottom`].BackgroundColor3 = Color3.fromRGB(0,0,0);SerializedTable[`Bottom`].BackgroundTransparency = 1;SerializedTable[`Bottom`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`Bottom`].BorderSizePixel = 0;SerializedTable[`Bottom`].Position = UDim2.new(0,0,1,0);SerializedTable[`Bottom`].Size = UDim2.new(1,0,0,5);
	SerializedTable[`g_DocumentationPopup`].Name = `g_DocumentationPopup`;SerializedTable[`g_DocumentationPopup`].Parent = SerializedTable[`g_ScreenUI`];SerializedTable[`g_DocumentationPopup`].AnchorPoint = Vector2.new(0.5,0.5);SerializedTable[`g_DocumentationPopup`].BackgroundColor3 = Color3.fromRGB(56.0000042617321,56.0000042617321,56.0000042617321);SerializedTable[`g_DocumentationPopup`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`g_DocumentationPopup`].BorderSizePixel = 0;SerializedTable[`g_DocumentationPopup`].Position = UDim2.new(0.5,0,0.5,0);SerializedTable[`g_DocumentationPopup`].Size = UDim2.new(0.4000000059604645,0,0.4000000059604645,0);SerializedTable[`g_DocumentationPopup`].Visible = false;
	SerializedTable[`73`].Name = `Window`;SerializedTable[`73`].Parent = SerializedTable[`g_DocumentationPopup`];SerializedTable[`73`].AnchorPoint = Vector2.new(0.5,0.5);SerializedTable[`73`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`73`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`73`].Position = UDim2.new(0.5,0,0.5,0);SerializedTable[`73`].Size = UDim2.new(1,-10,1,-10);
	SerializedTable[`74`].Name = `Topbar`;SerializedTable[`74`].Parent = SerializedTable[`73`];SerializedTable[`74`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`74`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`74`].Size = UDim2.new(1,0,0,20);
	SerializedTable[`75`].Name = `label`;SerializedTable[`75`].Parent = SerializedTable[`74`];SerializedTable[`75`].AnchorPoint = Vector2.new(1,0);SerializedTable[`75`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`75`].BackgroundTransparency = 1;SerializedTable[`75`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`75`].BorderSizePixel = 0;SerializedTable[`75`].Position = UDim2.new(1,0,0,0);SerializedTable[`75`].Size = UDim2.new(1,-5,1,0);SerializedTable[`75`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`75`].FontSize = Enum.FontSize.Size14;SerializedTable[`75`].Text = `RSLibrary Documentation`;SerializedTable[`75`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`75`].TextScaled = true;SerializedTable[`75`].TextSize = 14;SerializedTable[`75`].TextWrap = true;SerializedTable[`75`].TextWrapped = true;SerializedTable[`75`].TextXAlignment = Enum.TextXAlignment.Left;
	SerializedTable[`76`].Parent = SerializedTable[`74`];SerializedTable[`76`].AnchorPoint = Vector2.new(1,0.5);SerializedTable[`76`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`76`].BackgroundTransparency = 1;SerializedTable[`76`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`76`].BorderSizePixel = 0;SerializedTable[`76`].Position = UDim2.new(1,-2,0.5,0);SerializedTable[`76`].Size = UDim2.new(0,17,0,17);SerializedTable[`76`].Image = `rbxassetid://4661609682`;
	SerializedTable[`close`].Name = `close`;SerializedTable[`close`].Parent = SerializedTable[`74`];SerializedTable[`close`].AnchorPoint = Vector2.new(1,0);SerializedTable[`close`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`close`].BackgroundTransparency = 0.9990000128746033;SerializedTable[`close`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`close`].BorderSizePixel = 0;SerializedTable[`close`].Position = UDim2.new(1,0,0,0);SerializedTable[`close`].Size = UDim2.new(0,20,0,20);SerializedTable[`close`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`close`].FontSize = Enum.FontSize.Size14;SerializedTable[`close`].Text = ``;SerializedTable[`close`].TextColor3 = Color3.fromRGB(0,0,0);SerializedTable[`close`].TextSize = 14;
	SerializedTable[`g_DocumentationHolder`].Name = `g_DocumentationHolder`;SerializedTable[`g_DocumentationHolder`].Parent = SerializedTable[`73`];SerializedTable[`g_DocumentationHolder`].Active = true;SerializedTable[`g_DocumentationHolder`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`g_DocumentationHolder`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`g_DocumentationHolder`].Position = UDim2.new(0,5,0,25);SerializedTable[`g_DocumentationHolder`].Size = UDim2.new(1,-10,1,-30);SerializedTable[`g_DocumentationHolder`].AutomaticCanvasSize = Enum.AutomaticSize.Y;SerializedTable[`g_DocumentationHolder`].CanvasSize = UDim2.new(0,0,0,0);SerializedTable[`g_DocumentationHolder`].ScrollBarImageColor3 = Color3.fromRGB(0,0,0);SerializedTable[`g_DocumentationHolder`].ScrollBarThickness = 0;
	SerializedTable[`g_ExampleDocumentationRow`].Name = `g_ExampleDocumentationRow`;SerializedTable[`g_ExampleDocumentationRow`].Parent = SerializedTable[`g_DocumentationHolder`];SerializedTable[`g_ExampleDocumentationRow`].AutomaticSize = Enum.AutomaticSize.Y;SerializedTable[`g_ExampleDocumentationRow`].BackgroundColor3 = Color3.fromRGB(56.0000042617321,56.0000042617321,56.0000042617321);SerializedTable[`g_ExampleDocumentationRow`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`g_ExampleDocumentationRow`].ClipsDescendants = true;SerializedTable[`g_ExampleDocumentationRow`].Size = UDim2.new(1,0,0,0);
	SerializedTable[`fname`].Name = `fname`;SerializedTable[`fname`].Parent = SerializedTable[`g_ExampleDocumentationRow`];SerializedTable[`fname`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`fname`].BackgroundTransparency = 1;SerializedTable[`fname`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`fname`].BorderSizePixel = 0;SerializedTable[`fname`].Size = UDim2.new(1,0,-0,20);SerializedTable[`fname`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Bold,Enum.FontStyle.Normal,true);SerializedTable[`fname`].FontSize = Enum.FontSize.Size14;SerializedTable[`fname`].Text = `Function Name`;SerializedTable[`fname`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`fname`].TextScaled = true;SerializedTable[`fname`].TextSize = 14;SerializedTable[`fname`].TextWrap = true;SerializedTable[`fname`].TextWrapped = true;SerializedTable[`fname`].TextXAlignment = Enum.TextXAlignment.Left;SerializedTable[`fname`].TextYAlignment = Enum.TextYAlignment.Top;
	SerializedTable[`rtn`].Name = `rtn`;SerializedTable[`rtn`].Parent = SerializedTable[`g_ExampleDocumentationRow`];SerializedTable[`rtn`].AutomaticSize = Enum.AutomaticSize.Y;SerializedTable[`rtn`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`rtn`].BackgroundTransparency = 1;SerializedTable[`rtn`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`rtn`].BorderSizePixel = 0;SerializedTable[`rtn`].Position = UDim2.new(0,0,0,40);SerializedTable[`rtn`].Size = UDim2.new(1,0,-0,20);SerializedTable[`rtn`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Bold,Enum.FontStyle.Normal,true);SerializedTable[`rtn`].FontSize = Enum.FontSize.Size24;SerializedTable[`rtn`].Text = `returns`;SerializedTable[`rtn`].TextColor3 = Color3.fromRGB(85.0000025331974,0,0);SerializedTable[`rtn`].TextSize = 20;SerializedTable[`rtn`].TextWrap = true;SerializedTable[`rtn`].TextWrapped = true;SerializedTable[`rtn`].TextXAlignment = Enum.TextXAlignment.Left;SerializedTable[`rtn`].TextYAlignment = Enum.TextYAlignment.Top;
	SerializedTable[`fdescrip`].Name = `fdescrip`;SerializedTable[`fdescrip`].Parent = SerializedTable[`g_ExampleDocumentationRow`];SerializedTable[`fdescrip`].AutomaticSize = Enum.AutomaticSize.Y;SerializedTable[`fdescrip`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`fdescrip`].BackgroundTransparency = 1;SerializedTable[`fdescrip`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`fdescrip`].BorderSizePixel = 0;SerializedTable[`fdescrip`].Position = UDim2.new(0,0,0,20);SerializedTable[`fdescrip`].Size = UDim2.new(1,0,-0,20);SerializedTable[`fdescrip`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`fdescrip`].FontSize = Enum.FontSize.Size24;SerializedTable[`fdescrip`].Text = `Function Description`;SerializedTable[`fdescrip`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`fdescrip`].TextSize = 20;SerializedTable[`fdescrip`].TextWrap = true;SerializedTable[`fdescrip`].TextWrapped = true;SerializedTable[`fdescrip`].TextXAlignment = Enum.TextXAlignment.Left;SerializedTable[`fdescrip`].TextYAlignment = Enum.TextYAlignment.Top;
	SerializedTable[`rtng`].Name = `rtng`;SerializedTable[`rtng`].Parent = SerializedTable[`g_ExampleDocumentationRow`];SerializedTable[`rtng`].AutomaticSize = Enum.AutomaticSize.Y;SerializedTable[`rtng`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`rtng`].BackgroundTransparency = 1;SerializedTable[`rtng`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`rtng`].BorderSizePixel = 0;SerializedTable[`rtng`].Position = UDim2.new(0,0,0,40);SerializedTable[`rtng`].Size = UDim2.new(1,0,-0,20);SerializedTable[`rtng`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Bold,Enum.FontStyle.Normal,true);SerializedTable[`rtng`].FontSize = Enum.FontSize.Size24;SerializedTable[`rtng`].Text = `goalRTN:object`;SerializedTable[`rtng`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`rtng`].TextSize = 20;SerializedTable[`rtng`].TextWrap = true;SerializedTable[`rtng`].TextWrapped = true;SerializedTable[`rtng`].TextXAlignment = Enum.TextXAlignment.Right;SerializedTable[`rtng`].TextYAlignment = Enum.TextYAlignment.Top;
	SerializedTable[`84`].Parent = SerializedTable[`g_DocumentationHolder`];SerializedTable[`84`].HorizontalAlignment = Enum.HorizontalAlignment.Center;SerializedTable[`84`].SortOrder = Enum.SortOrder.LayoutOrder;SerializedTable[`84`].Padding = UDim.new(0,5);
	SerializedTable[`85`].Parent = SerializedTable[`g_DocumentationHolder`];SerializedTable[`85`].PaddingBottom = UDim.new(0,5);SerializedTable[`85`].PaddingLeft = UDim.new(0,5);SerializedTable[`85`].PaddingRight = UDim.new(0,5);SerializedTable[`85`].PaddingTop = UDim.new(0,5);
	SerializedTable[`g_ContextMenu`].Name = `g_ContextMenu`;SerializedTable[`g_ContextMenu`].Parent = SerializedTable[`g_ScreenUI`];SerializedTable[`g_ContextMenu`].AutomaticSize = Enum.AutomaticSize.Y;SerializedTable[`g_ContextMenu`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`g_ContextMenu`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`g_ContextMenu`].Size = UDim2.new(0,250,0,0);SerializedTable[`g_ContextMenu`].Visible = false;
	SerializedTable[`g_ExampleContextFrame`].Name = `g_ExampleContextFrame`;SerializedTable[`g_ExampleContextFrame`].Parent = SerializedTable[`g_ContextMenu`];SerializedTable[`g_ExampleContextFrame`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`g_ExampleContextFrame`].BackgroundTransparency = 1;SerializedTable[`g_ExampleContextFrame`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`g_ExampleContextFrame`].BorderSizePixel = 0;SerializedTable[`g_ExampleContextFrame`].Size = UDim2.new(1,0,0,20);
	SerializedTable[`TextButton`].Parent = SerializedTable[`g_ExampleContextFrame`];SerializedTable[`TextButton`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`TextButton`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`TextButton`].BorderSizePixel = 0;SerializedTable[`TextButton`].Size = UDim2.new(1,0,1,0);SerializedTable[`TextButton`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`TextButton`].FontSize = Enum.FontSize.Size18;SerializedTable[`TextButton`].Text = `Configure Keybinds`;SerializedTable[`TextButton`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`TextButton`].TextSize = 16;SerializedTable[`TextButton`].TextXAlignment = Enum.TextXAlignment.Left;
	SerializedTable[`89`].Parent = SerializedTable[`TextButton`];SerializedTable[`89`].PaddingLeft = UDim.new(0,25);
	SerializedTable[`90`].Parent = SerializedTable[`g_ContextMenu`];SerializedTable[`90`].SortOrder = Enum.SortOrder.LayoutOrder;
	SerializedTable[`divisor`].Name = `divisor`;SerializedTable[`divisor`].Parent = SerializedTable[`g_ContextMenu`];SerializedTable[`divisor`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`divisor`].BackgroundTransparency = 1;SerializedTable[`divisor`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`divisor`].BorderSizePixel = 0;SerializedTable[`divisor`].Size = UDim2.new(1,0,0,10);SerializedTable[`divisor`].Visible = false;
	SerializedTable[`b`].Name = `b`;SerializedTable[`b`].Parent = SerializedTable[`divisor`];SerializedTable[`b`].AnchorPoint = Vector2.new(0.5,0.5);SerializedTable[`b`].BackgroundColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`b`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`b`].BorderSizePixel = 0;SerializedTable[`b`].Position = UDim2.new(0.5,0,0.5,0);SerializedTable[`b`].Size = UDim2.new(1,-20,0,1);
	SerializedTable[`g_KeybindPopup`].Name = `g_KeybindPopup`;SerializedTable[`g_KeybindPopup`].Parent = SerializedTable[`g_ScreenUI`];SerializedTable[`g_KeybindPopup`].AnchorPoint = Vector2.new(0.5,0.5);SerializedTable[`g_KeybindPopup`].BackgroundColor3 = Color3.fromRGB(56.0000042617321,56.0000042617321,56.0000042617321);SerializedTable[`g_KeybindPopup`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`g_KeybindPopup`].BorderSizePixel = 0;SerializedTable[`g_KeybindPopup`].Position = UDim2.new(0.5,0,0.5,0);SerializedTable[`g_KeybindPopup`].Size = UDim2.new(0.4000000059604645,0,0.4000000059604645,0);SerializedTable[`g_KeybindPopup`].Visible = false;
	SerializedTable[`94`].Name = `Window`;SerializedTable[`94`].Parent = SerializedTable[`g_KeybindPopup`];SerializedTable[`94`].AnchorPoint = Vector2.new(0.5,0.5);SerializedTable[`94`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`94`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`94`].Position = UDim2.new(0.5,0,0.5,0);SerializedTable[`94`].Size = UDim2.new(1,-10,1,-10);
	SerializedTable[`95`].Name = `Topbar`;SerializedTable[`95`].Parent = SerializedTable[`94`];SerializedTable[`95`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`95`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`95`].Size = UDim2.new(1,0,0,20);
	SerializedTable[`96`].Name = `label`;SerializedTable[`96`].Parent = SerializedTable[`95`];SerializedTable[`96`].AnchorPoint = Vector2.new(1,0);SerializedTable[`96`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`96`].BackgroundTransparency = 1;SerializedTable[`96`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`96`].BorderSizePixel = 0;SerializedTable[`96`].Position = UDim2.new(1,0,0,0);SerializedTable[`96`].Size = UDim2.new(1,-5,1,0);SerializedTable[`96`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`96`].FontSize = Enum.FontSize.Size14;SerializedTable[`96`].Text = `Keybinds for CommandName`;SerializedTable[`96`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`96`].TextScaled = true;SerializedTable[`96`].TextSize = 14;SerializedTable[`96`].TextWrap = true;SerializedTable[`96`].TextWrapped = true;SerializedTable[`96`].TextXAlignment = Enum.TextXAlignment.Left;
	SerializedTable[`97`].Parent = SerializedTable[`95`];SerializedTable[`97`].AnchorPoint = Vector2.new(1,0.5);SerializedTable[`97`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`97`].BackgroundTransparency = 1;SerializedTable[`97`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`97`].BorderSizePixel = 0;SerializedTable[`97`].Position = UDim2.new(1,-2,0.5,0);SerializedTable[`97`].Size = UDim2.new(0,17,0,17);SerializedTable[`97`].Image = `rbxassetid://4661609682`;
	SerializedTable[`98`].Name = `close`;SerializedTable[`98`].Parent = SerializedTable[`95`];SerializedTable[`98`].AnchorPoint = Vector2.new(1,0);SerializedTable[`98`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`98`].BackgroundTransparency = 0.9990000128746033;SerializedTable[`98`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`98`].BorderSizePixel = 0;SerializedTable[`98`].Position = UDim2.new(1,0,0,0);SerializedTable[`98`].Size = UDim2.new(0,20,0,20);SerializedTable[`98`].ZIndex = 5;SerializedTable[`98`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`98`].FontSize = Enum.FontSize.Size14;SerializedTable[`98`].Text = ``;SerializedTable[`98`].TextColor3 = Color3.fromRGB(0,0,0);SerializedTable[`98`].TextSize = 14;
	SerializedTable[`g_TextboxPopup`].Name = `g_TextboxPopup`;SerializedTable[`g_TextboxPopup`].Parent = SerializedTable[`g_ScreenUI`];SerializedTable[`g_TextboxPopup`].AnchorPoint = Vector2.new(0.5,0.5);SerializedTable[`g_TextboxPopup`].AutomaticSize = Enum.AutomaticSize.XY;SerializedTable[`g_TextboxPopup`].BackgroundColor3 = Color3.fromRGB(56.0000042617321,56.0000042617321,56.0000042617321);SerializedTable[`g_TextboxPopup`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`g_TextboxPopup`].BorderSizePixel = 0;SerializedTable[`g_TextboxPopup`].Position = UDim2.new(0.5,0,0.5,0);SerializedTable[`g_TextboxPopup`].Size = UDim2.new(0,0,0,50);SerializedTable[`g_TextboxPopup`].Visible = false;
	SerializedTable[`100`].Name = `Window`;SerializedTable[`100`].Parent = SerializedTable[`g_TextboxPopup`];SerializedTable[`100`].AutomaticSize = Enum.AutomaticSize.XY;SerializedTable[`100`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`100`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`100`].Size = UDim2.new(1,0,0,40);
	SerializedTable[`TextBox`].Parent = SerializedTable[`100`];SerializedTable[`TextBox`].AutomaticSize = Enum.AutomaticSize.XY;SerializedTable[`TextBox`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`TextBox`].BackgroundTransparency = 1;SerializedTable[`TextBox`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`TextBox`].BorderSizePixel = 0;SerializedTable[`TextBox`].Size = UDim2.new(0,0,1,0);SerializedTable[`TextBox`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`TextBox`].FontSize = Enum.FontSize.Size28;SerializedTable[`TextBox`].Text = `hai~! :3 This is here to test~! `;SerializedTable[`TextBox`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`TextBox`].TextSize = 25;SerializedTable[`TextBox`].TextWrap = true;SerializedTable[`TextBox`].TextWrapped = true;
	SerializedTable[`102`].Parent = SerializedTable[`TextBox`];SerializedTable[`102`].PaddingLeft = UDim.new(0,5);SerializedTable[`102`].PaddingRight = UDim.new(0,5);SerializedTable[`102`].PaddingTop = UDim.new(0,15);
	SerializedTable[`103`].Parent = SerializedTable[`g_TextboxPopup`];SerializedTable[`103`].PaddingBottom = UDim.new(0,5);SerializedTable[`103`].PaddingLeft = UDim.new(0,5);SerializedTable[`103`].PaddingRight = UDim.new(0,5);SerializedTable[`103`].PaddingTop = UDim.new(0,5);
	SerializedTable[`context`].Name = `context`;SerializedTable[`context`].Parent = SerializedTable[`g_TextboxPopup`];SerializedTable[`context`].AutomaticSize = Enum.AutomaticSize.X;SerializedTable[`context`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`context`].BackgroundTransparency = 1;SerializedTable[`context`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`context`].BorderSizePixel = 0;SerializedTable[`context`].Size = UDim2.new(1,0,0,15);SerializedTable[`context`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Bold,Enum.FontStyle.Normal,true);SerializedTable[`context`].FontSize = Enum.FontSize.Size14;SerializedTable[`context`].Text = `String Input`;SerializedTable[`context`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`context`].TextSize = 14;
	SerializedTable[`105`].Parent = SerializedTable[`g_TextboxPopup`];SerializedTable[`105`].MaxSize = Vector2.new(400,inf);
	SerializedTable[`g_NotificationHolder`].Name = `g_NotificationHolder`;SerializedTable[`g_NotificationHolder`].Parent = SerializedTable[`g_ScreenUI`];SerializedTable[`g_NotificationHolder`].AnchorPoint = Vector2.new(0,1);SerializedTable[`g_NotificationHolder`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`g_NotificationHolder`].BackgroundTransparency = 1;SerializedTable[`g_NotificationHolder`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`g_NotificationHolder`].BorderSizePixel = 0;SerializedTable[`g_NotificationHolder`].Position = UDim2.new(0,0,1,0);SerializedTable[`g_NotificationHolder`].Size = UDim2.new(0,350,1,0);SerializedTable[`g_NotificationHolder`].ZIndex = 99999;
	SerializedTable[`107`].Parent = SerializedTable[`g_NotificationHolder`];SerializedTable[`107`].PaddingBottom = UDim.new(0,5);SerializedTable[`107`].PaddingLeft = UDim.new(0,5);SerializedTable[`107`].PaddingRight = UDim.new(0,5);SerializedTable[`107`].PaddingTop = UDim.new(0,5);
	SerializedTable[`108`].Parent = SerializedTable[`g_NotificationHolder`];SerializedTable[`108`].SortOrder = Enum.SortOrder.LayoutOrder;SerializedTable[`108`].VerticalAlignment = Enum.VerticalAlignment.Bottom;SerializedTable[`108`].Padding = UDim.new(0,5);
	SerializedTable[`oldExampleNotifFrame`].Name = `oldExampleNotifFrame`;SerializedTable[`oldExampleNotifFrame`].Parent = SerializedTable[`g_NotificationHolder`];SerializedTable[`oldExampleNotifFrame`].AutomaticSize = Enum.AutomaticSize.XY;SerializedTable[`oldExampleNotifFrame`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`oldExampleNotifFrame`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`oldExampleNotifFrame`].Visible = false;SerializedTable[`oldExampleNotifFrame`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`oldExampleNotifFrame`].FontSize = Enum.FontSize.Size24;SerializedTable[`oldExampleNotifFrame`].Text = `notif text example`;SerializedTable[`oldExampleNotifFrame`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`oldExampleNotifFrame`].TextSize = 20;SerializedTable[`oldExampleNotifFrame`].TextWrap = true;SerializedTable[`oldExampleNotifFrame`].TextWrapped = true;SerializedTable[`oldExampleNotifFrame`].TextXAlignment = Enum.TextXAlignment.Left;SerializedTable[`oldExampleNotifFrame`].TextYAlignment = Enum.TextYAlignment.Top;
	SerializedTable[`110`].Parent = SerializedTable[`oldExampleNotifFrame`];SerializedTable[`110`].PaddingBottom = UDim.new(0,5);SerializedTable[`110`].PaddingLeft = UDim.new(0,5);SerializedTable[`110`].PaddingRight = UDim.new(0,5);SerializedTable[`110`].PaddingTop = UDim.new(0,5);
	SerializedTable[`111`].Parent = SerializedTable[`oldExampleNotifFrame`];SerializedTable[`111`].MaxSize = Vector2.new(350,inf);
	SerializedTable[`g_ExampleNotifFrame`].Name = `g_ExampleNotifFrame`;SerializedTable[`g_ExampleNotifFrame`].Parent = SerializedTable[`g_NotificationHolder`];SerializedTable[`g_ExampleNotifFrame`].AutomaticSize = Enum.AutomaticSize.XY;SerializedTable[`g_ExampleNotifFrame`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`g_ExampleNotifFrame`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`g_ExampleNotifFrame`].Visible = false;
	SerializedTable[`txt`].Name = `txt`;SerializedTable[`txt`].Parent = SerializedTable[`g_ExampleNotifFrame`];SerializedTable[`txt`].AutomaticSize = Enum.AutomaticSize.XY;SerializedTable[`txt`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`txt`].BackgroundTransparency = 1;SerializedTable[`txt`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`txt`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`txt`].FontSize = Enum.FontSize.Size24;SerializedTable[`txt`].Text = `notif text example | Long text test | commence W test WWWWWWWWWWWWWWWWWW`;SerializedTable[`txt`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`txt`].TextSize = 20;SerializedTable[`txt`].TextWrap = true;SerializedTable[`txt`].TextWrapped = true;SerializedTable[`txt`].TextXAlignment = Enum.TextXAlignment.Left;SerializedTable[`txt`].TextYAlignment = Enum.TextYAlignment.Top;
	SerializedTable[`114`].Parent = SerializedTable[`txt`];SerializedTable[`114`].PaddingBottom = UDim.new(0,5);SerializedTable[`114`].PaddingLeft = UDim.new(0,5);SerializedTable[`114`].PaddingRight = UDim.new(0,5);SerializedTable[`114`].PaddingTop = UDim.new(0,5);
	SerializedTable[`115`].Parent = SerializedTable[`txt`];SerializedTable[`115`].MaxSize = Vector2.new(350,inf);
	SerializedTable[`bu`].Name = `bu`;SerializedTable[`bu`].Parent = SerializedTable[`g_ExampleNotifFrame`];SerializedTable[`bu`].AutomaticSize = Enum.AutomaticSize.Y;SerializedTable[`bu`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`bu`].BackgroundTransparency = 1;SerializedTable[`bu`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`bu`].BorderSizePixel = 0;SerializedTable[`bu`].Position = UDim2.new(0,0,1,0);SerializedTable[`bu`].Size = UDim2.new(1,0,0,25);SerializedTable[`bu`].Visible = false;
	SerializedTable[`exop`].Name = `exop`;SerializedTable[`exop`].Parent = SerializedTable[`bu`];SerializedTable[`exop`].AutomaticSize = Enum.AutomaticSize.X;SerializedTable[`exop`].BackgroundColor3 = Color3.fromRGB(56.000000461936,56.000000461936,56.000000461936);SerializedTable[`exop`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`exop`].Size = UDim2.new(0,0,0,20);SerializedTable[`exop`].Visible = false;SerializedTable[`exop`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Bold,Enum.FontStyle.Normal,true);SerializedTable[`exop`].FontSize = Enum.FontSize.Size18;SerializedTable[`exop`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`exop`].TextSize = 15;
	SerializedTable[`118`].Parent = SerializedTable[`exop`];SerializedTable[`118`].PaddingLeft = UDim.new(0,15);SerializedTable[`118`].PaddingRight = UDim.new(0,15);
	SerializedTable[`119`].Parent = SerializedTable[`bu`];SerializedTable[`119`].FillDirection = Enum.FillDirection.Horizontal;SerializedTable[`119`].SortOrder = Enum.SortOrder.LayoutOrder;SerializedTable[`119`].Padding = UDim.new(0,3);
	SerializedTable[`120`].Parent = SerializedTable[`bu`];SerializedTable[`120`].PaddingBottom = UDim.new(0,3);SerializedTable[`120`].PaddingLeft = UDim.new(0,3);SerializedTable[`120`].PaddingRight = UDim.new(0,3);SerializedTable[`120`].PaddingTop = UDim.new(0,3);
	SerializedTable[`g_ColorPickerPopup`].Name = `g_ColorPickerPopup`;SerializedTable[`g_ColorPickerPopup`].Parent = SerializedTable[`g_ScreenUI`];SerializedTable[`g_ColorPickerPopup`].AnchorPoint = Vector2.new(0.5,0.5);SerializedTable[`g_ColorPickerPopup`].BackgroundColor3 = Color3.fromRGB(56.0000042617321,56.0000042617321,56.0000042617321);SerializedTable[`g_ColorPickerPopup`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`g_ColorPickerPopup`].BorderSizePixel = 0;SerializedTable[`g_ColorPickerPopup`].Position = UDim2.new(0.3335937559604645,0,0.44986072182655334,0);SerializedTable[`g_ColorPickerPopup`].Size = UDim2.new(0.5,0,0.5,0);SerializedTable[`g_ColorPickerPopup`].Visible = false;
	SerializedTable[`122`].Name = `Window`;SerializedTable[`122`].Parent = SerializedTable[`g_ColorPickerPopup`];SerializedTable[`122`].AnchorPoint = Vector2.new(0.5,0.5);SerializedTable[`122`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`122`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`122`].Position = UDim2.new(0.5,0,0.5,0);SerializedTable[`122`].Size = UDim2.new(1,-10,1,-10);
	SerializedTable[`123`].Name = `Topbar`;SerializedTable[`123`].Parent = SerializedTable[`122`];SerializedTable[`123`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`123`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`123`].Size = UDim2.new(1,0,0,20);
	SerializedTable[`124`].Name = `label`;SerializedTable[`124`].Parent = SerializedTable[`123`];SerializedTable[`124`].AnchorPoint = Vector2.new(1,0);SerializedTable[`124`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`124`].BackgroundTransparency = 1;SerializedTable[`124`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`124`].BorderSizePixel = 0;SerializedTable[`124`].Position = UDim2.new(1,0,0,0);SerializedTable[`124`].Size = UDim2.new(1,-5,1,0);SerializedTable[`124`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`124`].FontSize = Enum.FontSize.Size14;SerializedTable[`124`].Text = `Color Picker`;SerializedTable[`124`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`124`].TextScaled = true;SerializedTable[`124`].TextSize = 14;SerializedTable[`124`].TextWrap = true;SerializedTable[`124`].TextWrapped = true;SerializedTable[`124`].TextXAlignment = Enum.TextXAlignment.Left;
	SerializedTable[`125`].Parent = SerializedTable[`123`];SerializedTable[`125`].AnchorPoint = Vector2.new(1,0.5);SerializedTable[`125`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`125`].BackgroundTransparency = 1;SerializedTable[`125`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`125`].BorderSizePixel = 0;SerializedTable[`125`].Position = UDim2.new(1,-2,0.5,0);SerializedTable[`125`].Size = UDim2.new(0,17,0,17);SerializedTable[`125`].Image = `rbxassetid://4661609682`;
	SerializedTable[`126`].Name = `close`;SerializedTable[`126`].Parent = SerializedTable[`123`];SerializedTable[`126`].AnchorPoint = Vector2.new(1,0);SerializedTable[`126`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`126`].BackgroundTransparency = 0.9990000128746033;SerializedTable[`126`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`126`].BorderSizePixel = 0;SerializedTable[`126`].Position = UDim2.new(1,0,0,0);SerializedTable[`126`].Size = UDim2.new(0,20,0,20);SerializedTable[`126`].ZIndex = 5;SerializedTable[`126`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`126`].FontSize = Enum.FontSize.Size14;SerializedTable[`126`].Text = ``;SerializedTable[`126`].TextColor3 = Color3.fromRGB(0,0,0);SerializedTable[`126`].TextSize = 14;
	SerializedTable[`127`].Parent = SerializedTable[`122`];SerializedTable[`127`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`127`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`127`].BorderSizePixel = 0;SerializedTable[`127`].Position = UDim2.new(0.020880840718746185,0,0.12647786736488342,0);SerializedTable[`127`].Size = UDim2.new(0.3824290931224823,0,0.8246015310287476,0);
	SerializedTable[`128`].Parent = SerializedTable[`127`];
	SerializedTable[`UIGradient`].Parent = SerializedTable[`127`];SerializedTable[`UIGradient`].Color = ColorSequence.new({ColorSequenceKeypoint.new(0,Color3.fromRGB(255,0,0)),ColorSequenceKeypoint.new(1,Color3.fromRGB(0,0,0))});SerializedTable[`UIGradient`].Rotation = 90;
	SerializedTable[`130`].Parent = SerializedTable[`122`];SerializedTable[`130`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`130`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`130`].BorderSizePixel = 3;SerializedTable[`130`].Position = UDim2.new(0.020880840718746185,0,0.12647786736488342,0);SerializedTable[`130`].Size = UDim2.new(0.3824290931224823,0,0.8246015310287476,0);SerializedTable[`130`].ZIndex = 0;
	SerializedTable[`131`].Parent = SerializedTable[`130`];
	SerializedTable[`132`].Parent = SerializedTable[`g_ColorPickerPopup`];SerializedTable[`132`].AspectRatio = 2.25;
	SerializedTable[`g_ScreenUI`].Parent = game[`StarterGui`]
end
InsertSerial()

local Converted = SerializedTable

function RSCore.AddDocumentationFunction(Name:string, Description:string, Returns:string)
	local c = Converted.g_ExampleDocumentationRow:Clone()
	c.fname.Text = Name
	c.fdescrip.Text = Description
	c.rtng.Text = Returns
	c.Visible = true
	c.Parent = Converted.g_DocumentationHolder
end

function RSCore.Draggable(Frame:Frame)
	-- Can't just be as easy as adding a dragdetector. This is for accessibility, atleast it's simple to do.
	-- and then it still doesn't work.. my god dude

	-- okay I don't care abt it not working in the esc menu anymore but I added some more checks so ya can't drag 2 things at once
	table.insert(TableDragQueue, Frame)
	table.insert(TableRBXConnections, UserInputService.InputBegan:Connect(function(k)
		if k.UserInputType==Enum.UserInputType.MouseButton1 then
			local CanPass = false
			local Latest = nil
			local stop = false
			local fb = false
			for _,v in CoreGui:GetGuiObjectsAtPosition(Mouse.X, Mouse.Y) do
				if v:IsDescendantOf(Converted.g_ScreenUI) and v.Visible==true and not stop then

					if v:IsA("TextButton") or v.Parent.Name=="S_RESIZE" then
						stop = true
					end
					if v~=Frame and not v:IsDescendantOf(Frame) then
						if not Latest and table.find(TableDragQueue, v) then
							stop = true
							CanPass = false
						end
					end

					if v==Frame then
						CanPass = true
						Latest = v
					end
				end
			end

			if CanPass then
				task.spawn(function()
					local origin = Vector2.new(Mouse.X, Mouse.Y)
					repeat
						local current = Vector2.new(Mouse.X, Mouse.Y)
						local delta = origin-current
						Frame.Position-= UDim2.fromOffset(delta.X, delta.Y)
						origin = current
						task.wait()
					until not UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1)
				end)
			end
		end
	end))

	--[[Frame.InputBegan:Connect(function(k)
		if k.UserInputType==Enum.UserInputType.MouseButton1 then
			task.spawn(function()
				local origin = Vector2.new(Mouse.X, Mouse.Y)
				repeat
					local current = Vector2.new(Mouse.X, Mouse.Y)
					local delta = origin-current
					Frame.Position-= UDim2.fromOffset(delta.X, delta.Y)
					origin = current
					task.wait()
				until not UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1)
			end)
		end
	end)]]

end

function RSCore.PromptString(context:string?)
	local tb = Converted.g_TextboxPopup:Clone()
	local tx:TextBox = tb.Window.TextBox
	tx.Text = ""
	tx.TextSize = 20
	tx.PlaceholderText = "String Input"
	tb.Visible = true
	if context then
		tb.context.Text = context
	end
	tb.Parent = Converted.g_ScreenUI
	tx:CaptureFocus()

	local toReturn = nil
	tx.FocusLost:Connect(function()
		tb:Destroy()
		toReturn = tx.Text
	end)
	repeat
		task.wait()
	until toReturn
	return toReturn
end

function RSCore.DisplayText(context:string?)
	local tb = Converted.g_TextboxPopup:Clone()
	local tx:TextBox = tb.Window.TextBox
	local ct:TextLabel = tb.context
	tx.Text = ""
	tx.TextEditable = false
	tx.Interactable = false
	tx.Text = context
	tx.TextSize = 20
	tx.PlaceholderText = "String Input"
	tb.Visible = true
	ct.Text = "Close"
	ct.Visible = true
	tb.Parent = Converted.g_ScreenUI
	RSCore.Draggable(tb)

	ct.InputBegan:Connect(function(k)
		if k.UserInputType==Enum.UserInputType.MouseButton1 then
			tb:Destroy()
		end
	end)
end

function RSCore.StudioDebug(text:string)
	if RunService:IsStudio() then
		warn("Core UI Debug // "..text)
	else
	end
	table.insert(TableDebugLog, text)
end

function RSCore.Returndeb()
	return `m⌂L▓s²t√oΘn╟e`
end

function RSLibrary.Title(Title:string)
	Converted.g_TitleText.Text = Title
	CountCreatedCharacters+=#Title
end

function RSLibrary.Processed()
	return isprocess
end

function RSLibrary.Notify(text:string, fadeout:number, options)
	if not fadeout then
		fadeout = 3
	end
	Converted.g_NotificationHolder:FindFirstChildWhichIsA("UIListLayout").Padding = UDim.new(0, 5)
	Converted.g_NotificationHolder.Size = UDim2.new(0, 350, 1, 0)
	
	local c = Converted.g_ExampleNotifFrame:Clone()
	c.Visible = true
	c.txt.Text = text
	c.Parent = Converted.g_NotificationHolder
	if options then
		local bu:Frame = c.bu
		bu.Visible = true
		for txt,v in options do
			local c:TextButton = bu.exop:Clone()
			c.Text = txt
			c.Visible = true
			c.Parent = bu
			
			c.MouseButton1Down:Connect(function()
				v()
			end)
		end
	end
	
	task.spawn(function()
		local x = 1
		local inv = 0.1
		repeat
			c.BackgroundTransparency-=inv
			c.txt.TextTransparency-=inv
			x-=inv
			task.wait(0.01)
		until x<=0
		task.wait(fadeout-.5)
		local x = 0
		local inv = 0.01
		repeat
			c.BackgroundTransparency+=inv
			c.txt.TextTransparency+=inv
			x+=inv
			task.wait(inv)
		until x>=1
		c:Destroy()
	end)
end

function RSLibrary.PromptString(context:string)
	return RSCore.PromptString(context)
end

function RSLibrary.DisplayText(context:string?)
	RSCore.DisplayText(context)
end

function RSLibrary.CreateContainer(Name:string, Image:string, Context:string)
	CountCreatedContainers += 1
	local Container:Frame = Converted.g_ExampleCommandHolder:Clone()
	Container.Name = Name
	Container:AddTag("iscontainer")
	Container.Parent = Converted.CommandPanel
	local Sidebar:Frame = Converted.g_ExampleSidebarRow:Clone()

	local sb_button:TextButton = Sidebar.button
	Sidebar.Visible = true
	sb_button.Text = Name
	Sidebar.Name = "sidebar"..Name.."esb11"
	Sidebar.Parent = Converted.g_SidebarHolder
	CountCreatedCharacters+=#Name

	sb_button.MouseButton1Down:Connect(function()
		for _,v in Converted.CommandPanel:GetChildren() do
			if v:IsA("ScrollingFrame") and v:HasTag("iscontainer") then
				v.Visible = false
				if v.Name==Name then
					v.Visible = true
				end
			end
		end
	end)

	if CountCreatedContainers==1 then
		Container.Visible = true
	end

	return Container
end

function RSLibrary.CreateSubContainer(Containero:Frame, Name:string, Context:string)
	CountCreatedSubContainers +=1
	local Container:Frame = Converted.g_ExampleSubCommandCategory:Clone()
	Container.Name = "s444"..Name.."subcat"
	Container.Visible = true
	Container.label.Text = Name
	Container.Parent = Containero.holder
	CountCreatedCharacters+=#Name
	local drop:TextButton = Container:FindFirstChild("dropd")
	if drop then
		local isDropped = true
		local function dcheck()
			if isDropped then
				isDropped = false
				drop.Rotation = 0
				Container.holder.Visible = false
			else
				isDropped = true
				drop.Rotation = 90
				Container.holder.Visible = true
			end
		end
		drop.MouseButton1Down:Connect(function()
			dcheck()
		end)

		Container.ChildAdded:Connect(function(c)
			if c:IsA("UIAspectRatioConstraint") then
				RSCore.StudioDebug("Collapsed")
				c:Destroy()
				isDropped = true
				dcheck()
			elseif c:IsA("UIListLayout") then
				RSCore.StudioDebug("Expanded")
				c:Destroy()
				isDropped = false
				dcheck()
			end
		end)
	end
	table.insert(TableSubContainers, Container)


	return Container
end

function RSLibrary.SelectPlayer()
	local selection:Model = nil
	local clicked = false
	local target:BasePart = nil

	local t = UserInputService.InputBegan:Connect(function(k, g)
		--if g==false then
		if k.UserInputType==Enum.UserInputType.MouseButton1 then
			clicked = true
			target = Mouse.Target
		end
		--end
	end)

	repeat
		task.wait()
	until clicked
	t:Disconnect()

	local hum:Humanoid = target.Parent:FindFirstChildWhichIsA("Humanoid")
	if not hum then
		hum = target.Parent.Parent:FindFirstChildWhichIsA("Humanoid")
	end
	if hum then
		selection = hum.Parent
	end

	return selection
end

function RSLibrary.CreateRow(Container:Frame, Name:string, Type:string, Value:BoolValue, arg, Context:string)
	local AbsoluteType = Type
	local c:Frame = Converted.g_ExampleCommandRow:Clone()
	local swtch:Frame = c.stylelist.boolean.switch
	local b:TextButton = c.button
	for _,v in c:FindFirstChild("stylelist"):GetChildren() do
		if v:IsA("Frame") then
			if v.Name==Type then
				v.label.Text = Name
				v.Visible = true
			else
				v.Visible = false
			end
		end
	end
	local originLab = Name
	c.Name = "row."..Name.."m444"
	CountCreatedCharacters+=#Name
	c.Visible = true
	c.Parent = Container:FindFirstChild("holder")
	local goalRSlayout = 0
	for _,v:Frame in c:GetDescendants() do
		if v.Name=="label" or v.Name=="Label" then
			v.Interactable = false
		end
	end
	local dfval = nil
	if Value then
		dfval = Value.Value
		Value.Name = Name
		Value.Parent = c
	end
	CountCreatedRows+=1
	local function fireevent()
		local e = Instance.new("BindableEvent")
		e.Parent = c
	end
	local fireLocalEvent

	if AbsoluteType=="button" then
		goalRSlayout = 0
		fireLocalEvent = function()
			fireevent()
		end
		b.MouseButton1Down:Connect(function()
			fireevent()
		end)
	end
	if AbsoluteType=="slider" then
		goalRSlayout = 3
		local style:Frame = c.stylelist.slider
		local slide:Frame = style.slide
		local switch:Frame = slide.switch
		local theEnd:Frame = slide:FindFirstChild("end")

		local width = slide.AbsoluteSize.X
		local width2 = width/2
		local handleWidth = switch.AbsoluteSize.X

		theEnd:Destroy()
		c.AutomaticSize = Enum.AutomaticSize.None
		style.AutomaticSize = Enum.AutomaticSize.None
		slide:FindFirstChildWhichIsA("UIPadding"):Destroy()

		switch.InputBegan:Connect(function(k, g)
			if k.UserInputType==Enum.UserInputType.MouseButton1 then
				task.spawn(function()
					repeat
						local sliderPosition = math.clamp(Mouse.X - slide.AbsolutePosition.X - (handleWidth / 2), (handleWidth/2), width-(handleWidth/2))
						local divisor = (sliderPosition-(handleWidth/2)) / (width - (handleWidth))

						if RunService:IsStudio() then
							switch:FindFirstChildWhichIsA("TextLabel").Text = math.round(divisor*100)/100
						end
						switch.Position = UDim2.fromOffset(sliderPosition, 0)
						Value.Value = arg.max*divisor
						style.label.Text = originLab.." ["..math.round(Value.Value*10)/10 .."]"

						print(Value.Value)
						RunService.RenderStepped:Wait()
					until not UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1)
				end)
			end
		end)

	end
	if AbsoluteType=="boolean" then
		goalRSlayout = 2
		local function see()
			swtch:FindFirstChild("false").Visible = false
			swtch:FindFirstChild("true").Visible = false

			swtch:FindFirstChild(tostring(Value.Value)).Visible = true
		end
		fireLocalEvent = function()
			Value.Value = not Value.Value
		end
		see()
		b.MouseButton1Down:Connect(function()
			fireevent()
			Value.Value = not Value.Value
		end)
		Value:GetPropertyChangedSignal("Value"):Connect(function()
			see()
		end)
		Converted.g_ScreenUI.Destroying:Connect(function()
			Value.Value = dfval
		end)
	end
	if AbsoluteType=="string" then
		goalRSlayout = 1
		c.stylelist.string.label.Interactable = false
		Converted.edittext:FindFirstChildWhichIsA("UISizeConstraint").MinSize = Vector2.new(25, 0)
		local box:TextBox = c.stylelist.string.textbox.edittext
		box.ClearTextOnFocus = false
		box.Text = Value.Value
		box:GetPropertyChangedSignal("Text"):Connect(function()
			Value.Value = box.Text
		end)
		b.MouseButton1Down:Connect(function()
			box:CaptureFocus()
		end)
		fireLocalEvent = function()
			box:CaptureFocus()
		end
		Value:GetPropertyChangedSignal("Value"):Connect(function()
			box.Text = Value.Value
		end)
	end
	if RSLibrary.UseRSLayouts then
		c.LayoutOrder = goalRSlayout
	end

	c.ChildAdded:Connect(function(ce)
		if ce:IsA("Frame") then
			fireLocalEvent()
		end
		if ce:IsA("UIAspectRatioConstraint") then
			for _,v in c:FindFirstChild("stylelist"):GetChildren() do
				if v:IsA("Frame") then
					if v.Name==Type then
						v.label.Text = originLab
					end
				end
			end
			task.spawn(function()
				task.wait(0.01)
				ce:Destroy()
			end)
		end
		if ce.Name=="kbn" and ce:IsA("StringValue") then
			local k = ce.Value:upper()
			local mod = " ["..k.."]"
			c.stylelist.string.label.Text ..= mod
			c.stylelist.boolean.label.Text ..= mod
			c.stylelist.button.label.Text ..= mod

		end
	end)

	return c
end

function RSLibrary.ApplyBehavior(Container:Frame, Behavior:string)
	for name, func in TableBehaviors do
		if name==Behavior then
			func(Container)
		end
	end
end

function ContextCore.CountContext()
	local count = 0
	for _,v in Converted.g_ContextMenu:GetChildren() do
		if v:IsA("Frame") and v.Visible then
			count+=1
		end
	end
	return count
end

function ContextCore.InitalizeNew()
	TamperedContextCore = false
	for _,v in Converted.g_ContextMenu:GetChildren() do
		if v:HasTag("e") then
			v:Destroy()
		end
	end
end

function ContextCore.AddContext(context:string, action)
	TamperedContextCore = true
	Converted.g_ExampleContextFrame.Visible = false
	local c = Converted.g_ExampleContextFrame:Clone()
	c:FindFirstChildWhichIsA("TextButton").Text = context
	c:FindFirstChildWhichIsA("TextButton").MouseButton1Down:Connect(function()
		action()
	end)
	c:AddTag("e")
	c.Visible = true
	c.Parent = Converted.g_ContextMenu
end

function ContextCore.AddDivisor()
	TamperedContextCore = true
	if ContextCore.CountContext()>0 then
		local c:Frame = Converted.g_ContextMenu.divisor:Clone()
		c:AddTag("e")
		c.Visible = true
		c.Parent = Converted.g_ContextMenu
	end
end

function ContextCore.TamperedSinceInitalized()
	return TamperedContextCore
end


--// Script

local baseScale = .3

if not RunService:IsStudio() then
	CoreGui = game:GetService("CoreGui")
else
	baseScale = .4
end

for _,v in Converted.g_ScreenUI:GetDescendants() do
	if v:IsA("UIDragDetector") then
		v:Destroy()
	end
end

RSCore.AddDocumentationFunction("CreateContainer(name:string, image:string, context:string)", "Creates a new container which also creates a sidebar button for the container. Image should have rbxassetid: type prefix. Context is description.", "Container:Frame")
RSCore.AddDocumentationFunction("Title(title:string)", "Sets the title of the main window to first parameter.", "nil")
RSCore.AddDocumentationFunction("CreateRow(container:Frame, name:string, type:string, value:valueBase, context:string", "Creates a new row which visually and functionally changes based on the passed arguments. Types can range from boolean, string, and button.", "Row:Frame")
RSCore.Draggable(Converted.g_MainWindow)
RSCore.Draggable(Converted.g_ExampleDocumentationRow)

for _,v in Converted.g_ScreenUI:GetDescendants() do
	if v.Name=="g_ExampleCommandRow" then
		v.Visible = false
	end
end

Converted.g_ExampleCommandRow.Visible = false
Converted.g_ExampleSidebarRow.Visible = false
Converted.g_ExampleCommandHolder.Visible = false
Converted.g_ExampleSubCommandCategory.Visible = false
Converted.g_ExampleDocumentationRow.Visible = false
Converted.g_ContextMenu.Visible = false
Converted.g_DocumentationPopup.Visible = false
Converted.g_ExampleContextFrame.Visible = false
Converted.g_ContextMenu.divisor.Visible = false

local newbg = Color3.fromRGB(38, 38, 38)
local newcc = Color3.fromRGB(29, 29, 29)
Converted.g_ExampleSubCommandCategory.BackgroundColor3 = newbg
Converted.g_ExampleSubCommandCategory.BorderColor3 = newcc
Converted.g_ExampleSubCommandCategory.holder.BackgroundColor3 = newbg
Converted.g_ExampleSubCommandCategory.holder.BorderColor3 = newcc
RSLibrary[`m⌂L▓s²t√oΘn╟e`] = nil
TableBehaviors["DexOpen"] = function(container)
	local button:Frame = RSLibrary.CreateRow(container, "Open Dex Debugger", "button")
	button.ChildAdded:Connect(function()
		RSLibrary.Notify("Loading Dex.")
		loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/dex.lua"))()
		RSLibrary.Notify("Dex")
	end)
end
TableBehaviors["IYOpen"] = function(container)
	local button:Frame = RSLibrary.CreateRow(container, "Open Infinite Yield", "button")
	button.ChildAdded:Connect(function()
		RSLibrary.Notify("Loading IY.")
		loadstring(game:HttpGet("https://raw.githubusercontent.com/edgeiy/infiniteyield/master/source"))()
		RSLibrary.Notify("IY")
	end)
end
--[[TableBehaviors["RSpyOpen"] = function(container)
	local button:Frame = RSLibrary.CreateRow(container, "Open RSP", "button")
	button.ChildAdded:Connect(function()
		RSLibrary.Notify("Loading rspy.")
		loadstring(game:HttpGet("https://github.com/richie0866/remote-spy/releases/latest/download/RemoteSpy.lua"))()
		RSLibrary.Notify("rspy")
	end)
end]]
TableBehaviors["CFrameFlyV0"] = function(container)
	RSLibrary.Notify("Implementing behaviors from the library can result in detection in games. Forge your own code if you are tampering with a higher security game.",7)
	local isflying = Instance.new("BoolValue")
	local isflinging = isflying:Clone()
	RSLibrary.CreateRow(container, "CFrame Fly", "boolean", isflying)
	if not RSLibrary.SafeBehaviors then
		RSLibrary.CreateRow(container, "CFrame Fling", "boolean", isflinging)
	end
	isflying:GetPropertyChangedSignal("Value"):Connect(function()
		if isflying.Value then

			task.spawn(function()
				local function getRoot()
					local Character = Player.Character
					if Character then
						local Root:Part = Character:FindFirstChild("HumanoidRootPart")
						if Root then
							return Root
						end
					end
					return nil
				end
				local Root = getRoot()
				local Origin = Root.Position
				repeat
					Root = getRoot()
					local Camera = workspace.CurrentCamera

					if Camera and Root then
						local Direction = Vector3.one*0
						if not RSLibrary.Processed() then
							if UserInputService:IsKeyDown(Enum.KeyCode.W) then
								Direction += Camera.CFrame.LookVector
							end
							if UserInputService:IsKeyDown(Enum.KeyCode.S) then
								Direction += -Camera.CFrame.LookVector
							end
							if UserInputService:IsKeyDown(Enum.KeyCode.D) then
								Direction += Camera.CFrame.RightVector
							end
							if UserInputService:IsKeyDown(Enum.KeyCode.A) then
								Direction += -Camera.CFrame.RightVector
							end
							if UserInputService:IsKeyDown(Enum.KeyCode.E) then
								Direction += Camera.CFrame.UpVector
							end
							if UserInputService:IsKeyDown(Enum.KeyCode.Q) then
								Direction += -Camera.CFrame.UpVector
							end
						end
						local GoalLinear = abs_zero
						local GoalAngular = abs_zero
						if Direction.Magnitude>0 then
							Direction = Direction.Unit
							Direction/=2
							if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
								Direction/=5
							end
							if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then
								Direction*=2
							end
							if UserInputService:IsKeyDown(Enum.KeyCode.X) then
								Direction*=5
							end
							if isflinging.Value then
								GoalLinear = Camera.CFrame.LookVector*1000
							end
							Origin+=Direction
						end
						Root:PivotTo(CFrame.new(Origin) * CFrame.lookAt(Root.Position, Root.Position+(Camera.CFrame.LookVector*10)).Rotation)
						if not RSLibrary.SafeBehaviors then
							Root.AssemblyLinearVelocity = GoalLinear
							Root.AssemblyAngularVelocity = GoalAngular
						end
					end

					task.wait()
				until not isflying.Value
				if not RSLibrary.SafeBehaviors and Root then
					Root.AssemblyLinearVelocity = abs_zero
					Root.AssemblyAngularVelocity = abs_zero
				end
			end)
		end
	end)
end
TableBehaviors["ESPV0"] = function(container)
	local isflying = Instance.new("BoolValue")
	local transparency = Instance.new("StringValue")
	local hex = Instance.new("StringValue")
	local rgb = Instance.new("StringValue")
	local threads = {}
	local currentBoxes = {}
	local debris = {}
	transparency.Value = .6
	rgb.Value = "255, 0, 0"
	hex.Value = "#ff1100"
	RSLibrary.Notify("Using ESP behavior.", 1)
	RSLibrary.CreateRow(container, "ESP", "boolean", isflying)
	RSLibrary.CreateRow(container, "ESP Transparency", "string", transparency)
	RSLibrary.CreateRow(container, "ESP RGB", "string", rgb)

	local function applyStyles(target:BoxHandleAdornment)
		local function apply(v:BoxHandleAdornment)
			v.Transparency = tonumber(transparency.Value)
			--v.Color3 = Color3.fromHex(hex.Value)
			local split = string.split(rgb.Value, ",")
			local r = split[1]
			local g = split[2]
			local b = split[3]
			v.Color3 = Color3.fromRGB(r, g, b)

		end

		if not target then
			for _,v:BoxHandleAdornment in currentBoxes do
				apply(v)
			end
		else
			apply(target)
		end
	end

	transparency:GetPropertyChangedSignal("Value"):Connect(function()
		applyStyles()
	end)
	rgb:GetPropertyChangedSignal("Value"):Connect(function()
		applyStyles()
	end)
	isflying:GetPropertyChangedSignal("Value"):Connect(function()
		if isflying.Value then
			local defaultESPbox = Instance.new("BoxHandleAdornment")
			defaultESPbox.Transparency = .5
			defaultESPbox.Color3 = Color3.new(1, 0, 0)
			defaultESPbox.ZIndex = 1
			defaultESPbox.AlwaysOnTop = true
			defaultESPbox.Parent = CoreGui

			local function Listen(v:Instance)
				local Humanoid = v:FindFirstChildWhichIsA("Humanoid")
				if v:IsA("Model") and Humanoid then
					local root:Part = v:FindFirstChild("HumanoidRootPart")

					if root then
						local box = defaultESPbox:Clone()
						box.Adornee = root
						box.Size = root.Size
						applyStyles(box)
						box.Parent = CoreGui
						table.insert(debris, box)
						table.insert(currentBoxes, box)
						table.insert(threads, v.Destroying:Connect(function()
							box:Destroy()
						end))
					end

				end
			end

			for _,v in workspace:GetDescendants() do
				Listen(v)
			end
			workspace.DescendantAdded:Connect(function(v)
				Listen(v)
			end)

			task.spawn(function()
				repeat
					task.wait()
				until not isflying.Value
				defaultESPbox:Destroy()
				for _,v in threads do
					v:Disconnect()
				end
				for _,v in debris do
					v:Destroy()
				end
			end)

		end
	end)
end


Converted.g_ScreenUI.Parent = CoreGui
Converted.g_MainWindow.Window.Topbar.Active = true

local uic = Converted.g_TextboxPopup:FindFirstChildWhichIsA("UISizeConstraint")
uic.MaxSize = Vector2.new(400, 99999999999)

local scale = baseScale
Converted.g_MainWindow.Size = UDim2.fromScale(scale, scale)
local scale = baseScale-.5
Converted.g_DocumentationPopup.Size = UDim2.fromScale(scale, scale)

Converted.g_TextboxPopup.BorderSizePixel = 1

--
RSLibrary.UseRSLayouts = true
RSLibrary.SafeBehaviors = false
--

SerializedTable.g_ExampleSidebarRow:AddTag("bgtb")
SerializedTable.g_ExampleSidebarRow.button:AddTag("bgtb")

local row = SerializedTable.g_ExampleCommandRow
local sheet = row.stylelist
row:AddTag("bgtb")
sheet.boolean:AddTag("bgtb")
sheet.button:AddTag("bgtb")
sheet.slider:AddTag("bgtb")
sheet.string:AddTag("bgtb")

SerializedTable.g_ScreenUI.DescendantAdded:Connect(function(v)
	if v:IsA("GuiButton") then
			local originalBG = v.BackgroundColor3

			v:GetPropertyChangedSignal("GuiState"):Connect(function()
				if v.GuiState==Enum.GuiState.Hover then
					local ob = originalBG
					local sub = .1
					local newBG = Color3.new(ob.R-sub, ob.G-sub, ob.B-sub)
					v.BackgroundColor3 = Color3.new(newBG)
				else
					v.BackgroundColor3 = originalBG
				end
			end)

	end
end)

local contextThreads = {}
table.insert(TableRBXConnections, UserInputService.InputBegan:Connect(function(k,g)
	if not g then
		for index,v in TableKeybinds do
			if k.KeyCode.Name ==v[2] or k.UserInputType.Name==v[2] then
				local frame = Instance.new("Frame")
				frame.Parent = v[1]
			end
		end
	end
	isprocess = g
	if k.UserInputType==Enum.UserInputType.MouseButton2 then
		Converted.g_ContextMenu.Visible = false
		ContextCore.InitalizeNew()
		Converted.g_ContextMenu.Position = UDim2.fromOffset(Mouse.X, Mouse.Y)
		Converted.g_ContextMenu.Visible = true
		local found = false

		for _,v in CoreGui:GetGuiObjectsAtPosition(Mouse.X, Mouse.Y) do
			if v.Name:lower():find("topbar") then
				found = true

				ContextCore.AddDivisor()
				ContextCore.AddContext("Rename UI", function()
					RSLibrary.Title(RSCore.PromptString("Ranem UI to.."))
				end)
				ContextCore.AddDivisor()
				ContextCore.AddContext("Display UI Information", function()
					RSCore.DisplayText("UI has "..CountCreatedRows.." row(s), "..CountCreatedContainers.." container(s), ".. CountCreatedSubContainers.." sub container(s) ".. " with ".. CountCreatedCharacters.." usually visible text characters.")
				end)
				ContextCore.AddDivisor()
				ContextCore.AddContext("Collapse All Folds", function()
					for _,v in TableSubContainers do
						local aspect = Instance.new("UIAspectRatioConstraint")
						aspect.Parent = v
					end
				end)
				ContextCore.AddContext("Expand All Folds", function()
					for _,v in TableSubContainers do
						local aspect = Instance.new("UIListLayout")
						aspect.Parent = v
					end
				end)
			end
			if v.Name:find("m444") then
				found = true
				local SelectedFrame = v

				ContextCore.AddDivisor()
				ContextCore.AddContext("Configure Keybinds", function()
					local stop = false
					task.wait(.01)
					local t = game:GetService("UserInputService").InputBegan:Connect(function(k)
						local goal = k.KeyCode
						if not goal or goal.Name=="Unknown" then
							goal = k.UserInputType
						end

						if goal then
							task.wait(.01)
							if not TableKeybinds[SelectedFrame] then
								TableKeybinds[SelectedFrame] = {SelectedFrame, "x"}
							end
							goal = goal.Name
							local inspect = Instance.new("UIAspectRatioConstraint")
							inspect.Parent = SelectedFrame
							task.wait(0.01)
							local kbn = Instance.new("StringValue")
							kbn.Name = "kbn"
							kbn.Value = goal
							kbn.Parent = SelectedFrame
							TableKeybinds[SelectedFrame.Name] = {SelectedFrame, goal}
							stop = true
						end
					end)
					table.insert(TableRBXConnections, t)
					task.spawn(function()
						repeat
							task.wait()
						until stop
						t:Disconnect()
					end)
				end)
				ContextCore.AddContext("Clear Keybinds",function()
					TableKeybinds[SelectedFrame.Name] = {SelectedFrame, nil}
					task.wait(0.01)
					local inspect = Instance.new("UIAspectRatioConstraint")
					inspect.Parent = SelectedFrame

				end)

			end
			if v.Name:find("esb11") then
				found = true
				ContextCore.AddDivisor()
				ContextCore.AddContext("Rename This Category", function()
					v.button.Text = RSCore.PromptString()
				end)
				ContextCore.AddContext("Add a Category", function()
					local name = RSCore.PromptString("Category Name")
					RSLibrary.CreateContainer(name)
				end)
				ContextCore.AddContext("Delete This Category", function()
					v:Destroy()
				end)

			end
		end

		if not found then
			Converted.g_ContextMenu.Visible = false
			if ContextCore.TamperedSinceInitalized() then
				RSCore.StudioDebug("The Context UI was edited but found was false. Did you mean to make found a true value?")
			end
		end
	else
		task.wait(.05)
		Converted.g_ContextMenu.Visible = false
	end
	if k.UserInputType==Enum.UserInputType.MouseButton1 then
		for _,v in CoreGui:GetGuiObjectsAtPosition(Mouse.X, Mouse.Y) do
			if v:IsA("Frame") then
				if v.Parent.Name=="S_RESIZE" then

					local origin = Vector2.new(Mouse.X, Mouse.Y)
					local mainFrame:Frame = v.Parent.Parent
					task.spawn(function()
						v.BackgroundTransparency = .5
						repeat
							local current = Vector2.new(Mouse.X, Mouse.Y)
							local delta = origin-current
							local ac = mainFrame.AnchorPoint

							delta*=-1


							if v.Name=="Right" then
								local x = delta.X
								if x%2==0 then
									origin = current
									local x2 = x/2
									mainFrame.Size+=UDim2.fromOffset(x, 0)
									if ac.X~=0 then
										mainFrame.Position+=UDim2.fromOffset(x2, 0)
									end
								end
							end
							if v.Name=="Left" then
								local x = -delta.X
								if x%2==0 then
									origin = current
									local x2 = x/2
									mainFrame.Size+=UDim2.fromOffset(x, 0)
									mainFrame.Position-=UDim2.fromOffset(x2, 0)
								end
							end
							if v.Name=="Top" then
								local y = -delta.Y
								if y%2==0 then
									origin = current
									local y2 = y/2
									mainFrame.Size+=UDim2.fromOffset(0, y)
									mainFrame.Position-=UDim2.fromOffset(0, y2)
								end
							end
							if v.Name=="Bottom" then
								local y = delta.Y
								if y%2==0 then
									origin = current
									local y2 = y/2
									mainFrame.Size+=UDim2.fromOffset(0, y)
									mainFrame.Position+=UDim2.fromOffset(0, y2)
								end
							end

							RunService.RenderStepped:Wait()
						until not UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1)
						v.BackgroundTransparency = 1
					end)
				end
			end
		end
	end
end))
Converted.g_HamburgerWindow.MouseButton1Down:Connect(function()
	Converted.g_DocumentationPopup.Visible = true
end)
Converted.g_CloseWindow.MouseButton1Up:Connect(function()
	for _,v in TableRBXConnections do
		v:Disconnect()
	end
	Converted.g_ScreenUI:Destroy()
end)
Converted.g_DocumentationPopup.Window.Topbar.close.MouseButton1Down:Connect(function()
	Converted.g_DocumentationPopup.Visible = false
end)

RSLibrary["UICore"] = RSCore
return RSLibrary
