--// Variables

local uVersion = "v1.0"

local RSLibrary = {}

local RSCore = {}
local ContextCore = {}

local TableDragQueue = {}
local TableRBXConnections = {}
local TableFunctionTasks = {}
local TableCoroutineTasks = {}
local TableTempValues = {}
local TableKeybinds = {}
local TableSubContainers = {}
local TableBehaviors = {}
local TableDebugLog = {}

local CountCreatedContainers = 0
local CountCreatedRows = 0
local CountCreatedCharacters = 0
local CountCreatedSubContainers = 0

local abs_zero = Vector3.one*0

local TamperedContextCore = false
local isprocess = false

local Player = game:GetService("Players").LocalPlayer
local Mouse = Player:GetMouse()

local CoreGui = Player.PlayerGui
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local StarterGui = game:GetService("StarterGui")


--// Functions

local inf = 9^70
-- v1.0.5 in 4.83385705947876
local SerializedTable = {}
local function InsertSerial()
	SerializedTable[`g_ScreenUI`] = Instance.new(`ScreenGui`)
	SerializedTable[`g_DocumentationPopup`] = Instance.new(`CanvasGroup`)
	SerializedTable[`Window`] = Instance.new(`Frame`)
	SerializedTable[`Topbar`] = Instance.new(`Frame`)
	SerializedTable[`label`] = Instance.new(`TextLabel`)
	SerializedTable[`ImageLabel`] = Instance.new(`ImageLabel`)
	SerializedTable[`close`] = Instance.new(`TextButton`)
	SerializedTable[`g_DocumentationHolder`] = Instance.new(`ScrollingFrame`)
	SerializedTable[`g_ExampleDocumentationRow`] = Instance.new(`Frame`)
	SerializedTable[`fname`] = Instance.new(`TextLabel`)
	SerializedTable[`rtn`] = Instance.new(`TextLabel`)
	SerializedTable[`fdescrip`] = Instance.new(`TextLabel`)
	SerializedTable[`rtng`] = Instance.new(`TextLabel`)
	SerializedTable[`UIListLayout`] = Instance.new(`UIListLayout`)
	SerializedTable[`UIPadding`] = Instance.new(`UIPadding`)
	SerializedTable[`g_ContextMenu`] = Instance.new(`CanvasGroup`)
	SerializedTable[`g_ExampleContextFrame`] = Instance.new(`Frame`)
	SerializedTable[`TextButton`] = Instance.new(`TextButton`)
	SerializedTable[`19`] = Instance.new(`UIPadding`)
	SerializedTable[`20`] = Instance.new(`UIListLayout`)
	SerializedTable[`divisor`] = Instance.new(`Frame`)
	SerializedTable[`b`] = Instance.new(`Frame`)
	SerializedTable[`g_KeybindPopup`] = Instance.new(`CanvasGroup`)
	SerializedTable[`24`] = Instance.new(`Frame`)
	SerializedTable[`25`] = Instance.new(`Frame`)
	SerializedTable[`26`] = Instance.new(`TextLabel`)
	SerializedTable[`27`] = Instance.new(`ImageLabel`)
	SerializedTable[`28`] = Instance.new(`TextButton`)
	SerializedTable[`g_TextboxPopup`] = Instance.new(`CanvasGroup`)
	SerializedTable[`30`] = Instance.new(`Frame`)
	SerializedTable[`TextBox`] = Instance.new(`TextBox`)
	SerializedTable[`32`] = Instance.new(`UIPadding`)
	SerializedTable[`33`] = Instance.new(`UIPadding`)
	SerializedTable[`context`] = Instance.new(`TextLabel`)
	SerializedTable[`UISizeConstraint`] = Instance.new(`UISizeConstraint`)
	SerializedTable[`g_NotificationHolder`] = Instance.new(`CanvasGroup`)
	SerializedTable[`37`] = Instance.new(`UIPadding`)
	SerializedTable[`38`] = Instance.new(`UIListLayout`)
	SerializedTable[`oldExampleNotifFrame`] = Instance.new(`TextLabel`)
	SerializedTable[`40`] = Instance.new(`UIPadding`)
	SerializedTable[`41`] = Instance.new(`UISizeConstraint`)
	SerializedTable[`g_ExampleNotifFrame`] = Instance.new(`Frame`)
	SerializedTable[`txt`] = Instance.new(`TextLabel`)
	SerializedTable[`44`] = Instance.new(`UIPadding`)
	SerializedTable[`45`] = Instance.new(`UISizeConstraint`)
	SerializedTable[`bu`] = Instance.new(`Frame`)
	SerializedTable[`exop`] = Instance.new(`TextButton`)
	SerializedTable[`48`] = Instance.new(`UIPadding`)
	SerializedTable[`49`] = Instance.new(`UIListLayout`)
	SerializedTable[`50`] = Instance.new(`UIPadding`)
	SerializedTable[`g_ColorPickerPopup`] = Instance.new(`CanvasGroup`)
	SerializedTable[`52`] = Instance.new(`Frame`)
	SerializedTable[`53`] = Instance.new(`Frame`)
	SerializedTable[`54`] = Instance.new(`TextLabel`)
	SerializedTable[`55`] = Instance.new(`ImageLabel`)
	SerializedTable[`56`] = Instance.new(`TextButton`)
	SerializedTable[`Frame`] = Instance.new(`Frame`)
	SerializedTable[`UIAspectRatioConstraint`] = Instance.new(`UIAspectRatioConstraint`)
	SerializedTable[`UIGradient`] = Instance.new(`UIGradient`)
	SerializedTable[`60`] = Instance.new(`Frame`)
	SerializedTable[`61`] = Instance.new(`UIAspectRatioConstraint`)
	SerializedTable[`62`] = Instance.new(`UIAspectRatioConstraint`)
	SerializedTable[`g_MainWindow`] = Instance.new(`Frame`)
	SerializedTable[`UIDragDetector`] = Instance.new(`UIDragDetector`)
	SerializedTable[`LowResWindow`] = Instance.new(`Frame`)
	SerializedTable[`S_RESIZE`] = Instance.new(`Frame`)
	SerializedTable[`Right`] = Instance.new(`Frame`)
	SerializedTable[`Left`] = Instance.new(`Frame`)
	SerializedTable[`Top`] = Instance.new(`Frame`)
	SerializedTable[`Bottom`] = Instance.new(`Frame`)
	SerializedTable[`71`] = Instance.new(`Frame`)
	SerializedTable[`72`] = Instance.new(`Frame`)
	SerializedTable[`g_TitleText`] = Instance.new(`TextLabel`)
	SerializedTable[`g_CloseWindow`] = Instance.new(`TextButton`)
	SerializedTable[`75`] = Instance.new(`ImageLabel`)
	SerializedTable[`g_HamburgerWindow`] = Instance.new(`TextButton`)
	SerializedTable[`77`] = Instance.new(`ImageLabel`)
	SerializedTable[`CommandPanel`] = Instance.new(`Frame`)
	SerializedTable[`g_ExampleCommandHolder`] = Instance.new(`ScrollingFrame`)
	SerializedTable[`holder`] = Instance.new(`ScrollingFrame`)
	SerializedTable[`81`] = Instance.new(`UIListLayout`)
	SerializedTable[`82`] = Instance.new(`UIPadding`)
	SerializedTable[`g_ExampleSubCommandCategory`] = Instance.new(`Frame`)
	SerializedTable[`84`] = Instance.new(`TextLabel`)
	SerializedTable[`85`] = Instance.new(`UIPadding`)
	SerializedTable[`dropd`] = Instance.new(`TextButton`)
	SerializedTable[`87`] = Instance.new(`UIAspectRatioConstraint`)
	SerializedTable[`88`] = Instance.new(`Frame`)
	SerializedTable[`89`] = Instance.new(`UIListLayout`)
	SerializedTable[`90`] = Instance.new(`UIPadding`)
	SerializedTable[`g_ExampleCommandRow`] = Instance.new(`Frame`)
	SerializedTable[`button`] = Instance.new(`TextButton`)
	SerializedTable[`e.Hover`] = Instance.new(`ObjectValue`)
	SerializedTable[`e.Action`] = Instance.new(`ObjectValue`)
	SerializedTable[`95`] = Instance.new(`ObjectValue`)
	SerializedTable[`96`] = Instance.new(`ObjectValue`)
	SerializedTable[`stylelist`] = Instance.new(`Frame`)
	SerializedTable[`boolean`] = Instance.new(`Frame`)
	SerializedTable[`switch`] = Instance.new(`Frame`)
	SerializedTable[`true`] = Instance.new(`ImageLabel`)
	SerializedTable[`TextLabel`] = Instance.new(`TextLabel`)
	SerializedTable[`false`] = Instance.new(`ImageLabel`)
	SerializedTable[`103`] = Instance.new(`TextLabel`)
	SerializedTable[`104`] = Instance.new(`UIPadding`)
	SerializedTable[`105`] = Instance.new(`TextButton`)
	SerializedTable[`string`] = Instance.new(`Frame`)
	SerializedTable[`textbox`] = Instance.new(`Frame`)
	SerializedTable[`edittext`] = Instance.new(`TextBox`)
	SerializedTable[`109`] = Instance.new(`UISizeConstraint`)
	SerializedTable[`110`] = Instance.new(`UIPadding`)
	SerializedTable[`111`] = Instance.new(`UIPadding`)
	SerializedTable[`112`] = Instance.new(`TextButton`)
	SerializedTable[`113`] = Instance.new(`UIPadding`)
	SerializedTable[`114`] = Instance.new(`Frame`)
	SerializedTable[`115`] = Instance.new(`TextButton`)
	SerializedTable[`slider`] = Instance.new(`Frame`)
	SerializedTable[`117`] = Instance.new(`TextButton`)
	SerializedTable[`slide`] = Instance.new(`Frame`)
	SerializedTable[`119`] = Instance.new(`Frame`)
	SerializedTable[`120`] = Instance.new(`TextLabel`)
	SerializedTable[`end`] = Instance.new(`Frame`)
	SerializedTable[`122`] = Instance.new(`UIPadding`)
	SerializedTable[`123`] = Instance.new(`UIPadding`)
	SerializedTable[`SearchBar`] = Instance.new(`Frame`)
	SerializedTable[`125`] = Instance.new(`TextBox`)
	SerializedTable[`126`] = Instance.new(`UIPadding`)
	SerializedTable[`g_ConfigButtonHolder`] = Instance.new(`ScrollingFrame`)
	SerializedTable[`g_ExampleConfigButtonRow`] = Instance.new(`Frame`)
	SerializedTable[`ico`] = Instance.new(`ImageButton`)
	SerializedTable[`130`] = Instance.new(`UIListLayout`)
	SerializedTable[`131`] = Instance.new(`UIPadding`)
	SerializedTable[`132`] = Instance.new(`Frame`)
	SerializedTable[`g_SidebarHolder`] = Instance.new(`ScrollingFrame`)
	SerializedTable[`g_ExampleSidebarRow`] = Instance.new(`Frame`)
	SerializedTable[`135`] = Instance.new(`TextButton`)
	SerializedTable[`136`] = Instance.new(`UIPadding`)
	SerializedTable[`137`] = Instance.new(`ObjectValue`)
	SerializedTable[`138`] = Instance.new(`UIPadding`)
	SerializedTable[`139`] = Instance.new(`UIListLayout`)
	SerializedTable[`bg`] = Instance.new(`Frame`)
	SerializedTable[`g_ScreenUI`].Name = `g_ScreenUI`;SerializedTable[`g_ScreenUI`].Parent = nil;SerializedTable[`g_ScreenUI`].ZIndexBehavior = Enum.ZIndexBehavior.Sibling;SerializedTable[`g_ScreenUI`].DisplayOrder = 100000000;
	SerializedTable[`g_DocumentationPopup`].Name = `g_DocumentationPopup`;SerializedTable[`g_DocumentationPopup`].Parent = SerializedTable[`g_ScreenUI`];SerializedTable[`g_DocumentationPopup`].AnchorPoint = Vector2.new(0.5,0.5);SerializedTable[`g_DocumentationPopup`].BackgroundColor3 = Color3.fromRGB(56.0000042617321,56.0000042617321,56.0000042617321);SerializedTable[`g_DocumentationPopup`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`g_DocumentationPopup`].BorderSizePixel = 0;SerializedTable[`g_DocumentationPopup`].Position = UDim2.new(0.5,0,0.5,0);SerializedTable[`g_DocumentationPopup`].Size = UDim2.new(0.4000000059604645,0,0.4000000059604645,0);SerializedTable[`g_DocumentationPopup`].Visible = false;
	SerializedTable[`Window`].Name = `Window`;SerializedTable[`Window`].Parent = SerializedTable[`g_DocumentationPopup`];SerializedTable[`Window`].AnchorPoint = Vector2.new(0.5,0.5);SerializedTable[`Window`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`Window`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`Window`].Position = UDim2.new(0.5,0,0.5,0);SerializedTable[`Window`].Size = UDim2.new(1,-10,1,-10);
	SerializedTable[`Topbar`].Name = `Topbar`;SerializedTable[`Topbar`].Parent = SerializedTable[`Window`];SerializedTable[`Topbar`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`Topbar`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`Topbar`].Size = UDim2.new(1,0,0,20);
	SerializedTable[`label`].Name = `label`;SerializedTable[`label`].Parent = SerializedTable[`Topbar`];SerializedTable[`label`].AnchorPoint = Vector2.new(1,0);SerializedTable[`label`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`label`].BackgroundTransparency = 1;SerializedTable[`label`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`label`].BorderSizePixel = 0;SerializedTable[`label`].Interactable = false;SerializedTable[`label`].Position = UDim2.new(1,0,0,0);SerializedTable[`label`].Size = UDim2.new(1,-5,1,0);SerializedTable[`label`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`label`].FontSize = Enum.FontSize.Size14;SerializedTable[`label`].Text = `RSLibrary Documentation`;SerializedTable[`label`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`label`].TextScaled = true;SerializedTable[`label`].TextSize = 14;SerializedTable[`label`].TextWrap = true;SerializedTable[`label`].TextWrapped = true;SerializedTable[`label`].TextXAlignment = Enum.TextXAlignment.Left;
	SerializedTable[`ImageLabel`].Parent = SerializedTable[`Topbar`];SerializedTable[`ImageLabel`].AnchorPoint = Vector2.new(1,0.5);SerializedTable[`ImageLabel`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`ImageLabel`].BackgroundTransparency = 1;SerializedTable[`ImageLabel`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`ImageLabel`].BorderSizePixel = 0;SerializedTable[`ImageLabel`].Position = UDim2.new(1,-2,0.5,0);SerializedTable[`ImageLabel`].Size = UDim2.new(0,17,0,17);SerializedTable[`ImageLabel`].Image = `rbxassetid://4661609682`;
	-- The type of Content was not supported. Sorry.

	SerializedTable[`close`].Name = `close`;SerializedTable[`close`].Parent = SerializedTable[`Topbar`];SerializedTable[`close`].AnchorPoint = Vector2.new(1,0);SerializedTable[`close`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`close`].BackgroundTransparency = 0.9990000128746033;SerializedTable[`close`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`close`].BorderSizePixel = 0;SerializedTable[`close`].Position = UDim2.new(1,0,0,0);SerializedTable[`close`].Size = UDim2.new(0,20,0,20);SerializedTable[`close`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`close`].FontSize = Enum.FontSize.Size14;SerializedTable[`close`].Text = ``;SerializedTable[`close`].TextColor3 = Color3.fromRGB(0,0,0);SerializedTable[`close`].TextSize = 14;
	SerializedTable[`g_DocumentationHolder`].Name = `g_DocumentationHolder`;SerializedTable[`g_DocumentationHolder`].Parent = SerializedTable[`Window`];SerializedTable[`g_DocumentationHolder`].Active = true;SerializedTable[`g_DocumentationHolder`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`g_DocumentationHolder`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`g_DocumentationHolder`].Position = UDim2.new(0,5,0,25);SerializedTable[`g_DocumentationHolder`].Size = UDim2.new(1,-10,1,-30);SerializedTable[`g_DocumentationHolder`].AutomaticCanvasSize = Enum.AutomaticSize.Y;SerializedTable[`g_DocumentationHolder`].CanvasSize = UDim2.new(0,0,0,0);SerializedTable[`g_DocumentationHolder`].ScrollBarImageColor3 = Color3.fromRGB(0,0,0);SerializedTable[`g_DocumentationHolder`].ScrollBarThickness = 0;
	SerializedTable[`g_ExampleDocumentationRow`].Name = `g_ExampleDocumentationRow`;SerializedTable[`g_ExampleDocumentationRow`].Parent = SerializedTable[`g_DocumentationHolder`];SerializedTable[`g_ExampleDocumentationRow`].AutomaticSize = Enum.AutomaticSize.Y;SerializedTable[`g_ExampleDocumentationRow`].BackgroundColor3 = Color3.fromRGB(56.0000042617321,56.0000042617321,56.0000042617321);SerializedTable[`g_ExampleDocumentationRow`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`g_ExampleDocumentationRow`].ClipsDescendants = true;SerializedTable[`g_ExampleDocumentationRow`].Size = UDim2.new(1,0,0,0);
	SerializedTable[`fname`].Name = `fname`;SerializedTable[`fname`].Parent = SerializedTable[`g_ExampleDocumentationRow`];SerializedTable[`fname`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`fname`].BackgroundTransparency = 1;SerializedTable[`fname`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`fname`].BorderSizePixel = 0;SerializedTable[`fname`].Size = UDim2.new(1,0,-0,20);SerializedTable[`fname`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Bold,Enum.FontStyle.Normal,true);SerializedTable[`fname`].FontSize = Enum.FontSize.Size14;SerializedTable[`fname`].Text = `Function Name`;SerializedTable[`fname`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`fname`].TextScaled = true;SerializedTable[`fname`].TextSize = 14;SerializedTable[`fname`].TextWrap = true;SerializedTable[`fname`].TextWrapped = true;SerializedTable[`fname`].TextXAlignment = Enum.TextXAlignment.Left;SerializedTable[`fname`].TextYAlignment = Enum.TextYAlignment.Top;
	SerializedTable[`rtn`].Name = `rtn`;SerializedTable[`rtn`].Parent = SerializedTable[`g_ExampleDocumentationRow`];SerializedTable[`rtn`].AutomaticSize = Enum.AutomaticSize.Y;SerializedTable[`rtn`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`rtn`].BackgroundTransparency = 1;SerializedTable[`rtn`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`rtn`].BorderSizePixel = 0;SerializedTable[`rtn`].Position = UDim2.new(0,0,0,40);SerializedTable[`rtn`].Size = UDim2.new(1,0,-0,20);SerializedTable[`rtn`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Bold,Enum.FontStyle.Normal,true);SerializedTable[`rtn`].FontSize = Enum.FontSize.Size24;SerializedTable[`rtn`].Text = `returns`;SerializedTable[`rtn`].TextColor3 = Color3.fromRGB(85.0000025331974,0,0);SerializedTable[`rtn`].TextSize = 20;SerializedTable[`rtn`].TextWrap = true;SerializedTable[`rtn`].TextWrapped = true;SerializedTable[`rtn`].TextXAlignment = Enum.TextXAlignment.Left;SerializedTable[`rtn`].TextYAlignment = Enum.TextYAlignment.Top;
	SerializedTable[`fdescrip`].Name = `fdescrip`;SerializedTable[`fdescrip`].Parent = SerializedTable[`g_ExampleDocumentationRow`];SerializedTable[`fdescrip`].AutomaticSize = Enum.AutomaticSize.Y;SerializedTable[`fdescrip`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`fdescrip`].BackgroundTransparency = 1;SerializedTable[`fdescrip`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`fdescrip`].BorderSizePixel = 0;SerializedTable[`fdescrip`].Position = UDim2.new(0,0,0,20);SerializedTable[`fdescrip`].Size = UDim2.new(1,0,-0,20);SerializedTable[`fdescrip`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`fdescrip`].FontSize = Enum.FontSize.Size24;SerializedTable[`fdescrip`].Text = `Function Description`;SerializedTable[`fdescrip`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`fdescrip`].TextSize = 20;SerializedTable[`fdescrip`].TextWrap = true;SerializedTable[`fdescrip`].TextWrapped = true;SerializedTable[`fdescrip`].TextXAlignment = Enum.TextXAlignment.Left;SerializedTable[`fdescrip`].TextYAlignment = Enum.TextYAlignment.Top;
	SerializedTable[`rtng`].Name = `rtng`;SerializedTable[`rtng`].Parent = SerializedTable[`g_ExampleDocumentationRow`];SerializedTable[`rtng`].AutomaticSize = Enum.AutomaticSize.Y;SerializedTable[`rtng`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`rtng`].BackgroundTransparency = 1;SerializedTable[`rtng`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`rtng`].BorderSizePixel = 0;SerializedTable[`rtng`].Position = UDim2.new(0,0,0,40);SerializedTable[`rtng`].Size = UDim2.new(1,0,-0,20);SerializedTable[`rtng`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Bold,Enum.FontStyle.Normal,true);SerializedTable[`rtng`].FontSize = Enum.FontSize.Size24;SerializedTable[`rtng`].Text = `goalRTN:object`;SerializedTable[`rtng`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`rtng`].TextSize = 20;SerializedTable[`rtng`].TextWrap = true;SerializedTable[`rtng`].TextWrapped = true;SerializedTable[`rtng`].TextXAlignment = Enum.TextXAlignment.Right;SerializedTable[`rtng`].TextYAlignment = Enum.TextYAlignment.Top;
	SerializedTable[`UIListLayout`].Parent = SerializedTable[`g_DocumentationHolder`];SerializedTable[`UIListLayout`].HorizontalAlignment = Enum.HorizontalAlignment.Center;SerializedTable[`UIListLayout`].SortOrder = Enum.SortOrder.LayoutOrder;SerializedTable[`UIListLayout`].Padding = UDim.new(0,5);
	SerializedTable[`UIPadding`].Parent = SerializedTable[`g_DocumentationHolder`];SerializedTable[`UIPadding`].PaddingBottom = UDim.new(0,5);SerializedTable[`UIPadding`].PaddingLeft = UDim.new(0,5);SerializedTable[`UIPadding`].PaddingRight = UDim.new(0,5);SerializedTable[`UIPadding`].PaddingTop = UDim.new(0,5);
	SerializedTable[`g_ContextMenu`].Name = `g_ContextMenu`;SerializedTable[`g_ContextMenu`].Parent = SerializedTable[`g_ScreenUI`];SerializedTable[`g_ContextMenu`].AutomaticSize = Enum.AutomaticSize.Y;SerializedTable[`g_ContextMenu`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`g_ContextMenu`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`g_ContextMenu`].Size = UDim2.new(0,250,0,0);SerializedTable[`g_ContextMenu`].Visible = false;
	SerializedTable[`g_ExampleContextFrame`].Name = `g_ExampleContextFrame`;SerializedTable[`g_ExampleContextFrame`].Parent = SerializedTable[`g_ContextMenu`];SerializedTable[`g_ExampleContextFrame`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`g_ExampleContextFrame`].BackgroundTransparency = 1;SerializedTable[`g_ExampleContextFrame`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`g_ExampleContextFrame`].BorderSizePixel = 0;SerializedTable[`g_ExampleContextFrame`].Size = UDim2.new(1,0,0,20);
	SerializedTable[`TextButton`].Parent = SerializedTable[`g_ExampleContextFrame`];SerializedTable[`TextButton`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`TextButton`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`TextButton`].BorderSizePixel = 0;SerializedTable[`TextButton`].Size = UDim2.new(1,0,1,0);SerializedTable[`TextButton`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`TextButton`].FontSize = Enum.FontSize.Size18;SerializedTable[`TextButton`].Text = `Configure Keybinds`;SerializedTable[`TextButton`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`TextButton`].TextSize = 16;SerializedTable[`TextButton`].TextXAlignment = Enum.TextXAlignment.Left;
	SerializedTable[`19`].Parent = SerializedTable[`TextButton`];SerializedTable[`19`].PaddingLeft = UDim.new(0,25);
	SerializedTable[`20`].Parent = SerializedTable[`g_ContextMenu`];SerializedTable[`20`].SortOrder = Enum.SortOrder.LayoutOrder;
	SerializedTable[`divisor`].Name = `divisor`;SerializedTable[`divisor`].Parent = SerializedTable[`g_ContextMenu`];SerializedTable[`divisor`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`divisor`].BackgroundTransparency = 1;SerializedTable[`divisor`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`divisor`].BorderSizePixel = 0;SerializedTable[`divisor`].Size = UDim2.new(1,0,0,10);SerializedTable[`divisor`].Visible = false;
	SerializedTable[`b`].Name = `b`;SerializedTable[`b`].Parent = SerializedTable[`divisor`];SerializedTable[`b`].AnchorPoint = Vector2.new(0.5,0.5);SerializedTable[`b`].BackgroundColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`b`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`b`].BorderSizePixel = 0;SerializedTable[`b`].Position = UDim2.new(0.5,0,0.5,0);SerializedTable[`b`].Size = UDim2.new(1,-20,0,1);
	SerializedTable[`g_KeybindPopup`].Name = `g_KeybindPopup`;SerializedTable[`g_KeybindPopup`].Parent = SerializedTable[`g_ScreenUI`];SerializedTable[`g_KeybindPopup`].AnchorPoint = Vector2.new(0.5,0.5);SerializedTable[`g_KeybindPopup`].BackgroundColor3 = Color3.fromRGB(56.0000042617321,56.0000042617321,56.0000042617321);SerializedTable[`g_KeybindPopup`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`g_KeybindPopup`].BorderSizePixel = 0;SerializedTable[`g_KeybindPopup`].Position = UDim2.new(0.5,0,0.5,0);SerializedTable[`g_KeybindPopup`].Size = UDim2.new(0.4000000059604645,0,0.4000000059604645,0);SerializedTable[`g_KeybindPopup`].Visible = false;
	SerializedTable[`24`].Name = `Window`;SerializedTable[`24`].Parent = SerializedTable[`g_KeybindPopup`];SerializedTable[`24`].AnchorPoint = Vector2.new(0.5,0.5);SerializedTable[`24`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`24`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`24`].Position = UDim2.new(0.5,0,0.5,0);SerializedTable[`24`].Size = UDim2.new(1,-10,1,-10);
	SerializedTable[`25`].Name = `Topbar`;SerializedTable[`25`].Parent = SerializedTable[`24`];SerializedTable[`25`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`25`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`25`].Size = UDim2.new(1,0,0,20);
	SerializedTable[`26`].Name = `label`;SerializedTable[`26`].Parent = SerializedTable[`25`];SerializedTable[`26`].AnchorPoint = Vector2.new(1,0);SerializedTable[`26`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`26`].BackgroundTransparency = 1;SerializedTable[`26`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`26`].BorderSizePixel = 0;SerializedTable[`26`].Interactable = false;SerializedTable[`26`].Position = UDim2.new(1,0,0,0);SerializedTable[`26`].Size = UDim2.new(1,-5,1,0);SerializedTable[`26`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`26`].FontSize = Enum.FontSize.Size14;SerializedTable[`26`].Text = `Keybinds for CommandName`;SerializedTable[`26`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`26`].TextScaled = true;SerializedTable[`26`].TextSize = 14;SerializedTable[`26`].TextWrap = true;SerializedTable[`26`].TextWrapped = true;SerializedTable[`26`].TextXAlignment = Enum.TextXAlignment.Left;
	SerializedTable[`27`].Parent = SerializedTable[`25`];SerializedTable[`27`].AnchorPoint = Vector2.new(1,0.5);SerializedTable[`27`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`27`].BackgroundTransparency = 1;SerializedTable[`27`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`27`].BorderSizePixel = 0;SerializedTable[`27`].Position = UDim2.new(1,-2,0.5,0);SerializedTable[`27`].Size = UDim2.new(0,17,0,17);SerializedTable[`27`].Image = `rbxassetid://4661609682`;
	-- The type of Content was not supported. Sorry.

	SerializedTable[`28`].Name = `close`;SerializedTable[`28`].Parent = SerializedTable[`25`];SerializedTable[`28`].AnchorPoint = Vector2.new(1,0);SerializedTable[`28`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`28`].BackgroundTransparency = 0.9990000128746033;SerializedTable[`28`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`28`].BorderSizePixel = 0;SerializedTable[`28`].Position = UDim2.new(1,0,0,0);SerializedTable[`28`].Size = UDim2.new(0,20,0,20);SerializedTable[`28`].ZIndex = 5;SerializedTable[`28`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`28`].FontSize = Enum.FontSize.Size14;SerializedTable[`28`].Text = ``;SerializedTable[`28`].TextColor3 = Color3.fromRGB(0,0,0);SerializedTable[`28`].TextSize = 14;
	SerializedTable[`g_TextboxPopup`].Name = `g_TextboxPopup`;SerializedTable[`g_TextboxPopup`].Parent = SerializedTable[`g_ScreenUI`];SerializedTable[`g_TextboxPopup`].AnchorPoint = Vector2.new(0.5,0.5);SerializedTable[`g_TextboxPopup`].AutomaticSize = Enum.AutomaticSize.XY;SerializedTable[`g_TextboxPopup`].BackgroundColor3 = Color3.fromRGB(56.0000042617321,56.0000042617321,56.0000042617321);SerializedTable[`g_TextboxPopup`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`g_TextboxPopup`].BorderSizePixel = 0;SerializedTable[`g_TextboxPopup`].Position = UDim2.new(0.5,0,0.5,0);SerializedTable[`g_TextboxPopup`].Size = UDim2.new(0,0,0,50);SerializedTable[`g_TextboxPopup`].Visible = false;
	SerializedTable[`30`].Name = `Window`;SerializedTable[`30`].Parent = SerializedTable[`g_TextboxPopup`];SerializedTable[`30`].AutomaticSize = Enum.AutomaticSize.XY;SerializedTable[`30`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`30`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`30`].Size = UDim2.new(1,0,0,40);
	SerializedTable[`TextBox`].Parent = SerializedTable[`30`];SerializedTable[`TextBox`].AutomaticSize = Enum.AutomaticSize.XY;SerializedTable[`TextBox`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`TextBox`].BackgroundTransparency = 1;SerializedTable[`TextBox`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`TextBox`].BorderSizePixel = 0;SerializedTable[`TextBox`].Size = UDim2.new(0,0,1,0);SerializedTable[`TextBox`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`TextBox`].FontSize = Enum.FontSize.Size28;SerializedTable[`TextBox`].Text = `hai~! :3 This is here to test~! `;SerializedTable[`TextBox`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`TextBox`].TextSize = 25;SerializedTable[`TextBox`].TextWrap = true;SerializedTable[`TextBox`].TextWrapped = true;
	SerializedTable[`32`].Parent = SerializedTable[`TextBox`];SerializedTable[`32`].PaddingLeft = UDim.new(0,5);SerializedTable[`32`].PaddingRight = UDim.new(0,5);SerializedTable[`32`].PaddingTop = UDim.new(0,15);
	SerializedTable[`33`].Parent = SerializedTable[`g_TextboxPopup`];SerializedTable[`33`].PaddingBottom = UDim.new(0,5);SerializedTable[`33`].PaddingLeft = UDim.new(0,5);SerializedTable[`33`].PaddingRight = UDim.new(0,5);SerializedTable[`33`].PaddingTop = UDim.new(0,5);
	SerializedTable[`context`].Name = `context`;SerializedTable[`context`].Parent = SerializedTable[`g_TextboxPopup`];SerializedTable[`context`].AutomaticSize = Enum.AutomaticSize.X;SerializedTable[`context`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`context`].BackgroundTransparency = 1;SerializedTable[`context`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`context`].BorderSizePixel = 0;SerializedTable[`context`].Size = UDim2.new(1,0,0,15);SerializedTable[`context`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Bold,Enum.FontStyle.Normal,true);SerializedTable[`context`].FontSize = Enum.FontSize.Size14;SerializedTable[`context`].Text = `String Input`;SerializedTable[`context`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`context`].TextSize = 14;
	SerializedTable[`UISizeConstraint`].Parent = SerializedTable[`g_TextboxPopup`];SerializedTable[`UISizeConstraint`].MaxSize = Vector2.new(400,inf);
	SerializedTable[`g_NotificationHolder`].Name = `g_NotificationHolder`;SerializedTable[`g_NotificationHolder`].Parent = SerializedTable[`g_ScreenUI`];SerializedTable[`g_NotificationHolder`].AnchorPoint = Vector2.new(0,1);SerializedTable[`g_NotificationHolder`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`g_NotificationHolder`].BackgroundTransparency = 1;SerializedTable[`g_NotificationHolder`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`g_NotificationHolder`].BorderSizePixel = 0;SerializedTable[`g_NotificationHolder`].Position = UDim2.new(0,0,1,0);SerializedTable[`g_NotificationHolder`].Size = UDim2.new(0,350,1,0);SerializedTable[`g_NotificationHolder`].ZIndex = 99999;
	SerializedTable[`37`].Parent = SerializedTable[`g_NotificationHolder`];SerializedTable[`37`].PaddingBottom = UDim.new(0,5);SerializedTable[`37`].PaddingLeft = UDim.new(0,5);SerializedTable[`37`].PaddingRight = UDim.new(0,5);SerializedTable[`37`].PaddingTop = UDim.new(0,5);
	SerializedTable[`38`].Parent = SerializedTable[`g_NotificationHolder`];SerializedTable[`38`].SortOrder = Enum.SortOrder.LayoutOrder;SerializedTable[`38`].VerticalAlignment = Enum.VerticalAlignment.Bottom;SerializedTable[`38`].Padding = UDim.new(0,5);
	SerializedTable[`oldExampleNotifFrame`].Name = `oldExampleNotifFrame`;SerializedTable[`oldExampleNotifFrame`].Parent = SerializedTable[`g_NotificationHolder`];SerializedTable[`oldExampleNotifFrame`].AutomaticSize = Enum.AutomaticSize.XY;SerializedTable[`oldExampleNotifFrame`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`oldExampleNotifFrame`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`oldExampleNotifFrame`].Visible = false;SerializedTable[`oldExampleNotifFrame`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`oldExampleNotifFrame`].FontSize = Enum.FontSize.Size24;SerializedTable[`oldExampleNotifFrame`].Text = `notif text example`;SerializedTable[`oldExampleNotifFrame`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`oldExampleNotifFrame`].TextSize = 20;SerializedTable[`oldExampleNotifFrame`].TextWrap = true;SerializedTable[`oldExampleNotifFrame`].TextWrapped = true;SerializedTable[`oldExampleNotifFrame`].TextXAlignment = Enum.TextXAlignment.Left;SerializedTable[`oldExampleNotifFrame`].TextYAlignment = Enum.TextYAlignment.Top;
	SerializedTable[`40`].Parent = SerializedTable[`oldExampleNotifFrame`];SerializedTable[`40`].PaddingBottom = UDim.new(0,5);SerializedTable[`40`].PaddingLeft = UDim.new(0,5);SerializedTable[`40`].PaddingRight = UDim.new(0,5);SerializedTable[`40`].PaddingTop = UDim.new(0,5);
	SerializedTable[`41`].Parent = SerializedTable[`oldExampleNotifFrame`];SerializedTable[`41`].MaxSize = Vector2.new(350,inf);
	SerializedTable[`g_ExampleNotifFrame`].Name = `g_ExampleNotifFrame`;SerializedTable[`g_ExampleNotifFrame`].Parent = SerializedTable[`g_NotificationHolder`];SerializedTable[`g_ExampleNotifFrame`].AutomaticSize = Enum.AutomaticSize.XY;SerializedTable[`g_ExampleNotifFrame`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`g_ExampleNotifFrame`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`g_ExampleNotifFrame`].Visible = false;
	SerializedTable[`txt`].Name = `txt`;SerializedTable[`txt`].Parent = SerializedTable[`g_ExampleNotifFrame`];SerializedTable[`txt`].AutomaticSize = Enum.AutomaticSize.XY;SerializedTable[`txt`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`txt`].BackgroundTransparency = 1;SerializedTable[`txt`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`txt`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`txt`].FontSize = Enum.FontSize.Size24;SerializedTable[`txt`].Text = `notif text example | Long text test | commence W test WWWWWWWWWWWWWWWWWW`;SerializedTable[`txt`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`txt`].TextSize = 20;SerializedTable[`txt`].TextWrap = true;SerializedTable[`txt`].TextWrapped = true;SerializedTable[`txt`].TextXAlignment = Enum.TextXAlignment.Left;SerializedTable[`txt`].TextYAlignment = Enum.TextYAlignment.Top;
	SerializedTable[`44`].Parent = SerializedTable[`txt`];SerializedTable[`44`].PaddingBottom = UDim.new(0,5);SerializedTable[`44`].PaddingLeft = UDim.new(0,5);SerializedTable[`44`].PaddingRight = UDim.new(0,5);SerializedTable[`44`].PaddingTop = UDim.new(0,5);
	SerializedTable[`45`].Parent = SerializedTable[`txt`];SerializedTable[`45`].MaxSize = Vector2.new(350,inf);
	SerializedTable[`bu`].Name = `bu`;SerializedTable[`bu`].Parent = SerializedTable[`g_ExampleNotifFrame`];SerializedTable[`bu`].AutomaticSize = Enum.AutomaticSize.Y;SerializedTable[`bu`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`bu`].BackgroundTransparency = 1;SerializedTable[`bu`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`bu`].BorderSizePixel = 0;SerializedTable[`bu`].Position = UDim2.new(0,0,1,0);SerializedTable[`bu`].Size = UDim2.new(1,0,0,25);SerializedTable[`bu`].Visible = false;
	SerializedTable[`exop`].Name = `exop`;SerializedTable[`exop`].Parent = SerializedTable[`bu`];SerializedTable[`exop`].AutomaticSize = Enum.AutomaticSize.X;SerializedTable[`exop`].BackgroundColor3 = Color3.fromRGB(56.000000461936,56.000000461936,56.000000461936);SerializedTable[`exop`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`exop`].Size = UDim2.new(0,0,0,20);SerializedTable[`exop`].Visible = false;SerializedTable[`exop`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Bold,Enum.FontStyle.Normal,true);SerializedTable[`exop`].FontSize = Enum.FontSize.Size18;SerializedTable[`exop`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`exop`].TextSize = 15;
	SerializedTable[`48`].Parent = SerializedTable[`exop`];SerializedTable[`48`].PaddingLeft = UDim.new(0,15);SerializedTable[`48`].PaddingRight = UDim.new(0,15);
	SerializedTable[`49`].Parent = SerializedTable[`bu`];SerializedTable[`49`].FillDirection = Enum.FillDirection.Horizontal;SerializedTable[`49`].SortOrder = Enum.SortOrder.LayoutOrder;SerializedTable[`49`].Padding = UDim.new(0,3);SerializedTable[`49`].Wraps = true;
	SerializedTable[`50`].Parent = SerializedTable[`bu`];SerializedTable[`50`].PaddingBottom = UDim.new(0,3);SerializedTable[`50`].PaddingLeft = UDim.new(0,3);SerializedTable[`50`].PaddingRight = UDim.new(0,3);SerializedTable[`50`].PaddingTop = UDim.new(0,3);
	SerializedTable[`g_ColorPickerPopup`].Name = `g_ColorPickerPopup`;SerializedTable[`g_ColorPickerPopup`].Parent = SerializedTable[`g_ScreenUI`];SerializedTable[`g_ColorPickerPopup`].AnchorPoint = Vector2.new(0.5,0.5);SerializedTable[`g_ColorPickerPopup`].BackgroundColor3 = Color3.fromRGB(56.0000042617321,56.0000042617321,56.0000042617321);SerializedTable[`g_ColorPickerPopup`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`g_ColorPickerPopup`].BorderSizePixel = 0;SerializedTable[`g_ColorPickerPopup`].Position = UDim2.new(0.3335937559604645,0,0.44986072182655334,0);SerializedTable[`g_ColorPickerPopup`].Size = UDim2.new(0.5,0,0.5,0);SerializedTable[`g_ColorPickerPopup`].Visible = false;
	SerializedTable[`52`].Name = `Window`;SerializedTable[`52`].Parent = SerializedTable[`g_ColorPickerPopup`];SerializedTable[`52`].AnchorPoint = Vector2.new(0.5,0.5);SerializedTable[`52`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`52`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`52`].Position = UDim2.new(0.5,0,0.5,0);SerializedTable[`52`].Size = UDim2.new(1,-10,1,-10);
	SerializedTable[`53`].Name = `Topbar`;SerializedTable[`53`].Parent = SerializedTable[`52`];SerializedTable[`53`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`53`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`53`].Size = UDim2.new(1,0,0,20);
	SerializedTable[`54`].Name = `label`;SerializedTable[`54`].Parent = SerializedTable[`53`];SerializedTable[`54`].AnchorPoint = Vector2.new(1,0);SerializedTable[`54`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`54`].BackgroundTransparency = 1;SerializedTable[`54`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`54`].BorderSizePixel = 0;SerializedTable[`54`].Interactable = false;SerializedTable[`54`].Position = UDim2.new(1,0,0,0);SerializedTable[`54`].Size = UDim2.new(1,-5,1,0);SerializedTable[`54`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`54`].FontSize = Enum.FontSize.Size14;SerializedTable[`54`].Text = `Color Picker`;SerializedTable[`54`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`54`].TextScaled = true;SerializedTable[`54`].TextSize = 14;SerializedTable[`54`].TextWrap = true;SerializedTable[`54`].TextWrapped = true;SerializedTable[`54`].TextXAlignment = Enum.TextXAlignment.Left;
	SerializedTable[`55`].Parent = SerializedTable[`53`];SerializedTable[`55`].AnchorPoint = Vector2.new(1,0.5);SerializedTable[`55`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`55`].BackgroundTransparency = 1;SerializedTable[`55`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`55`].BorderSizePixel = 0;SerializedTable[`55`].Position = UDim2.new(1,-2,0.5,0);SerializedTable[`55`].Size = UDim2.new(0,17,0,17);SerializedTable[`55`].Image = `rbxassetid://4661609682`;
	-- The type of Content was not supported. Sorry.

	SerializedTable[`56`].Name = `close`;SerializedTable[`56`].Parent = SerializedTable[`53`];SerializedTable[`56`].AnchorPoint = Vector2.new(1,0);SerializedTable[`56`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`56`].BackgroundTransparency = 0.9990000128746033;SerializedTable[`56`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`56`].BorderSizePixel = 0;SerializedTable[`56`].Position = UDim2.new(1,0,0,0);SerializedTable[`56`].Size = UDim2.new(0,20,0,20);SerializedTable[`56`].ZIndex = 5;SerializedTable[`56`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`56`].FontSize = Enum.FontSize.Size14;SerializedTable[`56`].Text = ``;SerializedTable[`56`].TextColor3 = Color3.fromRGB(0,0,0);SerializedTable[`56`].TextSize = 14;
	SerializedTable[`Frame`].Parent = SerializedTable[`52`];SerializedTable[`Frame`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`Frame`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`Frame`].BorderSizePixel = 0;SerializedTable[`Frame`].Position = UDim2.new(0.020880840718746185,0,0.12647786736488342,0);SerializedTable[`Frame`].Size = UDim2.new(0.3824290931224823,0,0.8246015310287476,0);
	SerializedTable[`UIAspectRatioConstraint`].Parent = SerializedTable[`Frame`];
	SerializedTable[`UIGradient`].Parent = SerializedTable[`Frame`];SerializedTable[`UIGradient`].Color = ColorSequence.new({ColorSequenceKeypoint.new(0,Color3.fromRGB(255,0,0)),ColorSequenceKeypoint.new(1,Color3.fromRGB(0,0,0))});SerializedTable[`UIGradient`].Rotation = 90;
	SerializedTable[`60`].Parent = SerializedTable[`52`];SerializedTable[`60`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`60`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`60`].BorderSizePixel = 3;SerializedTable[`60`].Position = UDim2.new(0.020880840718746185,0,0.12647786736488342,0);SerializedTable[`60`].Size = UDim2.new(0.3824290931224823,0,0.8246015310287476,0);SerializedTable[`60`].ZIndex = 0;
	SerializedTable[`61`].Parent = SerializedTable[`60`];
	SerializedTable[`62`].Parent = SerializedTable[`g_ColorPickerPopup`];SerializedTable[`62`].AspectRatio = 2.25;
	SerializedTable[`g_MainWindow`].Name = `g_MainWindow`;SerializedTable[`g_MainWindow`].Parent = SerializedTable[`g_ScreenUI`];SerializedTable[`g_MainWindow`].AnchorPoint = Vector2.new(0.5,0.5);SerializedTable[`g_MainWindow`].BackgroundColor3 = Color3.fromRGB(56.000000461936,56.000000461936,56.000000461936);SerializedTable[`g_MainWindow`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`g_MainWindow`].BorderSizePixel = 0;SerializedTable[`g_MainWindow`].Position = UDim2.new(0.5,0,0.5,2);SerializedTable[`g_MainWindow`].Size = UDim2.new(0.5,0,0.5,0);
	SerializedTable[`UIDragDetector`].Parent = SerializedTable[`g_MainWindow`];SerializedTable[`UIDragDetector`].DragUDim2 = UDim2.new(0,1,0,1);
	SerializedTable[`LowResWindow`].Name = `LowResWindow`;SerializedTable[`LowResWindow`].Parent = SerializedTable[`g_MainWindow`];SerializedTable[`LowResWindow`].AnchorPoint = Vector2.new(0.5,0.5);SerializedTable[`LowResWindow`].BackgroundColor3 = Color3.fromRGB(56.0000042617321,56.0000042617321,56.0000042617321);SerializedTable[`LowResWindow`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`LowResWindow`].Position = UDim2.new(0.5,0,0.5,0);SerializedTable[`LowResWindow`].Size = UDim2.new(0.5,0,0.5,0);SerializedTable[`LowResWindow`].Visible = false;
	SerializedTable[`S_RESIZE`].Name = `S_RESIZE`;SerializedTable[`S_RESIZE`].Parent = SerializedTable[`g_MainWindow`];SerializedTable[`S_RESIZE`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`S_RESIZE`].BackgroundTransparency = 1;SerializedTable[`S_RESIZE`].BorderColor3 = Color3.fromRGB(255,255,255);SerializedTable[`S_RESIZE`].BorderSizePixel = 0;SerializedTable[`S_RESIZE`].Size = UDim2.new(1,0,1,0);
	SerializedTable[`Right`].Name = `Right`;SerializedTable[`Right`].Parent = SerializedTable[`S_RESIZE`];SerializedTable[`Right`].AnchorPoint = Vector2.new(1,0);SerializedTable[`Right`].BackgroundColor3 = Color3.fromRGB(0,0,0);SerializedTable[`Right`].BackgroundTransparency = 1;SerializedTable[`Right`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`Right`].BorderSizePixel = 0;SerializedTable[`Right`].Position = UDim2.new(1,0,0,0);SerializedTable[`Right`].Size = UDim2.new(0,5,1,0);
	SerializedTable[`Left`].Name = `Left`;SerializedTable[`Left`].Parent = SerializedTable[`S_RESIZE`];SerializedTable[`Left`].BackgroundColor3 = Color3.fromRGB(0,0,0);SerializedTable[`Left`].BackgroundTransparency = 1;SerializedTable[`Left`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`Left`].BorderSizePixel = 0;SerializedTable[`Left`].Size = UDim2.new(0,5,1,0);
	SerializedTable[`Top`].Name = `Top`;SerializedTable[`Top`].Parent = SerializedTable[`S_RESIZE`];SerializedTable[`Top`].BackgroundColor3 = Color3.fromRGB(0,0,0);SerializedTable[`Top`].BackgroundTransparency = 1;SerializedTable[`Top`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`Top`].BorderSizePixel = 0;SerializedTable[`Top`].Size = UDim2.new(1,0,0,5);
	SerializedTable[`Bottom`].Name = `Bottom`;SerializedTable[`Bottom`].Parent = SerializedTable[`S_RESIZE`];SerializedTable[`Bottom`].AnchorPoint = Vector2.new(0,1);SerializedTable[`Bottom`].BackgroundColor3 = Color3.fromRGB(0,0,0);SerializedTable[`Bottom`].BackgroundTransparency = 1;SerializedTable[`Bottom`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`Bottom`].BorderSizePixel = 0;SerializedTable[`Bottom`].Position = UDim2.new(0,0,1,0);SerializedTable[`Bottom`].Size = UDim2.new(1,0,0,5);
	SerializedTable[`71`].Name = `Window`;SerializedTable[`71`].Parent = SerializedTable[`g_MainWindow`];SerializedTable[`71`].Active = true;SerializedTable[`71`].AnchorPoint = Vector2.new(0.5,0.5);SerializedTable[`71`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`71`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`71`].Position = UDim2.new(0.5,0,0.5,0);SerializedTable[`71`].Size = UDim2.new(1,-10,1,-10);
	SerializedTable[`72`].Name = `Topbar`;SerializedTable[`72`].Parent = SerializedTable[`71`];SerializedTable[`72`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`72`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`72`].Size = UDim2.new(1,0,0,20);
	SerializedTable[`g_TitleText`].Name = `g_TitleText`;SerializedTable[`g_TitleText`].Parent = SerializedTable[`72`];SerializedTable[`g_TitleText`].AnchorPoint = Vector2.new(1,0);SerializedTable[`g_TitleText`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`g_TitleText`].BackgroundTransparency = 1;SerializedTable[`g_TitleText`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`g_TitleText`].BorderSizePixel = 0;SerializedTable[`g_TitleText`].Interactable = false;SerializedTable[`g_TitleText`].Position = UDim2.new(1,0,0,0);SerializedTable[`g_TitleText`].Size = UDim2.new(1,-5,1,0);SerializedTable[`g_TitleText`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`g_TitleText`].FontSize = Enum.FontSize.Size14;SerializedTable[`g_TitleText`].Text = `Title Text`;SerializedTable[`g_TitleText`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`g_TitleText`].TextScaled = true;SerializedTable[`g_TitleText`].TextSize = 14;SerializedTable[`g_TitleText`].TextWrap = true;SerializedTable[`g_TitleText`].TextWrapped = true;SerializedTable[`g_TitleText`].TextXAlignment = Enum.TextXAlignment.Left;
	SerializedTable[`g_CloseWindow`].Name = `g_CloseWindow`;SerializedTable[`g_CloseWindow`].Parent = SerializedTable[`72`];SerializedTable[`g_CloseWindow`].AnchorPoint = Vector2.new(1,0);SerializedTable[`g_CloseWindow`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`g_CloseWindow`].BackgroundTransparency = 0.9990000128746033;SerializedTable[`g_CloseWindow`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`g_CloseWindow`].BorderSizePixel = 0;SerializedTable[`g_CloseWindow`].Position = UDim2.new(1,0,0,0);SerializedTable[`g_CloseWindow`].Size = UDim2.new(0,20,0,20);SerializedTable[`g_CloseWindow`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`g_CloseWindow`].FontSize = Enum.FontSize.Size14;SerializedTable[`g_CloseWindow`].Text = ``;SerializedTable[`g_CloseWindow`].TextColor3 = Color3.fromRGB(0,0,0);SerializedTable[`g_CloseWindow`].TextSize = 14;
	SerializedTable[`75`].Parent = SerializedTable[`g_CloseWindow`];SerializedTable[`75`].AnchorPoint = Vector2.new(0.5,0.5);SerializedTable[`75`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`75`].BackgroundTransparency = 1;SerializedTable[`75`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`75`].BorderSizePixel = 0;SerializedTable[`75`].Position = UDim2.new(0.5,0,0.5,0);SerializedTable[`75`].Size = UDim2.new(0,14,0,14);SerializedTable[`75`].Image = `rbxassetid://4661609682`;
	-- The type of Content was not supported. Sorry.

	SerializedTable[`g_HamburgerWindow`].Name = `g_HamburgerWindow`;SerializedTable[`g_HamburgerWindow`].Parent = SerializedTable[`72`];SerializedTable[`g_HamburgerWindow`].AnchorPoint = Vector2.new(1,0);SerializedTable[`g_HamburgerWindow`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`g_HamburgerWindow`].BackgroundTransparency = 0.9990000128746033;SerializedTable[`g_HamburgerWindow`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`g_HamburgerWindow`].BorderSizePixel = 0;SerializedTable[`g_HamburgerWindow`].Position = UDim2.new(1,-18,0,0);SerializedTable[`g_HamburgerWindow`].Size = UDim2.new(0,20,0,20);SerializedTable[`g_HamburgerWindow`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`g_HamburgerWindow`].FontSize = Enum.FontSize.Size14;SerializedTable[`g_HamburgerWindow`].Text = ``;SerializedTable[`g_HamburgerWindow`].TextColor3 = Color3.fromRGB(0,0,0);SerializedTable[`g_HamburgerWindow`].TextSize = 14;
	SerializedTable[`77`].Parent = SerializedTable[`g_HamburgerWindow`];SerializedTable[`77`].AnchorPoint = Vector2.new(0.5,0.5);SerializedTable[`77`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`77`].BackgroundTransparency = 1;SerializedTable[`77`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`77`].BorderSizePixel = 0;SerializedTable[`77`].Position = UDim2.new(0.5,0,0.47999998927116394,0);SerializedTable[`77`].Size = UDim2.new(0,15,0,15);SerializedTable[`77`].Image = `rbxassetid://18161819135`;
	-- The type of Content was not supported. Sorry.

	SerializedTable[`CommandPanel`].Name = `CommandPanel`;SerializedTable[`CommandPanel`].Parent = SerializedTable[`71`];SerializedTable[`CommandPanel`].AnchorPoint = Vector2.new(0,1);SerializedTable[`CommandPanel`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`CommandPanel`].BackgroundTransparency = 1;SerializedTable[`CommandPanel`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`CommandPanel`].BorderSizePixel = 0;SerializedTable[`CommandPanel`].Position = UDim2.new(0,0,1,0);SerializedTable[`CommandPanel`].Size = UDim2.new(1,0,1,-20);
	SerializedTable[`g_ExampleCommandHolder`].Name = `g_ExampleCommandHolder`;SerializedTable[`g_ExampleCommandHolder`].Parent = SerializedTable[`CommandPanel`];SerializedTable[`g_ExampleCommandHolder`].Active = true;SerializedTable[`g_ExampleCommandHolder`].AnchorPoint = Vector2.new(1,0);SerializedTable[`g_ExampleCommandHolder`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`g_ExampleCommandHolder`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`g_ExampleCommandHolder`].Position = UDim2.new(1,-5,0,7);SerializedTable[`g_ExampleCommandHolder`].Size = UDim2.new(1,-170,1,-13);SerializedTable[`g_ExampleCommandHolder`].AutomaticCanvasSize = Enum.AutomaticSize.Y;SerializedTable[`g_ExampleCommandHolder`].CanvasSize = UDim2.new(0,0,0,0);SerializedTable[`g_ExampleCommandHolder`].ScrollBarImageColor3 = Color3.fromRGB(0,0,0);SerializedTable[`g_ExampleCommandHolder`].ScrollBarThickness = 0;
	SerializedTable[`holder`].Name = `holder`;SerializedTable[`holder`].Parent = SerializedTable[`g_ExampleCommandHolder`];SerializedTable[`holder`].Active = true;SerializedTable[`holder`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`holder`].BackgroundTransparency = 1;SerializedTable[`holder`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`holder`].BorderSizePixel = 0;SerializedTable[`holder`].Size = UDim2.new(1,0,1,0);SerializedTable[`holder`].AutomaticCanvasSize = Enum.AutomaticSize.Y;SerializedTable[`holder`].CanvasSize = UDim2.new(0,0,0,0);SerializedTable[`holder`].ScrollBarImageColor3 = Color3.fromRGB(0,0,0);SerializedTable[`holder`].ScrollBarThickness = 0;
	SerializedTable[`81`].Parent = SerializedTable[`holder`];SerializedTable[`81`].HorizontalAlignment = Enum.HorizontalAlignment.Center;SerializedTable[`81`].SortOrder = Enum.SortOrder.LayoutOrder;SerializedTable[`81`].Padding = UDim.new(0,5);
	SerializedTable[`82`].Parent = SerializedTable[`holder`];SerializedTable[`82`].PaddingBottom = UDim.new(0,5);SerializedTable[`82`].PaddingLeft = UDim.new(0,5);SerializedTable[`82`].PaddingRight = UDim.new(0,5);SerializedTable[`82`].PaddingTop = UDim.new(0,5);
	SerializedTable[`g_ExampleSubCommandCategory`].Name = `g_ExampleSubCommandCategory`;SerializedTable[`g_ExampleSubCommandCategory`].Parent = SerializedTable[`holder`];SerializedTable[`g_ExampleSubCommandCategory`].AutomaticSize = Enum.AutomaticSize.Y;SerializedTable[`g_ExampleSubCommandCategory`].BackgroundColor3 = Color3.fromRGB(56.0000042617321,56.0000042617321,56.0000042617321);SerializedTable[`g_ExampleSubCommandCategory`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`g_ExampleSubCommandCategory`].Size = UDim2.new(1,0,0,20);SerializedTable[`g_ExampleSubCommandCategory`].Visible = false;
	SerializedTable[`84`].Name = `label`;SerializedTable[`84`].Parent = SerializedTable[`g_ExampleSubCommandCategory`];SerializedTable[`84`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`84`].BackgroundTransparency = 1;SerializedTable[`84`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`84`].BorderSizePixel = 0;SerializedTable[`84`].Size = UDim2.new(1,0,0,20);SerializedTable[`84`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`84`].FontSize = Enum.FontSize.Size14;SerializedTable[`84`].Text = `Example Subcategory Label`;SerializedTable[`84`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`84`].TextScaled = true;SerializedTable[`84`].TextSize = 14;SerializedTable[`84`].TextWrap = true;SerializedTable[`84`].TextWrapped = true;SerializedTable[`84`].TextXAlignment = Enum.TextXAlignment.Left;
	SerializedTable[`85`].Parent = SerializedTable[`84`];SerializedTable[`85`].PaddingLeft = UDim.new(0,5);
	SerializedTable[`dropd`].Name = `dropd`;SerializedTable[`dropd`].Parent = SerializedTable[`g_ExampleSubCommandCategory`];SerializedTable[`dropd`].AnchorPoint = Vector2.new(1,0);SerializedTable[`dropd`].BackgroundColor3 = Color3.fromRGB(56.000000461936,56.000000461936,56.000000461936);SerializedTable[`dropd`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`dropd`].BorderSizePixel = 0;SerializedTable[`dropd`].Position = UDim2.new(1,0,0,0);SerializedTable[`dropd`].Rotation = 90;SerializedTable[`dropd`].Size = UDim2.new(0,20,0,20);SerializedTable[`dropd`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`dropd`].FontSize = Enum.FontSize.Size24;SerializedTable[`dropd`].Text = `>`;SerializedTable[`dropd`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`dropd`].TextSize = 20;
	SerializedTable[`87`].Parent = SerializedTable[`dropd`];
	SerializedTable[`88`].Name = `holder`;SerializedTable[`88`].Parent = SerializedTable[`g_ExampleSubCommandCategory`];SerializedTable[`88`].AutomaticSize = Enum.AutomaticSize.Y;SerializedTable[`88`].BackgroundColor3 = Color3.fromRGB(56.0000042617321,56.0000042617321,56.0000042617321);SerializedTable[`88`].BackgroundTransparency = 1;SerializedTable[`88`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`88`].Size = UDim2.new(1,0,0,0);SerializedTable[`88`].ZIndex = 0;
	SerializedTable[`89`].Parent = SerializedTable[`88`];SerializedTable[`89`].HorizontalAlignment = Enum.HorizontalAlignment.Center;SerializedTable[`89`].SortOrder = Enum.SortOrder.LayoutOrder;SerializedTable[`89`].Padding = UDim.new(0,5);
	SerializedTable[`90`].Parent = SerializedTable[`88`];SerializedTable[`90`].PaddingBottom = UDim.new(0,5);SerializedTable[`90`].PaddingLeft = UDim.new(0,5);SerializedTable[`90`].PaddingRight = UDim.new(0,5);SerializedTable[`90`].PaddingTop = UDim.new(0,25);
	SerializedTable[`g_ExampleCommandRow`].Name = `g_ExampleCommandRow`;SerializedTable[`g_ExampleCommandRow`].Parent = SerializedTable[`holder`];SerializedTable[`g_ExampleCommandRow`].AutomaticSize = Enum.AutomaticSize.XY;SerializedTable[`g_ExampleCommandRow`].BackgroundColor3 = Color3.fromRGB(56.000000461936,56.000000461936,56.000000461936);SerializedTable[`g_ExampleCommandRow`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`g_ExampleCommandRow`].ClipsDescendants = true;SerializedTable[`g_ExampleCommandRow`].Size = UDim2.new(1,0,0,25);
	SerializedTable[`button`].Name = `button`;SerializedTable[`button`].Parent = SerializedTable[`g_ExampleCommandRow`];SerializedTable[`button`].BackgroundColor3 = Color3.fromRGB(56.000000461936,56.000000461936,56.000000461936);SerializedTable[`button`].BackgroundTransparency = 0.9990000128746033;SerializedTable[`button`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`button`].BorderSizePixel = 0;SerializedTable[`button`].Size = UDim2.new(1,0,1,0);SerializedTable[`button`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`button`].FontSize = Enum.FontSize.Size24;SerializedTable[`button`].Text = ``;SerializedTable[`button`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`button`].TextSize = 21;SerializedTable[`button`].TextTruncate = Enum.TextTruncate.SplitWord;SerializedTable[`button`].TextWrap = true;SerializedTable[`button`].TextWrapped = true;SerializedTable[`button`].TextXAlignment = Enum.TextXAlignment.Left;
	SerializedTable[`e.Hover`].Name = `e.Hover`;SerializedTable[`e.Hover`].Parent = SerializedTable[`button`];SerializedTable[`e.Hover`].Value = SerializedTable[`g_ExampleCommandRow`];
	SerializedTable[`e.Action`].Name = `e.Action`;SerializedTable[`e.Action`].Parent = SerializedTable[`button`];SerializedTable[`e.Action`].Value = SerializedTable[`edittext`];
	SerializedTable[`95`].Name = `e.Action`;SerializedTable[`95`].Parent = SerializedTable[`button`];SerializedTable[`95`].Value = SerializedTable[`switch`];
	SerializedTable[`96`].Name = `e.Action`;SerializedTable[`96`].Parent = SerializedTable[`button`];SerializedTable[`96`].Value = SerializedTable[`slide`];
	SerializedTable[`stylelist`].Name = `stylelist`;SerializedTable[`stylelist`].Parent = SerializedTable[`g_ExampleCommandRow`];SerializedTable[`stylelist`].AutomaticSize = Enum.AutomaticSize.XY;SerializedTable[`stylelist`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`stylelist`].BackgroundTransparency = 1;SerializedTable[`stylelist`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`stylelist`].BorderSizePixel = 0;SerializedTable[`stylelist`].Size = UDim2.new(1,0,0,25);SerializedTable[`stylelist`].ZIndex = 2;
	SerializedTable[`boolean`].Name = `boolean`;SerializedTable[`boolean`].Parent = SerializedTable[`stylelist`];SerializedTable[`boolean`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`boolean`].BackgroundTransparency = 1;SerializedTable[`boolean`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`boolean`].BorderSizePixel = 0;SerializedTable[`boolean`].Size = UDim2.new(1,0,0,25);SerializedTable[`boolean`].Visible = false;
	SerializedTable[`switch`].Name = `switch`;SerializedTable[`switch`].Parent = SerializedTable[`boolean`];SerializedTable[`switch`].AnchorPoint = Vector2.new(1,0.5);SerializedTable[`switch`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`switch`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`switch`].ClipsDescendants = true;SerializedTable[`switch`].Position = UDim2.new(1,0,0.5,0);SerializedTable[`switch`].Size = UDim2.new(0,50,1,0);
	SerializedTable[`true`].Name = `true`;SerializedTable[`true`].Parent = SerializedTable[`switch`];SerializedTable[`true`].BackgroundColor3 = Color3.fromRGB(0,255,0);SerializedTable[`true`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`true`].Size = UDim2.new(0,25,0,19);SerializedTable[`true`].Image = `rbxasset://textures/ui/GuiImagePlaceholder.png`;
	-- The type of Content was not supported. Sorry.
	SerializedTable[`true`].ImageTransparency = 1;
	SerializedTable[`TextLabel`].Parent = SerializedTable[`true`];SerializedTable[`TextLabel`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`TextLabel`].BackgroundTransparency = 1;SerializedTable[`TextLabel`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`TextLabel`].BorderSizePixel = 0;SerializedTable[`TextLabel`].Size = UDim2.new(1,0,1,0);SerializedTable[`TextLabel`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Bold,Enum.FontStyle.Normal,true);SerializedTable[`TextLabel`].FontSize = Enum.FontSize.Size14;SerializedTable[`TextLabel`].Text = `T`;SerializedTable[`TextLabel`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`TextLabel`].TextScaled = true;SerializedTable[`TextLabel`].TextSize = 14;SerializedTable[`TextLabel`].TextStrokeTransparency = 0;SerializedTable[`TextLabel`].TextWrap = true;SerializedTable[`TextLabel`].TextWrapped = true;
	SerializedTable[`false`].Name = `false`;SerializedTable[`false`].Parent = SerializedTable[`switch`];SerializedTable[`false`].AnchorPoint = Vector2.new(1,0);SerializedTable[`false`].BackgroundColor3 = Color3.fromRGB(255,0,0);SerializedTable[`false`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`false`].Position = UDim2.new(1,0,0,0);SerializedTable[`false`].Size = UDim2.new(0,25,0,19);SerializedTable[`false`].Image = `rbxasset://textures/ui/GuiImagePlaceholder.png`;
	-- The type of Content was not supported. Sorry.
	SerializedTable[`false`].ImageTransparency = 1;
	SerializedTable[`103`].Parent = SerializedTable[`false`];SerializedTable[`103`].BackgroundColor3 = Color3.fromRGB(255,0,0);SerializedTable[`103`].BackgroundTransparency = 1;SerializedTable[`103`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`103`].BorderSizePixel = 0;SerializedTable[`103`].Size = UDim2.new(1,0,1,0);SerializedTable[`103`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Bold,Enum.FontStyle.Normal,true);SerializedTable[`103`].FontSize = Enum.FontSize.Size14;SerializedTable[`103`].Text = `F`;SerializedTable[`103`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`103`].TextScaled = true;SerializedTable[`103`].TextSize = 14;SerializedTable[`103`].TextStrokeTransparency = 0;SerializedTable[`103`].TextWrap = true;SerializedTable[`103`].TextWrapped = true;
	SerializedTable[`104`].Parent = SerializedTable[`boolean`];SerializedTable[`104`].PaddingBottom = UDim.new(0,2);SerializedTable[`104`].PaddingLeft = UDim.new(0,3);SerializedTable[`104`].PaddingRight = UDim.new(0,3);SerializedTable[`104`].PaddingTop = UDim.new(0,3);
	SerializedTable[`105`].Name = `label`;SerializedTable[`105`].Parent = SerializedTable[`boolean`];SerializedTable[`105`].BackgroundColor3 = Color3.fromRGB(56.000000461936,56.000000461936,56.000000461936);SerializedTable[`105`].BackgroundTransparency = 0.9990000128746033;SerializedTable[`105`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`105`].BorderSizePixel = 0;SerializedTable[`105`].Interactable = false;SerializedTable[`105`].Size = UDim2.new(1,0,0,21);SerializedTable[`105`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`105`].FontSize = Enum.FontSize.Size24;SerializedTable[`105`].Text = `Boolean Example Text`;SerializedTable[`105`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`105`].TextSize = 21;SerializedTable[`105`].TextTruncate = Enum.TextTruncate.SplitWord;SerializedTable[`105`].TextWrap = true;SerializedTable[`105`].TextWrapped = true;SerializedTable[`105`].TextXAlignment = Enum.TextXAlignment.Left;
	SerializedTable[`string`].Name = `string`;SerializedTable[`string`].Parent = SerializedTable[`stylelist`];SerializedTable[`string`].AutomaticSize = Enum.AutomaticSize.Y;SerializedTable[`string`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`string`].BackgroundTransparency = 1;SerializedTable[`string`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`string`].BorderSizePixel = 0;SerializedTable[`string`].Size = UDim2.new(1,0,0,25);
	SerializedTable[`textbox`].Name = `textbox`;SerializedTable[`textbox`].Parent = SerializedTable[`string`];SerializedTable[`textbox`].AnchorPoint = Vector2.new(1,0);SerializedTable[`textbox`].AutomaticSize = Enum.AutomaticSize.Y;SerializedTable[`textbox`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`textbox`].BackgroundTransparency = 1;SerializedTable[`textbox`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`textbox`].ClipsDescendants = true;SerializedTable[`textbox`].Position = UDim2.new(1,0,0,0);SerializedTable[`textbox`].Size = UDim2.new(0,200,0,0);
	SerializedTable[`edittext`].Name = `edittext`;SerializedTable[`edittext`].Parent = SerializedTable[`textbox`];SerializedTable[`edittext`].AnchorPoint = Vector2.new(1,0);SerializedTable[`edittext`].AutomaticSize = Enum.AutomaticSize.XY;SerializedTable[`edittext`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`edittext`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`edittext`].Position = UDim2.new(1,0,0,0);SerializedTable[`edittext`].Size = UDim2.new(0,5,0,0);SerializedTable[`edittext`].CursorPosition = -1;SerializedTable[`edittext`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`edittext`].FontSize = Enum.FontSize.Size24;SerializedTable[`edittext`].PlaceholderText = `String Input`;SerializedTable[`edittext`].Text = ``;SerializedTable[`edittext`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`edittext`].TextSize = 19;SerializedTable[`edittext`].TextWrap = true;SerializedTable[`edittext`].TextWrapped = true;SerializedTable[`edittext`].TextXAlignment = Enum.TextXAlignment.Right;
	SerializedTable[`109`].Parent = SerializedTable[`edittext`];SerializedTable[`109`].MinSize = Vector2.new(75,0);
	SerializedTable[`110`].Parent = SerializedTable[`edittext`];SerializedTable[`110`].PaddingLeft = UDim.new(0,5);SerializedTable[`110`].PaddingRight = UDim.new(0,5);
	SerializedTable[`111`].Parent = SerializedTable[`textbox`];SerializedTable[`111`].PaddingBottom = UDim.new(0,3);SerializedTable[`111`].PaddingLeft = UDim.new(0,3);SerializedTable[`111`].PaddingRight = UDim.new(0,3);SerializedTable[`111`].PaddingTop = UDim.new(0,3);
	SerializedTable[`112`].Name = `label`;SerializedTable[`112`].Parent = SerializedTable[`string`];SerializedTable[`112`].BackgroundColor3 = Color3.fromRGB(56.000000461936,56.000000461936,56.000000461936);SerializedTable[`112`].BackgroundTransparency = 0.9990000128746033;SerializedTable[`112`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`112`].BorderSizePixel = 0;SerializedTable[`112`].Interactable = false;SerializedTable[`112`].Size = UDim2.new(1,0,0,25);SerializedTable[`112`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`112`].FontSize = Enum.FontSize.Size24;SerializedTable[`112`].Text = `String Example Text`;SerializedTable[`112`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`112`].TextSize = 21;SerializedTable[`112`].TextTruncate = Enum.TextTruncate.SplitWord;SerializedTable[`112`].TextWrap = true;SerializedTable[`112`].TextWrapped = true;SerializedTable[`112`].TextXAlignment = Enum.TextXAlignment.Left;
	SerializedTable[`113`].Parent = SerializedTable[`112`];SerializedTable[`113`].PaddingBottom = UDim.new(0,4);SerializedTable[`113`].PaddingLeft = UDim.new(0,3);SerializedTable[`113`].PaddingRight = UDim.new(0,3);SerializedTable[`113`].PaddingTop = UDim.new(0,3);
	SerializedTable[`114`].Name = `button`;SerializedTable[`114`].Parent = SerializedTable[`stylelist`];SerializedTable[`114`].AutomaticSize = Enum.AutomaticSize.Y;SerializedTable[`114`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`114`].BackgroundTransparency = 1;SerializedTable[`114`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`114`].BorderSizePixel = 0;SerializedTable[`114`].Size = UDim2.new(1,0,0,25);SerializedTable[`114`].Visible = false;
	SerializedTable[`115`].Name = `label`;SerializedTable[`115`].Parent = SerializedTable[`114`];SerializedTable[`115`].BackgroundColor3 = Color3.fromRGB(56.000000461936,56.000000461936,56.000000461936);SerializedTable[`115`].BackgroundTransparency = 1;SerializedTable[`115`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`115`].BorderSizePixel = 0;SerializedTable[`115`].Interactable = false;SerializedTable[`115`].Size = UDim2.new(1,0,1,0);SerializedTable[`115`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`115`].FontSize = Enum.FontSize.Size24;SerializedTable[`115`].Text = `Button Example Text`;SerializedTable[`115`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`115`].TextSize = 21;SerializedTable[`115`].TextTruncate = Enum.TextTruncate.SplitWord;SerializedTable[`115`].TextWrap = true;SerializedTable[`115`].TextWrapped = true;
	SerializedTable[`slider`].Name = `slider`;SerializedTable[`slider`].Parent = SerializedTable[`stylelist`];SerializedTable[`slider`].BackgroundColor3 = Color3.fromRGB(5.000000176951289,5.000000176951289,5.000000176951289);SerializedTable[`slider`].BackgroundTransparency = 1;SerializedTable[`slider`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`slider`].BorderSizePixel = 0;SerializedTable[`slider`].Size = UDim2.new(1,0,0,25);SerializedTable[`slider`].Visible = false;
	SerializedTable[`117`].Name = `label`;SerializedTable[`117`].Parent = SerializedTable[`slider`];SerializedTable[`117`].BackgroundColor3 = Color3.fromRGB(56.000000461936,56.000000461936,56.000000461936);SerializedTable[`117`].BackgroundTransparency = 0.9990000128746033;SerializedTable[`117`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`117`].BorderSizePixel = 0;SerializedTable[`117`].Interactable = false;SerializedTable[`117`].Size = UDim2.new(1,0,0,21);SerializedTable[`117`].ZIndex = 3;SerializedTable[`117`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`117`].FontSize = Enum.FontSize.Size24;SerializedTable[`117`].Text = `Slider Example Text`;SerializedTable[`117`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`117`].TextSize = 21;SerializedTable[`117`].TextStrokeTransparency = 0;SerializedTable[`117`].TextTruncate = Enum.TextTruncate.SplitWord;SerializedTable[`117`].TextWrap = true;SerializedTable[`117`].TextWrapped = true;
	SerializedTable[`slide`].Name = `slide`;SerializedTable[`slide`].Parent = SerializedTable[`slider`];SerializedTable[`slide`].BackgroundColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`slide`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`slide`].ClipsDescendants = true;SerializedTable[`slide`].Size = UDim2.new(1,0,1,0);
	SerializedTable[`119`].Name = `switch`;SerializedTable[`119`].Parent = SerializedTable[`slide`];SerializedTable[`119`].AnchorPoint = Vector2.new(0.5,0);SerializedTable[`119`].BackgroundColor3 = Color3.fromRGB(75.00000312924385,75.00000312924385,75.00000312924385);SerializedTable[`119`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`119`].ClipsDescendants = true;SerializedTable[`119`].Size = UDim2.new(0,25,1,0);
	SerializedTable[`120`].Parent = SerializedTable[`119`];SerializedTable[`120`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`120`].BackgroundTransparency = 1;SerializedTable[`120`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`120`].BorderSizePixel = 0;SerializedTable[`120`].Size = UDim2.new(0,25,1,0);SerializedTable[`120`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Bold,Enum.FontStyle.Normal,true);SerializedTable[`120`].FontSize = Enum.FontSize.Size14;SerializedTable[`120`].Text = `S`;SerializedTable[`120`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`120`].TextScaled = true;SerializedTable[`120`].TextSize = 14;SerializedTable[`120`].TextStrokeTransparency = 0;SerializedTable[`120`].TextWrap = true;SerializedTable[`120`].TextWrapped = true;
	SerializedTable[`end`].Name = `end`;SerializedTable[`end`].Parent = SerializedTable[`slide`];SerializedTable[`end`].Active = true;SerializedTable[`end`].BackgroundColor3 = Color3.fromRGB(75.00000312924385,75.00000312924385,75.00000312924385);SerializedTable[`end`].BackgroundTransparency = 1;SerializedTable[`end`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`end`].ClipsDescendants = true;SerializedTable[`end`].Position = UDim2.new(1,0,0,0);SerializedTable[`end`].Size = UDim2.new(0,25,1,0);SerializedTable[`end`].Visible = false;
	SerializedTable[`122`].Parent = SerializedTable[`slide`];SerializedTable[`122`].PaddingLeft = UDim.new(0,12);SerializedTable[`122`].PaddingRight = UDim.new(0,12);
	SerializedTable[`123`].Parent = SerializedTable[`slider`];SerializedTable[`123`].PaddingBottom = UDim.new(0,2);SerializedTable[`123`].PaddingLeft = UDim.new(0,3);SerializedTable[`123`].PaddingRight = UDim.new(0,3);SerializedTable[`123`].PaddingTop = UDim.new(0,3);
	SerializedTable[`SearchBar`].Name = `SearchBar`;SerializedTable[`SearchBar`].Parent = SerializedTable[`holder`];SerializedTable[`SearchBar`].AutomaticSize = Enum.AutomaticSize.XY;SerializedTable[`SearchBar`].BackgroundColor3 = Color3.fromRGB(56.000000461936,56.000000461936,56.000000461936);SerializedTable[`SearchBar`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`SearchBar`].ClipsDescendants = true;SerializedTable[`SearchBar`].LayoutOrder = -999999999;SerializedTable[`SearchBar`].Size = UDim2.new(1,0,0,20);SerializedTable[`SearchBar`].Visible = false;
	SerializedTable[`125`].Parent = SerializedTable[`SearchBar`];SerializedTable[`125`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`125`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`125`].BorderSizePixel = 0;SerializedTable[`125`].Size = UDim2.new(1,0,1,0);SerializedTable[`125`].CursorPosition = -1;SerializedTable[`125`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`125`].FontSize = Enum.FontSize.Size18;SerializedTable[`125`].PlaceholderText = `Filter Search`;SerializedTable[`125`].Text = ``;SerializedTable[`125`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`125`].TextSize = 15;SerializedTable[`125`].TextXAlignment = Enum.TextXAlignment.Left;
	SerializedTable[`126`].Parent = SerializedTable[`125`];SerializedTable[`126`].PaddingLeft = UDim.new(0,5);SerializedTable[`126`].PaddingRight = UDim.new(0,5);
	SerializedTable[`g_ConfigButtonHolder`].Name = `g_ConfigButtonHolder`;SerializedTable[`g_ConfigButtonHolder`].Parent = SerializedTable[`CommandPanel`];SerializedTable[`g_ConfigButtonHolder`].Active = true;SerializedTable[`g_ConfigButtonHolder`].AnchorPoint = Vector2.new(0,1);SerializedTable[`g_ConfigButtonHolder`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`g_ConfigButtonHolder`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`g_ConfigButtonHolder`].Position = UDim2.new(0,5,1,-6);SerializedTable[`g_ConfigButtonHolder`].Size = UDim2.new(0,153,0,30);SerializedTable[`g_ConfigButtonHolder`].Visible = false;SerializedTable[`g_ConfigButtonHolder`].AutomaticCanvasSize = Enum.AutomaticSize.X;SerializedTable[`g_ConfigButtonHolder`].CanvasSize = UDim2.new(0,0,0,0);SerializedTable[`g_ConfigButtonHolder`].ScrollBarImageColor3 = Color3.fromRGB(0,0,0);SerializedTable[`g_ConfigButtonHolder`].ScrollBarThickness = 0;
	SerializedTable[`g_ExampleConfigButtonRow`].Name = `g_ExampleConfigButtonRow`;SerializedTable[`g_ExampleConfigButtonRow`].Parent = SerializedTable[`g_ConfigButtonHolder`];SerializedTable[`g_ExampleConfigButtonRow`].AutomaticSize = Enum.AutomaticSize.Y;SerializedTable[`g_ExampleConfigButtonRow`].BackgroundColor3 = Color3.fromRGB(56.000000461936,56.000000461936,56.000000461936);SerializedTable[`g_ExampleConfigButtonRow`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`g_ExampleConfigButtonRow`].ClipsDescendants = true;SerializedTable[`g_ExampleConfigButtonRow`].Size = UDim2.new(0,24,0,24);
	SerializedTable[`ico`].Name = `ico`;SerializedTable[`ico`].Parent = SerializedTable[`g_ExampleConfigButtonRow`];SerializedTable[`ico`].AnchorPoint = Vector2.new(0.5,0.5);SerializedTable[`ico`].BackgroundColor3 = Color3.fromRGB(56.000000461936,56.000000461936,56.000000461936);SerializedTable[`ico`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`ico`].BorderSizePixel = 0;SerializedTable[`ico`].Position = UDim2.new(0.5,0,0.5,0);SerializedTable[`ico`].Size = UDim2.new(0,20,0,20);SerializedTable[`ico`].Image = `rbxassetid://9405931578`;
	-- The type of Content was not supported. Sorry.

	SerializedTable[`130`].Parent = SerializedTable[`g_ConfigButtonHolder`];SerializedTable[`130`].FillDirection = Enum.FillDirection.Horizontal;SerializedTable[`130`].SortOrder = Enum.SortOrder.LayoutOrder;SerializedTable[`130`].VerticalAlignment = Enum.VerticalAlignment.Center;SerializedTable[`130`].Padding = UDim.new(0,4);
	SerializedTable[`131`].Parent = SerializedTable[`g_ConfigButtonHolder`];SerializedTable[`131`].PaddingLeft = UDim.new(0,3);
	SerializedTable[`132`].Parent = SerializedTable[`CommandPanel`];SerializedTable[`132`].BackgroundColor3 = Color3.fromRGB(255,255,255);SerializedTable[`132`].BackgroundTransparency = 1;SerializedTable[`132`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`132`].BorderSizePixel = 0;SerializedTable[`132`].Position = UDim2.new(0,5,0,7);SerializedTable[`132`].Size = UDim2.new(0,153,1,-13);
	SerializedTable[`g_SidebarHolder`].Name = `g_SidebarHolder`;SerializedTable[`g_SidebarHolder`].Parent = SerializedTable[`132`];SerializedTable[`g_SidebarHolder`].Active = true;SerializedTable[`g_SidebarHolder`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`g_SidebarHolder`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`g_SidebarHolder`].Size = UDim2.new(1,0,1,0);SerializedTable[`g_SidebarHolder`].AutomaticCanvasSize = Enum.AutomaticSize.Y;SerializedTable[`g_SidebarHolder`].CanvasSize = UDim2.new(0,0,0,0);SerializedTable[`g_SidebarHolder`].ScrollBarImageColor3 = Color3.fromRGB(0,0,0);SerializedTable[`g_SidebarHolder`].ScrollBarThickness = 0;
	SerializedTable[`g_ExampleSidebarRow`].Name = `g_ExampleSidebarRow`;SerializedTable[`g_ExampleSidebarRow`].Parent = SerializedTable[`g_SidebarHolder`];SerializedTable[`g_ExampleSidebarRow`].AutomaticSize = Enum.AutomaticSize.Y;SerializedTable[`g_ExampleSidebarRow`].BackgroundColor3 = Color3.fromRGB(46.000001057982445,46.000001057982445,46.000001057982445);SerializedTable[`g_ExampleSidebarRow`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`g_ExampleSidebarRow`].ClipsDescendants = true;SerializedTable[`g_ExampleSidebarRow`].Size = UDim2.new(1,0,0,25);
	SerializedTable[`135`].Name = `button`;SerializedTable[`135`].Parent = SerializedTable[`g_ExampleSidebarRow`];SerializedTable[`135`].AutomaticSize = Enum.AutomaticSize.Y;SerializedTable[`135`].BackgroundColor3 = Color3.fromRGB(56.000000461936,56.000000461936,56.000000461936);SerializedTable[`135`].BorderColor3 = Color3.fromRGB(0,0,0);SerializedTable[`135`].BorderSizePixel = 0;SerializedTable[`135`].Size = UDim2.new(1,0,1,0);SerializedTable[`135`].AutoButtonColor = false;SerializedTable[`135`].FontFace = Font.new(`rbxasset://fonts/families/SourceSansPro.json`,Enum.FontWeight.Regular,Enum.FontStyle.Normal,false);SerializedTable[`135`].FontSize = Enum.FontSize.Size24;SerializedTable[`135`].Text = `Button Text Example`;SerializedTable[`135`].TextColor3 = Color3.fromRGB(255,255,255);SerializedTable[`135`].TextSize = 21;SerializedTable[`135`].TextTruncate = Enum.TextTruncate.SplitWord;SerializedTable[`135`].TextXAlignment = Enum.TextXAlignment.Left;
	SerializedTable[`136`].Parent = SerializedTable[`135`];SerializedTable[`136`].PaddingBottom = UDim.new(0,3);SerializedTable[`136`].PaddingLeft = UDim.new(0,3);SerializedTable[`136`].PaddingRight = UDim.new(0,3);SerializedTable[`136`].PaddingTop = UDim.new(0,3);
	SerializedTable[`137`].Name = `e.Hover`;SerializedTable[`137`].Parent = SerializedTable[`135`];SerializedTable[`137`].Value = SerializedTable[`135`];
	SerializedTable[`138`].Parent = SerializedTable[`g_SidebarHolder`];SerializedTable[`138`].PaddingBottom = UDim.new(0,5);SerializedTable[`138`].PaddingLeft = UDim.new(0,5);SerializedTable[`138`].PaddingRight = UDim.new(0,5);SerializedTable[`138`].PaddingTop = UDim.new(0,5);
	SerializedTable[`139`].Parent = SerializedTable[`g_SidebarHolder`];SerializedTable[`139`].HorizontalAlignment = Enum.HorizontalAlignment.Center;SerializedTable[`139`].SortOrder = Enum.SortOrder.LayoutOrder;SerializedTable[`139`].Padding = UDim.new(0,5);
	SerializedTable[`bg`].Name = `bg`;SerializedTable[`bg`].Parent = SerializedTable[`g_MainWindow`];SerializedTable[`bg`].AnchorPoint = Vector2.new(0.5,0.5);SerializedTable[`bg`].BackgroundColor3 = Color3.fromRGB(56.0000042617321,56.0000042617321,56.0000042617321);SerializedTable[`bg`].BorderColor3 = Color3.fromRGB(34.00000177323818,34.00000177323818,34.00000177323818);SerializedTable[`bg`].Position = UDim2.new(0.5,0,0.5,0);SerializedTable[`bg`].Size = UDim2.new(1,-2,1,-2);SerializedTable[`bg`].ZIndex = -999999999;
end
InsertSerial()

local Converted = SerializedTable

function RSCore.AddDocumentationFunction(Name:string, Description:string, Returns:string)
	local c = Converted.g_ExampleDocumentationRow:Clone()
	c.fname.Text = Name
	c.fdescrip.Text = Description
	c.rtng.Text = Returns
	c.Visible = true
	c.Parent = Converted.g_DocumentationHolder
end

function RSCore.Draggable(Frame:Frame)
	-- Can't just be as easy as adding a dragdetector. This is for accessibility, atleast it's simple to do.
	-- and then it still doesn't work.. my god dude

	-- okay I don't care abt it not working in the esc menu anymore but I added some more checks so ya can't drag 2 things at once
	table.insert(TableDragQueue, Frame)
	table.insert(TableRBXConnections, UserInputService.InputBegan:Connect(function(k)
		if k.UserInputType==Enum.UserInputType.MouseButton1 then
			local CanPass = false
			local Latest = nil
			local stop = false
			local fb = false
			for _,v in CoreGui:GetGuiObjectsAtPosition(Mouse.X, Mouse.Y) do
				if v:IsDescendantOf(Converted.g_ScreenUI) and v.Visible==true and not stop then

					if v:IsA("TextButton") or v.Parent.Name=="S_RESIZE" then
						stop = true
					end
					if v~=Frame and not v:IsDescendantOf(Frame) then
						if not Latest and table.find(TableDragQueue, v) then
							stop = true
							CanPass = false
						end
					end

					if v==Frame then
						CanPass = true
						Latest = v
					end
				end
			end

			if CanPass then
				task.spawn(function()
					local origin = Vector2.new(Mouse.X, Mouse.Y)
					repeat
						local current = Vector2.new(Mouse.X, Mouse.Y)
						local delta = origin-current
						Frame.Position-= UDim2.fromOffset(delta.X, delta.Y)
						origin = current
						task.wait()
					until not UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1)
				end)
			end
		end
	end))

	--[[Frame.InputBegan:Connect(function(k)
		if k.UserInputType==Enum.UserInputType.MouseButton1 then
			task.spawn(function()
				local origin = Vector2.new(Mouse.X, Mouse.Y)
				repeat
					local current = Vector2.new(Mouse.X, Mouse.Y)
					local delta = origin-current
					Frame.Position-= UDim2.fromOffset(delta.X, delta.Y)
					origin = current
					task.wait()
				until not UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1)
			end)
		end
	end)]]

end

function RSCore.PromptString(context:string?)
	pcall(function()
		local tb = Converted.g_TextboxPopup:Clone()
		local tx:TextBox = tb.Window.TextBox
		tx.Text = ""
		tx.TextSize = 20
		tx.PlaceholderText = "String Input"
		tb.Visible = true
		if context then
			tb.context.Text = context
		end
		tb.Parent = Converted.g_ScreenUI
		tx:CaptureFocus()

		local toReturn = nil
		tx.FocusLost:Connect(function()
			tb:Destroy()
			toReturn = tx.Text
		end)
		repeat
			task.wait()
		until toReturn
		return toReturn
	end)
end

function RSCore.DisplayText(context:string?)
	pcall(function()
		local tb = Converted.g_TextboxPopup:Clone()
		local tx:TextBox = tb.Window.TextBox
		local ct:TextLabel = tb.context
		tx.Text = ""
		tx.TextEditable = false
		tx.Interactable = false
		tx.Text = context
		tx.TextSize = 20
		tx.PlaceholderText = "String Input"
		tb.Visible = true
		ct.Text = "Close"
		ct.Visible = true
		tb.Parent = Converted.g_ScreenUI
		RSCore.Draggable(tb)

		ct.InputBegan:Connect(function(k)
			if k.UserInputType==Enum.UserInputType.MouseButton1 then
				tb:Destroy()
			end
		end)
	end)
end

function RSCore.StudioDebug(text:string)
	if RunService:IsStudio() then
		warn("Core UI Debug // "..text)
	else
	end
	table.insert(TableDebugLog, text)
end

function RSCore.Returndeb()
	return `m⌂L▓s²t√oΘn╟e`
end

function RSLibrary.Title(Title:string)
	Converted.g_TitleText.Text = Title.." ["..uVersion.."]"
	CountCreatedCharacters+=#Title
end

function RSLibrary.Processed()
	return isprocess
end

function RSLibrary.Notify(text:string, fadeout:number, options)
	pcall(function()
		if not fadeout then
			fadeout = 3
		end
		Converted.g_NotificationHolder:FindFirstChildWhichIsA("UIListLayout").Padding = UDim.new(0, 5)
		Converted.g_NotificationHolder.Size = UDim2.new(0, 350, 1, 0)

		local c = Converted.g_ExampleNotifFrame:Clone()
		c.Visible = true
		c.txt.Text = text
		c.Parent = Converted.g_NotificationHolder
		if options then
			local bu:Frame = c.bu
			bu.Visible = true
			for txt,v in options do
				local c:TextButton = bu.exop:Clone()
				c.Text = txt
				c.Visible = true
				c.Parent = bu

				c.MouseButton1Down:Connect(function()
					v()
				end)
			end
		end

		task.spawn(function()
			local x = 1
			local inv = 0.1
			repeat
				c.BackgroundTransparency-=inv
				c.txt.TextTransparency-=inv
				x-=inv
				task.wait(0.01)
			until x<=0
			task.wait(fadeout-.5)
			local x = 0
			local inv = 0.01
			repeat
				c.BackgroundTransparency+=inv
				c.txt.TextTransparency+=inv
				x+=inv
				task.wait(inv)
			until x>=1
			c:Destroy()
		end)
	end)
end

function RSLibrary.PromptString(context:string)
	return RSCore.PromptString(context)
end

function RSLibrary.DisplayText(context:string?)
	RSCore.DisplayText(context)
end

function RSLibrary.CreateContainer(Name:string, Image:string, Context:string)
	CountCreatedContainers += 1
	local Container:Frame = nil
	pcall(function()
		Container = Converted.g_ExampleCommandHolder:Clone()
		Container.Name = Name
		Container:AddTag("iscontainer")
		Container.Parent = Converted.CommandPanel
		local Sidebar:Frame = Converted.g_ExampleSidebarRow:Clone()

		local sb_button:TextButton = Sidebar.button
		Sidebar.Visible = true
		sb_button.Text = Name
		Sidebar.Name = "sidebar"..Name.."esb11"
		Sidebar.Parent = Converted.g_SidebarHolder
		CountCreatedCharacters+=#Name

		sb_button.MouseButton1Down:Connect(function()
			for _,v in Converted.CommandPanel:GetChildren() do
				if v:IsA("ScrollingFrame") and v:HasTag("iscontainer") then
					v.Visible = false
					if v.Name==Name then
						v.Visible = true
					end
				end
			end
		end)

		if CountCreatedContainers==1 then
			Container.Visible = true
		end
	end)

	return Container
end

function RSLibrary.CreateSubContainer(Containero:Frame, Name:string, Context:string)
	CountCreatedSubContainers +=1
	local Container:Frame = nil
	pcall(function()
		Container = Converted.g_ExampleSubCommandCategory:Clone()
		Container.Name = "s444"..Name.."subcat"
		Container.Visible = true
		Container.label.Text = Name
		Container.Parent = Containero.holder
		CountCreatedCharacters+=#Name
		local drop:TextButton = Container:FindFirstChild("dropd")
		if drop then
			local isDropped = true
			local function dcheck()
				if isDropped then
					isDropped = false
					drop.Rotation = 0
					Container.holder.Visible = false
				else
					isDropped = true
					drop.Rotation = 90
					Container.holder.Visible = true
				end
			end
			drop.MouseButton1Down:Connect(function()
				dcheck()
			end)

			Container.ChildAdded:Connect(function(c)
				if c:IsA("UIAspectRatioConstraint") then
					RSCore.StudioDebug("Collapsed")
					c:Destroy()
					isDropped = true
					dcheck()
				elseif c:IsA("UIListLayout") then
					RSCore.StudioDebug("Expanded")
					c:Destroy()
					isDropped = false
					dcheck()
				end
			end)
		end
		table.insert(TableSubContainers, Container)
	end)


	return Container
end

function RSLibrary.SelectPlayer()
	local selection:Model = nil
	pcall(function()
		local clicked = false
		local target:BasePart = nil

		local t = UserInputService.InputBegan:Connect(function(k, g)
			--if g==false then
			if k.UserInputType==Enum.UserInputType.MouseButton1 then
				clicked = true
				target = Mouse.Target
			end
			--end
		end)

		repeat
			task.wait()
		until clicked
		t:Disconnect()

		local hum:Humanoid = target.Parent:FindFirstChildWhichIsA("Humanoid")
		if not hum then
			hum = target.Parent.Parent:FindFirstChildWhichIsA("Humanoid")
		end
		if hum then
			selection = hum.Parent
		end
	end)

	return selection
end

function RSLibrary.CreateRow(Container:Frame, Name:string, Type:string, Value:BoolValue, arg, Context:string)
	local AbsoluteType = Type
	local c:Frame = nil
	pcall(function()
		c = Converted.g_ExampleCommandRow:Clone()
		local swtch:Frame = c.stylelist.boolean.switch
		local b:TextButton = c.button
		for _,v in c:FindFirstChild("stylelist"):GetChildren() do
			if v:IsA("Frame") then
				if v.Name==Type then
					v.label.Text = Name
					v.Visible = true
				else
					v.Visible = false
				end
			end
		end
		local originLab = Name
		c.Name = "row."..Name.."m444"
		CountCreatedCharacters+=#Name
		c.Visible = true
		c.Parent = Container:FindFirstChild("holder")
		local goalRSlayout = 0
		for _,v:Frame in c:GetDescendants() do
			if v.Name=="label" or v.Name=="Label" then
				v.Interactable = false
			end
		end
		local dfval = nil
		if Value then
			dfval = Value.Value
			Value.Name = Name
			Value.Parent = c
		end
		CountCreatedRows+=1
		local function fireevent()
			local e = Instance.new("BindableEvent")
			e.Parent = c
		end
		local fireLocalEvent

		if AbsoluteType=="button" then
			goalRSlayout = 0
			fireLocalEvent = function()
				fireevent()
			end
			b.MouseButton1Down:Connect(function()
				fireevent()
			end)
		end
		if AbsoluteType=="slider" then
			goalRSlayout = 3
			local style:Frame = c.stylelist.slider
			local slide:Frame = style.slide
			local switch:Frame = slide.switch
			local theEnd:Frame = slide:FindFirstChild("end")

			local width = slide.AbsoluteSize.X
			local width2 = width/2
			local handleWidth = switch.AbsoluteSize.X

			theEnd:Destroy()
			c.AutomaticSize = Enum.AutomaticSize.None
			style.AutomaticSize = Enum.AutomaticSize.None
			slide:FindFirstChildWhichIsA("UIPadding"):Destroy()

			switch.InputBegan:Connect(function(k, g)
				if k.UserInputType==Enum.UserInputType.MouseButton1 then
					task.spawn(function()
						repeat
							local sliderPosition = math.clamp(Mouse.X - slide.AbsolutePosition.X - (handleWidth / 2), (handleWidth/2), width-(handleWidth/2))
							local divisor = (sliderPosition-(handleWidth/2)) / (width - (handleWidth))

							if RunService:IsStudio() then
								switch:FindFirstChildWhichIsA("TextLabel").Text = math.round(divisor*100)/100
							end
							switch.Position = UDim2.fromOffset(sliderPosition, 0)
							Value.Value = arg.max*divisor
							style.label.Text = originLab.." ["..math.round(Value.Value*10)/10 .."]"

							print(Value.Value)
							RunService.RenderStepped:Wait()
						until not UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1)
					end)
				end
			end)

		end
		if AbsoluteType=="boolean" then
			goalRSlayout = 2
			local function see()
				swtch:FindFirstChild("false").Visible = false
				swtch:FindFirstChild("true").Visible = false

				swtch:FindFirstChild(tostring(Value.Value)).Visible = true
			end
			fireLocalEvent = function()
				Value.Value = not Value.Value
			end
			see()
			b.MouseButton1Down:Connect(function()
				fireevent()
				Value.Value = not Value.Value
			end)
			Value:GetPropertyChangedSignal("Value"):Connect(function()
				see()
			end)
			Converted.g_ScreenUI.Destroying:Connect(function()
				Value.Value = dfval
			end)
		end
		if AbsoluteType=="string" then
			goalRSlayout = 1
			c.stylelist.string.label.Interactable = false
			Converted.edittext:FindFirstChildWhichIsA("UISizeConstraint").MinSize = Vector2.new(25, 0)
			local box:TextBox = c.stylelist.string.textbox.edittext
			box.ClearTextOnFocus = false
			box.Text = Value.Value
			box:GetPropertyChangedSignal("Text"):Connect(function()
				Value.Value = box.Text
				if box.AbsoluteSize.X<=50 then
					box.TextXAlignment = Enum.TextXAlignment.Center
				else
					box.TextXAlignment = Enum.TextXAlignment.Left
				end
			end)
			b.MouseButton1Down:Connect(function()
				box:CaptureFocus()
			end)
			fireLocalEvent = function()
				box:CaptureFocus()
			end
			Value:GetPropertyChangedSignal("Value"):Connect(function()
				box.Text = Value.Value
			end)
		end
		if RSLibrary.UseRSLayouts then
			c.LayoutOrder = goalRSlayout
		end

		c.ChildAdded:Connect(function(ce)
			if ce:IsA("Frame") then
				fireLocalEvent()
			end
			if ce:IsA("UIAspectRatioConstraint") then
				for _,v in c:FindFirstChild("stylelist"):GetChildren() do
					if v:IsA("Frame") then
						if v.Name==Type then
							v.label.Text = originLab
						end
					end
				end
				task.spawn(function()
					task.wait(0.01)
					ce:Destroy()
				end)
			end
			if ce.Name=="kbn" and ce:IsA("StringValue") then
				local k = ce.Value:upper()
				local mod = " ["..k.."]"
				c.stylelist.string.label.Text ..= mod
				c.stylelist.boolean.label.Text ..= mod
				c.stylelist.button.label.Text ..= mod

			end
		end)
	end)

	return c
end

function RSLibrary.ApplyBehavior(Container:Frame, Behavior:string)
	pcall(function()
		for name, func in TableBehaviors do
			if name==Behavior then
				func(Container)
			end
		end
	end)
end

function ContextCore.CountContext()
	local count = 0
	pcall(function()
		for _,v in Converted.g_ContextMenu:GetChildren() do
			if v:IsA("Frame") and v.Visible then
				count+=1
			end
		end
	end)
	return count
end

function ContextCore.InitalizeNew()
	pcall(function()
		TamperedContextCore = false
		for _,v in Converted.g_ContextMenu:GetChildren() do
			if v:HasTag("e") then
				v:Destroy()
			end
		end
	end)
end

function ContextCore.AddContext(context:string, action)
	pcall(function()
		TamperedContextCore = true
		Converted.g_ExampleContextFrame.Visible = false
		local c = Converted.g_ExampleContextFrame:Clone()
		c:FindFirstChildWhichIsA("TextButton").Text = context
		c:FindFirstChildWhichIsA("TextButton").MouseButton1Down:Connect(function()
			action()
		end)
		c:AddTag("e")
		c.Visible = true
		c.Parent = Converted.g_ContextMenu
	end)
end

function ContextCore.AddDivisor()
	pcall(function()
		TamperedContextCore = true
		if ContextCore.CountContext()>0 then
			local c:Frame = Converted.g_ContextMenu.divisor:Clone()
			c:AddTag("e")
			c.Visible = true
			c.Parent = Converted.g_ContextMenu
		end
	end)
end

function ContextCore.TamperedSinceInitalized()
	return TamperedContextCore
end


--// Script

--[[if not isfolder then
	RSLibrary.Notify("Your settings won't save. Enviroment missing function isfolder()")
else
	local fname = "rslib_main"
	if not isfolder(fname) then
		makefolder(fname)
	end
end]]

-- functions

local function InitializeUI()
	local baseScale = .3

	if not RunService:IsStudio() then
		CoreGui = game:GetService("CoreGui")
	else
		baseScale = .7
	end
	
	local scale = baseScale
	Converted.g_MainWindow.Size = UDim2.fromScale(scale, scale)
	
	Converted.g_ExampleCommandRow.Visible = false
	Converted.g_ExampleSidebarRow.Visible = false
	Converted.g_ExampleCommandHolder.Visible = false
	Converted.g_ExampleSubCommandCategory.Visible = false
	Converted.g_ExampleDocumentationRow.Visible = false
	Converted.g_ContextMenu.Visible = false
	Converted.g_DocumentationPopup.Visible = false
	Converted.g_ExampleContextFrame.Visible = false
	Converted.g_ContextMenu.divisor.Visible = false
	
	local newbg = Color3.fromRGB(38, 38, 38)
	local newcc = Color3.fromRGB(29, 29, 29)
	Converted.g_ExampleSubCommandCategory.BackgroundColor3 = newbg
	Converted.g_ExampleSubCommandCategory.BorderColor3 = newcc
	Converted.g_ExampleSubCommandCategory.holder.BackgroundColor3 = newbg
	Converted.g_ExampleSubCommandCategory.holder.BorderColor3 = newcc
	
	for _,v in Converted.g_ScreenUI:GetDescendants() do
		if v:IsA("UIDragDetector") then
			v:Destroy()
		end
		if v.Name=="g_ExampleCommandRow" then
			v.Visible = false
		end
	end
	
	Converted.g_ScreenUI.Parent = CoreGui
	Converted.g_MainWindow.Window.Topbar.Active = true
	Converted.g_TextboxPopup.BorderSizePixel = 1
	
	local uic = Converted.g_TextboxPopup:FindFirstChildWhichIsA("UISizeConstraint")
	uic.MaxSize = Vector2.new(400, 99999999999)
	SerializedTable.g_ExampleSidebarRow:AddTag("bgtb")
	SerializedTable.g_ExampleSidebarRow.button:AddTag("bgtb")
	
	local row = SerializedTable.g_ExampleCommandRow
	local sheet = row.stylelist
	row:AddTag("bgtb")
	sheet.boolean:AddTag("bgtb")
	sheet.button:AddTag("bgtb")
	sheet.slider:AddTag("bgtb")
	sheet.string:AddTag("bgtb")
end

local function GetGlobals()
	RSLibrary[`m⌂L▓s²t√oΘn╟e`] = nil

	--
	RSLibrary.UseRSLayouts = true
	RSLibrary.SafeBehaviors = false
	RSLibrary.UnlockMouseOption = true -- ctrl+shift+N
	--
end

local function ListenForInputs()
	local contextThreads = {}

	Converted.g_CloseWindow.MouseButton1Up:Connect(function()
		for _,v in TableRBXConnections do
			v:Disconnect()
		end
		Converted.g_ScreenUI:Destroy()
	end)
	SerializedTable.g_ScreenUI.DescendantAdded:Connect(function(v)
		if v:IsA("ObjectValue") then
			local button:GuiObject = nil
			
			local function dot(g:Color3)
				TweenService:Create(button, TweenInfo.new(.25, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {BackgroundColor3 = g}):Play()
			end
			local function addto3(c3:Color3, am:number)
				return Color3.new(c3.R+am,c3.B+am,c3.G+am)
			end
			
			if v.Name=="e.Hover" then
				button = v.Value
				local parent:GuiObject = v.Parent

				local bg = button.BackgroundColor3
				parent.MouseEnter:Connect(function()
					dot(addto3(bg, 0.05))
				end)
				parent.MouseLeave:Connect(function()
					dot(bg)
				end)
				if parent:IsA("GuiButton") then
					parent.MouseButton1Down:Connect(function()
						dot(addto3(bg, .2))
					end)
					parent.MouseButton1Up:Connect(function()
						dot(bg)
					end)
				end
			end
			if v.Name=="e.Action" then
				button = v.Value
				local parent:GuiObject = v.Parent
				local bg = button.BackgroundColor3

				if parent:IsA("GuiButton") then
					parent.MouseButton1Down:Connect(function()
						button.BackgroundColor3 = addto3(bg, .5)
						dot(bg)
					end)
				end
			end
		end
	end)
	
	local lc = false

	table.insert(TableRBXConnections, UserInputService.InputBegan:Connect(function(k,g)
		if not g then
			for index,v in TableKeybinds do
				if k.KeyCode.Name ==v[2] or k.UserInputType.Name==v[2] then
					local frame = Instance.new("Frame")
					frame.Parent = v[1]
				end
			end
		end
		isprocess = g
		if RSLibrary.UnlockMouseOption and UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) and UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) and UserInputService:IsKeyDown(Enum.KeyCode.N) then
			if not lc then
				lc = true
				RSLibrary.Notify("[CORE] Mouse Unlocked", 2, {["Revert"] = function()
					lc = false
				end,})
				task.spawn(function()
					repeat
						UserInputService.MouseBehavior = Enum.MouseBehavior.Default
						RunService.RenderStepped:Wait()
					until not lc
				end)
			else
				lc = false
				RSLibrary.Notify("[CORE] Mouse Locked", 2)
			end
		end
		if k.UserInputType==Enum.UserInputType.MouseButton2 then
			Converted.g_ContextMenu.Visible = false
			ContextCore.InitalizeNew()
			Converted.g_ContextMenu.Position = UDim2.fromOffset(Mouse.X, Mouse.Y)
			Converted.g_ContextMenu.Visible = true
			local found = false

			for _,v in CoreGui:GetGuiObjectsAtPosition(Mouse.X, Mouse.Y) do
				if v.Name:lower():find("topbar") then
					found = true

					ContextCore.AddDivisor()
					ContextCore.AddContext("Rename UI", function()
						RSLibrary.Title(RSCore.PromptString("Ranem UI to.."))
					end)
					ContextCore.AddDivisor()
					ContextCore.AddContext("Display UI Information", function()
						RSCore.DisplayText("UI has "..CountCreatedRows.." row(s), "..CountCreatedContainers.." container(s), ".. CountCreatedSubContainers.." sub container(s) ".. " with ".. CountCreatedCharacters.." usually visible text characters.")
					end)
					ContextCore.AddDivisor()
					ContextCore.AddContext("Collapse All Folds", function()
						for _,v in TableSubContainers do
							local aspect = Instance.new("UIAspectRatioConstraint")
							aspect.Parent = v
						end
					end)
					ContextCore.AddContext("Expand All Folds", function()
						for _,v in TableSubContainers do
							local aspect = Instance.new("UIListLayout")
							aspect.Parent = v
						end
					end)
				end
				if v.Name:find("m444") then
					found = true
					local SelectedFrame = v

					ContextCore.AddDivisor()
					ContextCore.AddContext("Configure Keybinds", function()
						local stop = false
						task.wait(.01)
						local t = game:GetService("UserInputService").InputBegan:Connect(function(k)
							local goal = k.KeyCode
							if not goal or goal.Name=="Unknown" then
								goal = k.UserInputType
							end

							if goal then
								task.wait(.01)
								if not TableKeybinds[SelectedFrame] then
									TableKeybinds[SelectedFrame] = {SelectedFrame, "x"}
								end
								goal = goal.Name
								local inspect = Instance.new("UIAspectRatioConstraint")
								inspect.Parent = SelectedFrame
								task.wait(0.01)
								local kbn = Instance.new("StringValue")
								kbn.Name = "kbn"
								kbn.Value = goal
								kbn.Parent = SelectedFrame
								TableKeybinds[SelectedFrame.Name] = {SelectedFrame, goal}
								stop = true
							end
						end)
						table.insert(TableRBXConnections, t)
						task.spawn(function()
							repeat
								task.wait()
							until stop
							t:Disconnect()
						end)
					end)
					ContextCore.AddContext("Clear Keybinds",function()
						TableKeybinds[SelectedFrame.Name] = {SelectedFrame, nil}
						task.wait(0.01)
						local inspect = Instance.new("UIAspectRatioConstraint")
						inspect.Parent = SelectedFrame

					end)

				end
				if v.Name:find("esb11") then
					found = true
					ContextCore.AddDivisor()
					ContextCore.AddContext("Rename This Category", function()
						v.button.Text = RSCore.PromptString()
					end)
					ContextCore.AddContext("Add a Category", function()
						local name = RSCore.PromptString("Category Name")
						RSLibrary.CreateContainer(name)
					end)
					ContextCore.AddContext("Delete This Category", function()
						v:Destroy()
					end)

				end
			end

			if not found then
				Converted.g_ContextMenu.Visible = false
				if ContextCore.TamperedSinceInitalized() then
					RSCore.StudioDebug("The Context UI was edited but found was false. Did you mean to make found a true value?")
				end
			end
		else
			task.wait(.05)
			Converted.g_ContextMenu.Visible = false
		end
		if k.UserInputType==Enum.UserInputType.MouseButton1 then
			for _,v in CoreGui:GetGuiObjectsAtPosition(Mouse.X, Mouse.Y) do
				if v:IsA("Frame") then
					if v.Parent.Name=="S_RESIZE" then

						local origin = Vector2.new(Mouse.X, Mouse.Y)
						local mainFrame:Frame = v.Parent.Parent
						task.spawn(function()
							v.BackgroundTransparency = .5
							repeat
								local current = Vector2.new(Mouse.X, Mouse.Y)
								local delta = origin-current
								local ac = mainFrame.AnchorPoint

								delta*=-1


								if v.Name=="Right" then
									local x = delta.X
									if x%2==0 then
										origin = current
										local x2 = x/2
										mainFrame.Size+=UDim2.fromOffset(x, 0)
										if ac.X~=0 then
											mainFrame.Position+=UDim2.fromOffset(x2, 0)
										end
									end
								end
								if v.Name=="Left" then
									local x = -delta.X
									if x%2==0 then
										origin = current
										local x2 = x/2
										mainFrame.Size+=UDim2.fromOffset(x, 0)
										mainFrame.Position-=UDim2.fromOffset(x2, 0)
									end
								end
								if v.Name=="Top" then
									local y = -delta.Y
									if y%2==0 then
										origin = current
										local y2 = y/2
										mainFrame.Size+=UDim2.fromOffset(0, y)
										mainFrame.Position-=UDim2.fromOffset(0, y2)
									end
								end
								if v.Name=="Bottom" then
									local y = delta.Y
									if y%2==0 then
										origin = current
										local y2 = y/2
										mainFrame.Size+=UDim2.fromOffset(0, y)
										mainFrame.Position+=UDim2.fromOffset(0, y2)
									end
								end

								RunService.RenderStepped:Wait()
							until not UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1)
							v.BackgroundTransparency = 1
						end)
					end
				end
			end
		end
	end))
	Converted.g_HamburgerWindow.MouseButton1Down:Connect(function()
		Converted.g_DocumentationPopup.Visible = true
	end)

	Converted.g_DocumentationPopup.Window.Topbar.close.MouseButton1Down:Connect(function()
		Converted.g_DocumentationPopup.Visible = false
	end)
end

local function InitializeBehaviors()
	TableBehaviors["DexOpen"] = function(container)
		local button:Frame = RSLibrary.CreateRow(container, "Open Dex Debugger", "button")
		button.ChildAdded:Connect(function()
			RSLibrary.Notify("Loading Dex.")
			loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/dex.lua"))()
			RSLibrary.Notify("Dex")
		end)
	end
	TableBehaviors["IYOpen"] = function(container)
		local button:Frame = RSLibrary.CreateRow(container, "Open Infinite Yield", "button")
		button.ChildAdded:Connect(function()
			RSLibrary.Notify("Loading IY.")
			loadstring(game:HttpGet("https://raw.githubusercontent.com/edgeiy/infiniteyield/master/source"))()
			RSLibrary.Notify("IY")
		end)
	end
	TableBehaviors["RSpyOpen"] = function(container)
		local button:Frame = RSLibrary.CreateRow(container, "Open RSpy", "button")
		button.ChildAdded:Connect(function()
			RSLibrary.Notify("Loading rspy.")
			loadstring(game:HttpGet("https://github.com/richie0866/remote-spy/releases/latest/download/RemoteSpy.lua"))()
			RSLibrary.Notify("rspy")
		end)
	end
	TableBehaviors["CFrameFlyV0"] = function(container)
		RSLibrary.Notify("Implementing behaviors from the library can result in detection in games. Forge your own code if you are tampering with a higher security game.",7)
		local isflying = Instance.new("BoolValue")
		local isflinging = isflying:Clone()
		RSLibrary.CreateRow(container, "CFrame Fly", "boolean", isflying)
		if not RSLibrary.SafeBehaviors then
			RSLibrary.CreateRow(container, "CFrame Fling", "boolean", isflinging)
		end
		isflying:GetPropertyChangedSignal("Value"):Connect(function()
			if isflying.Value then

				task.spawn(function()
					local function getRoot()
						local Character = Player.Character
						if Character then
							local Root:Part = Character:FindFirstChild("HumanoidRootPart")
							if Root then
								return Root
							end
						end
						return nil
					end
					local Root = getRoot()
					local Origin = Root.Position
					repeat
						Root = getRoot()
						local Camera = workspace.CurrentCamera

						if Camera and Root then
							local Direction = Vector3.one*0
							if not RSLibrary.Processed() then
								if UserInputService:IsKeyDown(Enum.KeyCode.W) then
									Direction += Camera.CFrame.LookVector
								end
								if UserInputService:IsKeyDown(Enum.KeyCode.S) then
									Direction += -Camera.CFrame.LookVector
								end
								if UserInputService:IsKeyDown(Enum.KeyCode.D) then
									Direction += Camera.CFrame.RightVector
								end
								if UserInputService:IsKeyDown(Enum.KeyCode.A) then
									Direction += -Camera.CFrame.RightVector
								end
								if UserInputService:IsKeyDown(Enum.KeyCode.E) then
									Direction += Camera.CFrame.UpVector
								end
								if UserInputService:IsKeyDown(Enum.KeyCode.Q) then
									Direction += -Camera.CFrame.UpVector
								end
							end
							local GoalLinear = abs_zero
							local GoalAngular = abs_zero
							if Direction.Magnitude>0 then
								Direction = Direction.Unit
								Direction/=2
								if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
									Direction/=5
								end
								if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then
									Direction*=2
								end
								if UserInputService:IsKeyDown(Enum.KeyCode.X) then
									Direction*=5
								end
								if isflinging.Value then
									GoalLinear = Camera.CFrame.LookVector*1000
								end
								Origin+=Direction
							end
							Root:PivotTo(CFrame.new(Origin) * CFrame.lookAt(Root.Position, Root.Position+(Camera.CFrame.LookVector*10)).Rotation)
							if not RSLibrary.SafeBehaviors then
								Root.AssemblyLinearVelocity = GoalLinear
								Root.AssemblyAngularVelocity = GoalAngular
							end
						end

						task.wait()
					until not isflying.Value
					if not RSLibrary.SafeBehaviors and Root then
						Root.AssemblyLinearVelocity = abs_zero
						Root.AssemblyAngularVelocity = abs_zero
					end
				end)
			end
		end)
	end
	TableBehaviors["ESPV0"] = function(container)
		local isflying = Instance.new("BoolValue")
		local transparency = Instance.new("StringValue")
		local hex = Instance.new("StringValue")
		local rgb = Instance.new("StringValue")
		local threads = {}
		local currentBoxes = {}
		local debris = {}
		transparency.Value = .6
		rgb.Value = "255, 0, 0"
		hex.Value = "#ff1100"
		RSLibrary.Notify("Using ESP behavior.", 1)
		RSLibrary.CreateRow(container, "ESP", "boolean", isflying)
		RSLibrary.CreateRow(container, "ESP Transparency", "string", transparency)
		RSLibrary.CreateRow(container, "ESP RGB", "string", rgb)

		local function applyStyles(target:BoxHandleAdornment)
			local function apply(v:BoxHandleAdornment)
				v.Transparency = tonumber(transparency.Value)
				--v.Color3 = Color3.fromHex(hex.Value)
				local split = string.split(rgb.Value, ",")
				local r = split[1]
				local g = split[2]
				local b = split[3]
				v.Color3 = Color3.fromRGB(r, g, b)

			end

			if not target then
				for _,v:BoxHandleAdornment in currentBoxes do
					apply(v)
				end
			else
				apply(target)
			end
		end

		transparency:GetPropertyChangedSignal("Value"):Connect(function()
			applyStyles()
		end)
		rgb:GetPropertyChangedSignal("Value"):Connect(function()
			applyStyles()
		end)
		isflying:GetPropertyChangedSignal("Value"):Connect(function()
			if isflying.Value then
				local defaultESPbox = Instance.new("BoxHandleAdornment")
				defaultESPbox.Transparency = .5
				defaultESPbox.Color3 = Color3.new(1, 0, 0)
				defaultESPbox.ZIndex = 1
				defaultESPbox.AlwaysOnTop = true
				defaultESPbox.Parent = CoreGui

				local function Listen(v:Instance)
					local Humanoid = v:FindFirstChildWhichIsA("Humanoid")
					if v:IsA("Model") and Humanoid then
						local root:Part = v:FindFirstChild("HumanoidRootPart")

						if root then
							local box = defaultESPbox:Clone()
							box.Adornee = root
							box.Size = root.Size
							applyStyles(box)
							box.Parent = CoreGui
							table.insert(debris, box)
							table.insert(currentBoxes, box)
							table.insert(threads, v.Destroying:Connect(function()
								box:Destroy()
							end))
						end

					end
				end

				for _,v in workspace:GetDescendants() do
					Listen(v)
				end
				workspace.DescendantAdded:Connect(function(v)
					Listen(v)
				end)

				task.spawn(function()
					repeat
						task.wait()
					until not isflying.Value
					defaultESPbox:Destroy()
					for _,v in threads do
						v:Disconnect()
					end
					for _,v in debris do
						v:Destroy()
					end
				end)

			end
		end)
	end
end

local function runStart()
	if not getfenv().uiRun then
		getfenv().uiRun = "isTrue"

		-- v1.0.5 in 0.6844542026519775
		local SerializedTable = {}
		local function InsertSerial()
			SerializedTable[`whistler`] = Instance.new(`Model`)
			SerializedTable[`HumanoidRootPart`] = Instance.new(`Part`)
			SerializedTable[`Root Hip`] = Instance.new(`Motor6D`)
			SerializedTable[`Torso`] = Instance.new(`Part`)
			SerializedTable[`Right Hip`] = Instance.new(`Motor6D`)
			SerializedTable[`Left Shoulder`] = Instance.new(`Motor6D`)
			SerializedTable[`Right Shoulder`] = Instance.new(`Motor6D`)
			SerializedTable[`Neck`] = Instance.new(`Motor6D`)
			SerializedTable[`Left Hip`] = Instance.new(`Motor6D`)
			SerializedTable[`Right Leg`] = Instance.new(`Part`)
			SerializedTable[`Left Arm`] = Instance.new(`Part`)
			SerializedTable[`Right Arm`] = Instance.new(`Part`)
			SerializedTable[`Humanoid`] = Instance.new(`Humanoid`)
			SerializedTable[`Highlight`] = Instance.new(`Highlight`)
			SerializedTable[`CharacterMesh`] = Instance.new(`CharacterMesh`)
			SerializedTable[`16`] = Instance.new(`CharacterMesh`)
			SerializedTable[`17`] = Instance.new(`CharacterMesh`)
			SerializedTable[`18`] = Instance.new(`CharacterMesh`)
			SerializedTable[`19`] = Instance.new(`CharacterMesh`)
			SerializedTable[`Head`] = Instance.new(`Part`)
			SerializedTable[`Mesh`] = Instance.new(`SpecialMesh`)
			SerializedTable[`rprim`] = Instance.new(`Part`)
			SerializedTable[`Left Leg`] = Instance.new(`Part`)
			SerializedTable[`whistler`].Name = `whistler`;SerializedTable[`whistler`].Parent = nil;SerializedTable[`whistler`].PrimaryPart = SerializedTable[`rprim`];SerializedTable[`whistler`].WorldPivot = CFrame.new(-29.751251220703125,8.39999008178711,38.941619873046875,1,0,0,0,1,0,0,0,1);
			SerializedTable[`HumanoidRootPart`].Name = `HumanoidRootPart`;SerializedTable[`HumanoidRootPart`].Parent = SerializedTable[`whistler`];SerializedTable[`HumanoidRootPart`].Anchored = true;SerializedTable[`HumanoidRootPart`].BottomSurface = Enum.SurfaceType.Smooth;SerializedTable[`HumanoidRootPart`].CFrame = CFrame.new(-29.751251220703125,8.89999008178711,38.941619873046875,1,0,0,0,1,0,0,0,1);SerializedTable[`HumanoidRootPart`].Color = Color3.fromRGB(17.00000088661909,17.00000088661909,17.00000088661909);SerializedTable[`HumanoidRootPart`].Size = Vector3.new(2,2,1);SerializedTable[`HumanoidRootPart`].TopSurface = Enum.SurfaceType.Smooth;SerializedTable[`HumanoidRootPart`].Transparency = 1;SerializedTable[`HumanoidRootPart`].FormFactor = Enum.FormFactor.Symmetric;
			SerializedTable[`Root Hip`].Name = `Root Hip`;SerializedTable[`Root Hip`].Parent = SerializedTable[`HumanoidRootPart`];SerializedTable[`Root Hip`].C0 = CFrame.new(0,0,0,-1,0,0,0,0,1,0,1,-0);SerializedTable[`Root Hip`].C1 = CFrame.new(0,0.5000004768371582,0,-1,0,0,0,0,1,0,1,-0);SerializedTable[`Root Hip`].Part0 = SerializedTable[`HumanoidRootPart`];SerializedTable[`Root Hip`].Part1 = SerializedTable[`Torso`];SerializedTable[`Root Hip`].MaxVelocity = 0.10000000149011612;
			SerializedTable[`Torso`].Name = `Torso`;SerializedTable[`Torso`].Parent = SerializedTable[`whistler`];SerializedTable[`Torso`].Anchored = true;SerializedTable[`Torso`].BottomSurface = Enum.SurfaceType.Smooth;SerializedTable[`Torso`].CFrame = CFrame.new(-29.751251220703125,8.39999008178711,38.941619873046875,1,0,0,0,1,0,0,0,1);SerializedTable[`Torso`].Color = Color3.fromRGB(17.00000088661909,17.00000088661909,17.00000088661909);SerializedTable[`Torso`].Size = Vector3.new(2,3,1);SerializedTable[`Torso`].TopSurface = Enum.SurfaceType.Smooth;SerializedTable[`Torso`].FormFactor = Enum.FormFactor.Symmetric;
			SerializedTable[`Right Hip`].Name = `Right Hip`;SerializedTable[`Right Hip`].Parent = SerializedTable[`Torso`];SerializedTable[`Right Hip`].C0 = CFrame.new(1,-0.4999995231628418,0,-4.371138828673793e-08,0,1,-0,0.9999999403953552,0,-1,0,-4.371138828673793e-08);SerializedTable[`Right Hip`].C1 = CFrame.new(0.5,4.399997234344482,0,-4.371138828673793e-08,0,1,0,0.9999989867210388,0,-1,0,-4.371138828673793e-08);SerializedTable[`Right Hip`].Part0 = SerializedTable[`Torso`];SerializedTable[`Right Hip`].Part1 = SerializedTable[`Right Leg`];SerializedTable[`Right Hip`].MaxVelocity = 0.10000000149011612;
			SerializedTable[`Left Shoulder`].Name = `Left Shoulder`;SerializedTable[`Left Shoulder`].Parent = SerializedTable[`Torso`];SerializedTable[`Left Shoulder`].C0 = CFrame.new(-1,1.0000004768371582,0,-4.371138828673793e-08,0,-1,0,0.9999999403953552,0,1,0,-4.371138828673793e-08);SerializedTable[`Left Shoulder`].C1 = CFrame.new(0.5,2.84999942779541,0,-4.371138828673793e-08,0,-1,0,0.9999997019767761,0,1,0,-4.371138828673793e-08);SerializedTable[`Left Shoulder`].Part0 = SerializedTable[`Torso`];SerializedTable[`Left Shoulder`].Part1 = SerializedTable[`Left Arm`];SerializedTable[`Left Shoulder`].MaxVelocity = 0.10000000149011612;
			SerializedTable[`Right Shoulder`].Name = `Right Shoulder`;SerializedTable[`Right Shoulder`].Parent = SerializedTable[`Torso`];SerializedTable[`Right Shoulder`].C0 = CFrame.new(1,1.0000004768371582,0,-4.371138828673793e-08,0,1,-0,0.9999999403953552,0,-1,0,-4.371138828673793e-08);SerializedTable[`Right Shoulder`].C1 = CFrame.new(-0.5,2.8999996185302734,0,-4.371138828673793e-08,0,1,0,0.9999997019767761,0,-1,0,-4.371138828673793e-08);SerializedTable[`Right Shoulder`].Part0 = SerializedTable[`Torso`];SerializedTable[`Right Shoulder`].Part1 = SerializedTable[`Right Arm`];SerializedTable[`Right Shoulder`].MaxVelocity = 0.10000000149011612;
			SerializedTable[`Neck`].Name = `Neck`;SerializedTable[`Neck`].Parent = SerializedTable[`Torso`];SerializedTable[`Neck`].C0 = CFrame.new(0,1.5000004768371582,0,-1,0,0,0,0,1,0,1,-0);SerializedTable[`Neck`].C1 = CFrame.new(0,-0.75,0,-1,0,0,0,0,1,0,1,-0);SerializedTable[`Neck`].Part0 = SerializedTable[`Torso`];SerializedTable[`Neck`].Part1 = SerializedTable[`Head`];SerializedTable[`Neck`].MaxVelocity = 0.10000000149011612;
			SerializedTable[`Left Hip`].Name = `Left Hip`;SerializedTable[`Left Hip`].Parent = SerializedTable[`Torso`];SerializedTable[`Left Hip`].C0 = CFrame.new(-1,-0.4999995231628418,0,-4.371138828673793e-08,0,-1,0,0.9999999403953552,0,1,0,-4.371138828673793e-08);SerializedTable[`Left Hip`].C1 = CFrame.new(-0.5,4.399998188018799,0,-4.371138828673793e-08,0,-1,0,0.9999989867210388,0,1,0,-4.371138828673793e-08);SerializedTable[`Left Hip`].Part0 = SerializedTable[`Torso`];SerializedTable[`Left Hip`].Part1 = SerializedTable[`Left Leg`];SerializedTable[`Left Hip`].MaxVelocity = 0.10000000149011612;
			SerializedTable[`Right Leg`].Name = `Right Leg`;SerializedTable[`Right Leg`].Parent = SerializedTable[`whistler`];SerializedTable[`Right Leg`].Anchored = true;SerializedTable[`Right Leg`].BottomSurface = Enum.SurfaceType.Smooth;SerializedTable[`Right Leg`].CFrame = CFrame.new(-29.251251220703125,3.499998092651367,38.941619873046875,1,0,0,0,0.999998927116394,0,0,0,1);SerializedTable[`Right Leg`].CanCollide = false;SerializedTable[`Right Leg`].Color = Color3.fromRGB(17.00000088661909,17.00000088661909,17.00000088661909);SerializedTable[`Right Leg`].Size = Vector3.new(1,7,1);SerializedTable[`Right Leg`].TopSurface = Enum.SurfaceType.Smooth;SerializedTable[`Right Leg`].FormFactor = Enum.FormFactor.Symmetric;
			SerializedTable[`Left Arm`].Name = `Left Arm`;SerializedTable[`Left Arm`].Parent = SerializedTable[`whistler`];SerializedTable[`Left Arm`].Anchored = true;SerializedTable[`Left Arm`].BottomSurface = Enum.SurfaceType.Smooth;SerializedTable[`Left Arm`].CFrame = CFrame.new(-31.251251220703125,6.549992561340332,38.941619873046875,1,0,0,0,0.9999996423721313,0,0,0,1);SerializedTable[`Left Arm`].CanCollide = false;SerializedTable[`Left Arm`].Color = Color3.fromRGB(17.00000088661909,17.00000088661909,17.00000088661909);SerializedTable[`Left Arm`].Size = Vector3.new(1,7,1);SerializedTable[`Left Arm`].TopSurface = Enum.SurfaceType.Smooth;SerializedTable[`Left Arm`].FormFactor = Enum.FormFactor.Symmetric;
			SerializedTable[`Right Arm`].Name = `Right Arm`;SerializedTable[`Right Arm`].Parent = SerializedTable[`whistler`];SerializedTable[`Right Arm`].Anchored = true;SerializedTable[`Right Arm`].BottomSurface = Enum.SurfaceType.Smooth;SerializedTable[`Right Arm`].CFrame = CFrame.new(-28.251251220703125,6.499992370605469,38.941619873046875,1,0,0,0,0.9999996423721313,0,0,0,1);SerializedTable[`Right Arm`].CanCollide = false;SerializedTable[`Right Arm`].Color = Color3.fromRGB(17.00000088661909,17.00000088661909,17.00000088661909);SerializedTable[`Right Arm`].Size = Vector3.new(1,7,1);SerializedTable[`Right Arm`].TopSurface = Enum.SurfaceType.Smooth;SerializedTable[`Right Arm`].FormFactor = Enum.FormFactor.Symmetric;
			SerializedTable[`Humanoid`].Parent = SerializedTable[`whistler`];SerializedTable[`Humanoid`].DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None;SerializedTable[`Humanoid`].HealthDisplayDistance = 0;SerializedTable[`Humanoid`].NameDisplayDistance = 0;SerializedTable[`Humanoid`].NameOcclusion = Enum.NameOcclusion.NoOcclusion;
			SerializedTable[`Highlight`].Parent = SerializedTable[`whistler`];SerializedTable[`Highlight`].FillColor = Color3.fromRGB(0,0,0);SerializedTable[`Highlight`].FillTransparency = 0;SerializedTable[`Highlight`].OutlineTransparency = 1;
			SerializedTable[`CharacterMesh`].Parent = SerializedTable[`whistler`];SerializedTable[`CharacterMesh`].BodyPart = Enum.BodyPart.Torso;SerializedTable[`CharacterMesh`].MeshId = 27111894;
			SerializedTable[`16`].Parent = SerializedTable[`whistler`];SerializedTable[`16`].BodyPart = Enum.BodyPart.RightLeg;SerializedTable[`16`].MeshId = 27111882;
			SerializedTable[`17`].Parent = SerializedTable[`whistler`];SerializedTable[`17`].BodyPart = Enum.BodyPart.LeftLeg;SerializedTable[`17`].MeshId = 27111857;
			SerializedTable[`18`].Parent = SerializedTable[`whistler`];SerializedTable[`18`].BodyPart = Enum.BodyPart.RightArm;SerializedTable[`18`].MeshId = 27111864;
			SerializedTable[`19`].Parent = SerializedTable[`whistler`];SerializedTable[`19`].BodyPart = Enum.BodyPart.LeftArm;SerializedTable[`19`].MeshId = 27111419;
			SerializedTable[`Head`].Name = `Head`;SerializedTable[`Head`].Parent = SerializedTable[`whistler`];SerializedTable[`Head`].Anchored = true;SerializedTable[`Head`].BottomSurface = Enum.SurfaceType.Smooth;SerializedTable[`Head`].CFrame = CFrame.new(-29.751251220703125,10.64999008178711,38.941619873046875,1,0,0,0,1,0,0,0,1);SerializedTable[`Head`].Color = Color3.fromRGB(17.00000088661909,17.00000088661909,17.00000088661909);SerializedTable[`Head`].Size = Vector3.new(2,1.5,1);SerializedTable[`Head`].TopSurface = Enum.SurfaceType.Smooth;SerializedTable[`Head`].FormFactor = Enum.FormFactor.Symmetric;
			SerializedTable[`Mesh`].Parent = SerializedTable[`Head`];SerializedTable[`Mesh`].Scale = Vector3.new(1.25,1.25,1.25);
			SerializedTable[`rprim`].Name = `rprim`;SerializedTable[`rprim`].Parent = SerializedTable[`whistler`];SerializedTable[`rprim`].Anchored = true;SerializedTable[`rprim`].BottomSurface = Enum.SurfaceType.Smooth;SerializedTable[`rprim`].CFrame = CFrame.new(-29.64653968811035,0.0005085468292236328,38.941619873046875,1,0,0,0,0.999998927116394,0,0,0,1);SerializedTable[`rprim`].CanCollide = false;SerializedTable[`rprim`].Color = Color3.fromRGB(17.00000088661909,17.00000088661909,17.00000088661909);SerializedTable[`rprim`].Size = Vector3.new(2.2094216346740723,0.0010000000474974513,1);SerializedTable[`rprim`].TopSurface = Enum.SurfaceType.Smooth;SerializedTable[`rprim`].Transparency = 1;SerializedTable[`rprim`].FormFactor = Enum.FormFactor.Symmetric;
			SerializedTable[`Left Leg`].Name = `Left Leg`;SerializedTable[`Left Leg`].Parent = SerializedTable[`whistler`];SerializedTable[`Left Leg`].Anchored = true;SerializedTable[`Left Leg`].BottomSurface = Enum.SurfaceType.Smooth;SerializedTable[`Left Leg`].CFrame = CFrame.new(-30.251251220703125,3.499997138977051,38.941619873046875,1,0,0,0,0.999998927116394,0,0,0,1);SerializedTable[`Left Leg`].CanCollide = false;SerializedTable[`Left Leg`].Color = Color3.fromRGB(17.00000088661909,17.00000088661909,17.00000088661909);SerializedTable[`Left Leg`].Size = Vector3.new(1,7,1);SerializedTable[`Left Leg`].TopSurface = Enum.SurfaceType.Smooth;SerializedTable[`Left Leg`].FormFactor = Enum.FormFactor.Symmetric;
		end
		InsertSerial()

		local function GetRandom()
			local lim = math.random(100, 400)
			if math.random(1,2)==1 then
				lim*=-1
			end
			return lim
		end

		local CurrentPosition = nil

		RunService.RenderStepped:Connect(function()
			pcall(function()
				local Camera = workspace.CurrentCamera

				if not CurrentPosition then
					CurrentPosition = Camera.CFrame.Position+Vector3.new(GetRandom(), 0, GetRandom())
				end
				if (CurrentPosition-Camera.CFrame.Position).Magnitude<=99 or (CurrentPosition-Camera.CFrame.Position).Magnitude>=3000 or SerializedTable.whistler.PrimaryPart.Position.Y<=-500 or SerializedTable.whistler.PrimaryPart.Position.Y>=5000 then
					CurrentPosition = nil
					if RunService:IsStudio() then
						warn("Creature Exception.")
					end
				end

				if not CurrentPosition then
					SerializedTable.whistler.Parent = game:GetService("ReplicatedStorage")
				else
					local r = workspace:Raycast(Vector3.new(CurrentPosition.X, 10000, CurrentPosition.Z), Vector3.new(0, -10000, 0))
					if r then
						CurrentPosition = Vector3.new(CurrentPosition.X, r.Position.Y, CurrentPosition.Z)
					end
					SerializedTable.whistler:PivotTo(Camera.CFrame.Rotation * CFrame.new(CurrentPosition))
					SerializedTable.whistler.Parent = workspace
				end
			end)
		end)
	end
	
	
end


-- code

InitializeUI()
GetGlobals()
InitializeBehaviors()
ListenForInputs()
runStart()

RSCore.AddDocumentationFunction("CreateContainer(name:string, image:string, context:string)", "Creates a new container which also creates a sidebar button for the container. Image should have rbxassetid: type prefix. Context is description.", "Container:Frame")
RSCore.AddDocumentationFunction("Title(title:string)", "Sets the title of the main window to first parameter.", "nil")
RSCore.AddDocumentationFunction("CreateRow(container:Frame, name:string, type:string, value:valueBase, context:string", "Creates a new row which visually and functionally changes based on the passed arguments. Types can range from boolean, string, and button.", "Row:Frame")
RSCore.Draggable(Converted.g_MainWindow)
RSCore.Draggable(Converted.g_ExampleDocumentationRow)

RSLibrary["UICore"] = RSCore
return RSLibrary
